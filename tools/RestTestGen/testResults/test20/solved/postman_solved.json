{
  "openapi": "3.0.3",
  "servers": [
    {
      "url": "https://api.getpostman.com"
    }
  ],
  "info": {
    "contact": {},
    "description": "The Postman API allows you to programmatically access data stored in Postman account with ease.\n\nThe easiest way to get started with the API is to click the **fork** button to fork this collection to your own workspace and use Postman to send requests.\n\n\n# Overview\n\n1. You need a valid \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e to send requests to the API endpoints. You can get your key from the [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n\n1. The API has an access \u003ca href\u003d\"#rate-limits\"\u003erate limit\u003c/a\u003e applied to it.\n\n1. The Postman API will only respond to secured communication done over HTTPS. HTTP requests will be sent a `301` redirect to corresponding HTTPS resources.\n\n1. Response to every request is sent in [JSON format](https://en.wikipedia.org/wiki/JSON). In case the API request results in an error, it is represented by an `\"error\": {}` key in the JSON response.\n\n1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman, and `POST` implies you want to save something new to Postman.\n\n1. The API calls will respond with appropriate [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for all requests. Within Postman Client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A `200 OK` indicates all went well, while `4XX` or `5XX` response codes indicate an error from the requesting client or our API servers respectively.\n\n1. Individual resources in your Postman Account is accessible using its unique id (`uid`). The `uid` is a simple concatenation of the resource owner\u0027s user-id and the resource-id. For example, a collection\u0027s `uid` is `{{owner_id}}-{{collection_id}}`.\n\n# Authentication\n\nAn API Key is required to be sent as part of every request to the Postman API, in the form of an `X-Api-Key` request header.\n\n\u003e If you do not have an API Key, you can easily generate one by heading over to the [Postman Integrations Dashboard](https://go.postman.co/integrations/services/pm_pro_api).\n\nAn API Key tells our API server that the request it received came from you. Everything that you have access to in Postman is accessible with an API Key that is generated by you.\n\nFor ease of use inside Postman, you could store your API key in an [environment variable](https://www.getpostman.com/docs/environments) called `postman_api_key` and this [Collection](https://www.getpostman.com/docs/collections) will automatically use it to make API calls.\n\n## API Key related error response\n\nIf an API Key is missing, malformed, or invalid, you will receive a `401 Unauthorised` response code and the following JSON response:\n\n```\n{\n  \"error\": { \n    \"name\": \"AuthenticationError\",\n    \"message\": \"API Key missing. Every request requires an API Key to be sent.\"\n  }\n}\n```\n\n## Using the API Key as a query parameter\n\nEvery request that accepts API Key as `X-Api-Key` request header, also accepts the key when sent as `apikey` URL query parameter.\n\nAPI key sent as part of the header has a higher priority in case you send the key using both request header and query parameter.\n\n\n# Rate Limits\n\nAPI access rate limits are applied at a per-key basis in unit time. Access to the API using a key is limited to **60 requests per minute**. In addition, every API response is accompanied by the following set of headers to identify the status of your consumption.\n\n\n| Header                  | Description |\n|-------------------------|-------------|\n| `X-RateLimit-Limit`     | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset`     | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n\nOnce you hit the rate limit, you will receive a response similar to the following JSON, with a status code of `429 Too Many Requests`.\n\n```json\n{\n  \"error\": {\n    \"name\": \"rateLimitError\",\n    \"message\": \"Rate Limit exceeded. Please retry at 1465452702843\"\n  }\n}\n```\n\n\n# Support\n\nFor help regarding accessing the Postman API, feel free to discuss it in our [Discourse Community](https://community.getpostman.com). You can also drop in a line at [help@getpostman.com](mailto:help@getpostman.com).\n\nIn the event you receive a `503` response from our servers, it implies that we have hit an unexpected spike in API access traffic and would usually be operational within the next 5 minutes. If the outage persists, or your receive any other form of `5XX` error, kindly let us know.\n\n\n# Terms of Use\n\nFor information on API terms of use and privacy, refer to our terms at [http://postman.com/legal/terms/](http://postman.com/legal/terms/) and our privacy policy at [https://www.postman.com/legal/privacy-policy/](https://www.postman.com/legal/privacy-policy/).\n\n\n# API Reference",
    "title": "Postman API",
    "version": "1.20.0",
    "x-apisguru-categories": [
      "developer_tools"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.vectorlogo.zone_logos_getpostman_getpostman-ar21.svg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://gist.githubusercontent.com/MikeRalphson/f5dd7e7e712a4f2caa8f1783f1053dbc/raw/05fb7ae8b877b37d93413a0b8183bf60c2e1bdfe/postman-api.yaml",
        "version": "3.0"
      }
    ],
    "x-providerName": "getpostman.com"
  },
  "tags": [
    {
      "name": "Collections"
    },
    {
      "name": "Environments"
    },
    {
      "name": "Mocks"
    },
    {
      "name": "Monitors"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "User"
    },
    {
      "name": "Import"
    },
    {
      "name": "API"
    },
    {
      "description": "This folder contains the requests around API versions.",
      "name": "API Version"
    },
    {
      "description": "This folder contains all the endpoints related to Schemas.",
      "name": "Schema"
    },
    {
      "description": "This contains requests related to relations. \n\nRelations can be of the following types: \n- `contracttest`\n- `integrationtest`\n- `documentation`\n- `testsuite`\n- `environment`\n- `mock`\n- `monitor`",
      "name": "Relations"
    },
    {
      "description": "With webhooks you can trigger a collection at a specific time with your own custom payload which can then be accessed in the collection.\n\nLearn more about webhooks in our [learning center](https://learning.postman.com/docs/designing-and-developing-your-api/monitoring-your-api/integrations-for-alerts/).",
      "name": "Webhooks"
    }
  ],
  "paths": {
    "/apis": {
      "get": {
        "description": "This call fetches all the APIs present in the specified workspace\n\nResponse contains an array named `apis` which would contain all the details of APIs present in the workspace.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getAllApIs",
        "parameters": [
          {
            "description": "Only return APIs that are inside the given workspace.",
            "in": "query",
            "name": "workspace",
            "schema": {
              "example": "{{workspaceId}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs that have been updated after this time. Time is represented using the ISO 8601 date and time format.",
            "in": "query",
            "name": "since",
            "schema": {
              "example": "{{since}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs that have been updated before this time. Time is represented using the ISO 8601 date and time format.",
            "in": "query",
            "name": "until",
            "schema": {
              "example": "{{until}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs that have been created by the user ID represented by the given value.",
            "in": "query",
            "name": "createdBy",
            "schema": {
              "example": "{{createdBy}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs that have been updated by the user ID represented by the given value.",
            "in": "query",
            "name": "updatedBy",
            "schema": {
              "example": "{{updatedBy}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs with the corresponding privacy state. Public APIs have the isPublic value true; private APIs have the isPublic value false.",
            "in": "query",
            "name": "isPublic",
            "schema": {
              "example": "{{isPublic}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs whose name includes the given value. Matching is case insensitive.",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "{{name}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs whose summary includes the given value. Matching is case insensitive.",
            "in": "query",
            "name": "summary",
            "schema": {
              "example": "{{summary}}",
              "type": "string"
            }
          },
          {
            "description": "Only return APIs whose description includes the given value. Matching is case insensitive.",
            "in": "query",
            "name": "description",
            "schema": {
              "example": "{{description}}",
              "type": "string"
            }
          },
          {
            "description": "The value of sort can be one of the names of the fields included in the response.",
            "in": "query",
            "name": "sort",
            "schema": {
              "example": "{{sort}}",
              "type": "string"
            }
          },
          {
            "description": "The sorting direction, which can be ascending or descending. The value can be asc to specify an ascending direction or desc to specify a descending direction. If none is specified, the default sorting direction is descending for timestamp and numeric fields and ascending otherwise. An ID is not considered a numeric field.",
            "in": "query",
            "name": "direction",
            "schema": {
              "example": "{{direction}}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get all APIs",
        "tags": [
          "API"
        ]
      },
      "post": {
        "description": "This call creates a new API with a default API Version.  \n\nRequest body should contain an `api` object which should atleast have a property `name`.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description`, etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createApi",
        "parameters": [
          {
            "in": "query",
            "name": "workspace",
            "schema": {
              "example": "{{workspaceId}}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "api": {
                  "description": "This is description.",
                  "name": "Sync Service API",
                  "summary": "This is supposed to be a short summary."
                }
              },
              "schema": {
                "properties": {
                  "api": {
                    "properties": {
                      "description": {
                        "example": "This is description.",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "Sync Service API",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "summary": {
                        "example": "This is supposed to be a short summary.",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create API": {
                    "value": {
                      "api": {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is supposed to handle markdown *descriptions*.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "api": {
                      "properties": {
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "description": {
                          "example": "This is supposed to handle markdown *descriptions*.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "387c2863-6ee3-4a56-8210-225f774edade",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sync API",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "summary": {
                          "example": "This is a summary",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create API"
          }
        },
        "summary": "Create API",
        "tags": [
          "API"
        ]
      }
    },
    "/apis/{apiId}": {
      "delete": {
        "description": "This call deletes an existing API having the specified id.  \n\nResponse contains an `api` object with `id` of the API which was deleted.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteAnApi",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Delete an API": {
                    "value": {
                      "api": {
                        "id": "387c2863-6ee3-4a56-8210-225f774edade"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "api": {
                      "properties": {
                        "id": {
                          "example": "387c2863-6ee3-4a56-8210-225f774edade",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Delete an API"
          }
        },
        "summary": "Delete an API",
        "tags": [
          "API"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This call fetches a single API having the specified id.\n\nResponse contains an `api` object with all the details related to the queried API, namely, `id`, `name`, `summary`, `description` etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleApi",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get single API": {
                    "value": {
                      "api": {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is a description.This is a description.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "api": {
                      "properties": {
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "description": {
                          "example": "This is a description.This is a description.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "387c2863-6ee3-4a56-8210-225f774edade",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sync API",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "summary": {
                          "example": "This is a summary",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get single API"
          }
        },
        "summary": "Single API",
        "tags": [
          "API"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This call updates an existing API .  \n\nRequest body should contain an `api` object which should have the fields to be updated. Only `name`, `summary` and `description` fields can be edited for an API.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description` etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateAnApi",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "api": {
                  "description": "This is an updated Description",
                  "name": "New name"
                }
              },
              "schema": {
                "properties": {
                  "api": {
                    "properties": {
                      "description": {
                        "example": "This is an updated Description",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "New name",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Update an API": {
                    "value": {
                      "api": {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is a description.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "api": {
                      "properties": {
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "description": {
                          "example": "This is a description.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "387c2863-6ee3-4a56-8210-225f774edade",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sync API",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "summary": {
                          "example": "This is a summary",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Update an API"
          }
        },
        "summary": "Update an API",
        "tags": [
          "API"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions": {
      "get": {
        "description": "This call fetches details about the all the API Versions in the specified API.\n\nThe response will contain an array `versions` object which would be a list of all the API Version along with their details.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getAllApiVersions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get All API versions": {
                    "value": {
                      "versions": [
                        {
                          "createdAt": "2019-02-12 19:34:49",
                          "createdBy": "5665",
                          "description": "Description",
                          "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                          "name": "0.1",
                          "summary": "Summary",
                          "updatedAt": "2019-02-12 19:34:49"
                        },
                        {
                          "createdAt": "2019-02-12 19:34:49",
                          "createdBy": "5665",
                          "description": "Description",
                          "id": "00932d3b-20f1-454f-a77e-38b4023163ea",
                          "name": "0.2",
                          "summary": "Summary",
                          "updatedAt": "2019-02-12 19:34:49"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "versions": {
                      "items": {
                        "properties": {
                          "createdAt": {
                            "example": "2019-02-12 19:34:49",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "createdBy": {
                            "example": "5665",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "description": {
                            "example": "Description",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "0.1",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "summary": {
                            "example": "Summary",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-02-12 19:34:49",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get All API versions"
          }
        },
        "summary": "Get All API Versions",
        "tags": [
          "API",
          "API Version"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "description": "This call creates a new API version in the specified API.  \n\nRequest body should contain a `version` object which should have fields:\n\n\u003ctable\u003e\n\u003ctr\u003e\n\t\u003ctd\u003ename\u003c/td\u003e\n\t\u003ctd\u003eRequired. Name of the API Version\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\t\u003ctd\u003esource\u003c/td\u003e\n\t\u003ctd\u003e\n\t\tIf specified, it will copy the contents of the specified api version to create a new api verison.\n\t\t\u003ctable\u003e\n\t\t\t\u003ctr\u003e\n\t\t\t\t\u003ctd\u003eid\u003c/td\u003e\n\t\t\t\t\u003ctd\u003eRequired. Id of the apiversion from where the details are to be copied\u003c/td\u003e\n\t\t\t\u003c/tr\u003e\n\t\t\t\u003ctr\u003e\n\t\t\t\t\u003ctd\u003eschema\u003c/td\u003e\n\t\t\t\t\u003ctd\u003eBoolean. If true then copies the schema from the specified api version\u003c/td\u003e\n\t\t\t\u003c/tr\u003e\n\t\t\t\u003ctr\u003e\n\t\t\t\t\u003ctd\u003erelations\u003c/td\u003e\n\t\t\t\t\u003ctd\u003eObject. {\"\u0026lt;relationType\u0026gt;\": true/false}.  \n\t\t\t\t\tAllowed relation types are `mock`, `monitor`, `documentation`, `contracttest`, `integrationtest`, `testsuite`, `environment`\n\t\t\t\tRelation types which should be copied over to the new api verison\u003c/td\u003e\n\t\t\t\u003c/tr\u003e\n\t\t\u003c/table\u003e\n\t\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createApiVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": {
                  "name": "1.0",
                  "source": {
                    "id": "{{apiVersionId}}",
                    "relations": {
                      "documentation": true,
                      "mock": true,
                      "monitor": true
                    },
                    "schema": true
                  }
                }
              },
              "schema": {
                "properties": {
                  "version": {
                    "properties": {
                      "name": {
                        "example": "1.0",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "source": {
                        "properties": {
                          "id": {
                            "example": "{{apiVersionId}}",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "relations": {
                            "properties": {
                              "documentation": {
                                "example": true,
                                "type": "boolean",
                                "in": "REQUEST_BODY"
                              },
                              "mock": {
                                "example": true,
                                "type": "boolean",
                                "in": "REQUEST_BODY"
                              },
                              "monitor": {
                                "example": true,
                                "type": "boolean",
                                "in": "REQUEST_BODY"
                              }
                            },
                            "type": "object",
                            "in": "REQUEST_BODY"
                          },
                          "schema": {
                            "example": true,
                            "type": "boolean",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create API version": {
                    "value": {
                      "version": {
                        "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                        "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                        "name": "1.0"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "version": {
                      "properties": {
                        "api": {
                          "example": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "1.0",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create API version"
          }
        },
        "summary": "Create API Version",
        "tags": [
          "API",
          "API Version"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}": {
      "delete": {
        "description": "This call deletes an existing API Version having the specified id.  \n\nResponse contains an `version` object with `id` of the API Version which was deleted.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteAnApiVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Delete an API version": {
                    "value": {
                      "version": {
                        "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "version": {
                      "properties": {
                        "id": {
                          "example": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Delete an API version"
          }
        },
        "summary": "Delete an API Version",
        "tags": [
          "API",
          "API Version"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This call fetches details about the specified API Version.\n\nThe response will contain a `version` object which would contain all the details of the API Version.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getAnApiVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get an API version": {
                    "value": {
                      "version": {
                        "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                        "createdAt": "2019-07-21T16:31:15.000Z",
                        "createdBy": "5665",
                        "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                        "name": "0.1",
                        "schema": [
                          "3484cd1e-e00d-4c39-aea4-539663afe898"
                        ],
                        "updatedAt": "2019-07-21T16:31:15.000Z",
                        "updatedBy": "5665"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "version": {
                      "properties": {
                        "api": {
                          "example": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdAt": {
                          "example": "2019-07-21T16:31:15.000Z",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "0.1",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "schema": {
                          "items": {
                            "example": "3484cd1e-e00d-4c39-aea4-539663afe898",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-07-21T16:31:15.000Z",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get an API version"
          }
        },
        "summary": "Get an API Version",
        "tags": [
          "API",
          "API Version"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This call updates an existing API Version.  \n\nRequest body should contain a `version` object with the fields which need to be updated. Only field which can be updated is `name`.\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api` etc.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateAnApiVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": {
                  "name": "2.0"
                }
              },
              "schema": {
                "properties": {
                  "version": {
                    "properties": {
                      "name": {
                        "example": "2.0",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Update an API version": {
                    "value": {
                      "version": {
                        "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                        "createdAt": "2019-07-26T11:24:15.000Z",
                        "createdBy": "12",
                        "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                        "name": "2.0",
                        "updatedAt": "2019-08-09T09:27:36.000Z",
                        "updatedBy": "5665"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "version": {
                      "properties": {
                        "api": {
                          "example": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdAt": {
                          "example": "2019-07-26T11:24:15.000Z",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "12",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "2.0",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-08-09T09:27:36.000Z",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Update an API version"
          }
        },
        "summary": "Update an API Version",
        "tags": [
          "API",
          "API Version"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/contracttest": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getContractTestRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get contract test relations": {
                    "value": {
                      "contracttest": [
                        {
                          "collectionId": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "collectionId": "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "contracttest": {
                      "items": {
                        "properties": {
                          "collectionId": {
                            "example": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get contract test relations"
          }
        },
        "summary": "Get contract test relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/documentation": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getDocumentationRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get documentation relations": {
                    "value": {
                      "documentation": [
                        {
                          "collectionId": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "collectionId": "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "documentation": {
                      "items": {
                        "properties": {
                          "collectionId": {
                            "example": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get documentation relations"
          }
        },
        "summary": "Get  documentation relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/environment": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getEnvironmentRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get environment relations": {
                    "value": {
                      "environment": [
                        {
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environment": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get environment relations"
          }
        },
        "summary": "Get environment relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/integrationtest": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getIntegrationTestRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get integration test relations": {
                    "value": {
                      "integrationtest": [
                        {
                          "collectionId": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "collectionId": "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "integrationtest": {
                      "items": {
                        "properties": {
                          "collectionId": {
                            "example": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get integration test relations"
          }
        },
        "summary": "Get integration test relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/monitor": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getMonitorRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get monitor relations": {
                    "value": {
                      "monitor": [
                        {
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "monitorId": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "monitorId": "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitor": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "monitorId": {
                            "example": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get monitor relations"
          }
        },
        "summary": "Get monitor relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/relations": {
      "get": {
        "description": "This call fetches all the relations which are linked to the specified API version along with their details.\n\nThe response will contain a `relations` object which lists all the relation types which are linked to the API version. Each of the relation type will be an object which details the relations of this type. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getLinkedRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get linked relations for an API version": {
                    "value": {
                      "relations": {
                        "contracttest": {
                          "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                            "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "name": "C test",
                            "updatedAt": "2019-08-29T10:18:11.000Z"
                          }
                        },
                        "integrationtest": {
                          "521b0486-ab91-4d3a-9189-43c9380a0533": {
                            "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                            "name": "C1",
                            "updatedAt": "2019-08-29T11:40:39.000Z"
                          },
                          "a236b715-e682-460b-97b6-c1db24f7612e": {
                            "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                            "name": "C test",
                            "updatedAt": "2019-08-29T10:18:11.000Z"
                          }
                        },
                        "mock": {
                          "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                            "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                            "name": "Mock",
                            "updatedAt": "2019-08-20T10:18:13.000Z",
                            "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "relations": {
                      "properties": {
                        "contracttest": {
                          "properties": {
                            "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                              "properties": {
                                "id": {
                                  "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "name": {
                                  "example": "C test",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "updatedAt": {
                                  "example": "2019-08-29T10:18:11.000Z",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "integrationtest": {
                          "properties": {
                            "521b0486-ab91-4d3a-9189-43c9380a0533": {
                              "properties": {
                                "id": {
                                  "example": "521b0486-ab91-4d3a-9189-43c9380a0533",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "name": {
                                  "example": "C1",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "updatedAt": {
                                  "example": "2019-08-29T11:40:39.000Z",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            },
                            "a236b715-e682-460b-97b6-c1db24f7612e": {
                              "properties": {
                                "id": {
                                  "example": "a236b715-e682-460b-97b6-c1db24f7612e",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "name": {
                                  "example": "C test",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "updatedAt": {
                                  "example": "2019-08-29T10:18:11.000Z",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "mock": {
                          "properties": {
                            "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                              "properties": {
                                "id": {
                                  "example": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "name": {
                                  "example": "Mock",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "updatedAt": {
                                  "example": "2019-08-20T10:18:13.000Z",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                },
                                "url": {
                                  "example": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io",
                                  "type": "string",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get linked relations for an API version"
          }
        },
        "summary": "Get linked relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "description": "This call allows you to add existing Postman entities as new relations to an API. The request body should contain the relations to be created along with an array of entity IDs. \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth\u003eRelation\u003c/th\u003e\n    \u003cth\u003eEntity ID type\u003c/th\u003e\n  \u003ctr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003econtracttest\u003c/td\u003e\n    \u003ctd\u003eCollection UIDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eintegrationtest\u003c/td\u003e\n    \u003ctd\u003eCollection UIDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003edocumentation\u003c/td\u003e\n    \u003ctd\u003eCollection UIDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003etestsuite\u003c/td\u003e\n    \u003ctd\u003eCollection UIDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eenvironment\u003c/td\u003e\n    \u003ctd\u003eEnvironment UIDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003emock\u003c/td\u003e\n    \u003ctd\u003eMock IDs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003emonitor\u003c/td\u003e\n    \u003ctd\u003eMonitor IDs\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createRelations",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "contracttest": [
                  "collection-uid-1"
                ],
                "documentation": [
                  "collection-uid-3"
                ],
                "mock": [
                  "mock-uid-1"
                ],
                "testsuite": [
                  "collection-uid-1",
                  "collection-uid-2"
                ]
              },
              "schema": {
                "properties": {
                  "contracttest": {
                    "items": {
                      "example": "collection-uid-1",
                      "type": "string",
                      "in": "REQUEST_BODY"
                    },
                    "type": "array",
                    "in": "REQUEST_BODY"
                  },
                  "documentation": {
                    "items": {
                      "example": "collection-uid-3",
                      "type": "string",
                      "in": "REQUEST_BODY"
                    },
                    "type": "array",
                    "in": "REQUEST_BODY"
                  },
                  "mock": {
                    "items": {
                      "example": "mock-uid-1",
                      "type": "string",
                      "in": "REQUEST_BODY"
                    },
                    "type": "array",
                    "in": "REQUEST_BODY"
                  },
                  "testsuite": {
                    "items": {
                      "example": "collection-uid-1",
                      "type": "string",
                      "in": "REQUEST_BODY"
                    },
                    "type": "array",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create multiple relations from existing collections": {
                    "value": {
                      "contracttest": [
                        "5bcece87-ca4b-4e75-a967-2a6845626164"
                      ],
                      "documentation": [
                        "2084eba6-a17b-4751-8f03-ea60f30ba19c"
                      ],
                      "testsuite": [
                        "e525fa71-035e-4620-acda-ce878524f1e7",
                        "17a974b2-ce79-4b95-9d3f-217d6ff7e979"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "contracttest": {
                      "items": {
                        "example": "5bcece87-ca4b-4e75-a967-2a6845626164",
                        "type": "string",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    },
                    "documentation": {
                      "items": {
                        "example": "2084eba6-a17b-4751-8f03-ea60f30ba19c",
                        "type": "string",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    },
                    "testsuite": {
                      "items": {
                        "example": "e525fa71-035e-4620-acda-ce878524f1e7",
                        "type": "string",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create multiple relations from existing collections"
          }
        },
        "summary": "Create relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas": {
      "post": {
        "description": "This call creates a new schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createSchema",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "schema": {
                  "language": "yaml",
                  "schema": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/User\\\\\u0027\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/Error\\\\\u0027\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                  "type": "openapi3"
                }
              },
              "schema": {
                "properties": {
                  "schema": {
                    "properties": {
                      "language": {
                        "example": "yaml",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "schema": {
                        "example": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/User\\\\\u0027\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/Error\\\\\u0027\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "type": {
                        "example": "openapi3",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create schema": {
                    "value": {
                      "schema": {
                        "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language": "yaml",
                        "type": "openapi3",
                        "updateBy": "5665",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "schema": {
                      "properties": {
                        "apiVersion": {
                          "example": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "language": {
                          "example": "yaml",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "type": {
                          "example": "openapi3",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updateBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create schema"
          }
        },
        "summary": "Create Schema",
        "tags": [
          "API",
          "Schema"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}": {
      "get": {
        "description": "This call fetches a single schema having the specified id.\n\nResponse contains a `schema` object with all the details related to the schema, namely, `id`, `language`, `type`, `schema` etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getSchema",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get schema": {
                    "value": {
                      "schema": {
                        "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language": "yaml",
                        "type": "openapi3",
                        "updateBy": "5665",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "schema": {
                      "properties": {
                        "apiVersion": {
                          "example": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "language": {
                          "example": "yaml",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "type": {
                          "example": "openapi3",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updateBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get schema"
          }
        },
        "summary": "Get Schema",
        "tags": [
          "API",
          "Schema"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This call updates an existing schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateSchema",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "schema": {
                  "language": "json",
                  "schema": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/User\\\\\u0027\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/Error\\\\\u0027\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                  "type": "openapi3"
                }
              },
              "schema": {
                "properties": {
                  "schema": {
                    "properties": {
                      "language": {
                        "example": "json",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "schema": {
                        "example": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/User\\\\\u0027\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\\u0027#/components/schemas/Error\\\\\u0027\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "type": {
                        "example": "openapi3",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Update schema": {
                    "value": {
                      "schema": {
                        "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language": "yaml",
                        "type": "openapi3",
                        "updateBy": "5665",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "schema": {
                      "properties": {
                        "apiVersion": {
                          "example": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "createdBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "language": {
                          "example": "yaml",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "type": {
                          "example": "openapi3",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updateBy": {
                          "example": "5665",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "updatedAt": {
                          "example": "2019-02-12 19:34:49",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Update schema"
          }
        },
        "summary": "Update Schema",
        "tags": [
          "API",
          "Schema"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}/collections": {
      "post": {
        "description": "This call creates a collection and links it to an API as one or multiple relations. \n\nRequest body requires two keys:\n- `name` - Name of the collection to be created.\n- `relations` - A list of relation(s) to be created.\n\nThe allowed relation types are `contracttest`, `integrationtest`, `testsuite`, and `documentation`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createCollectionFromSchema",
        "parameters": [
          {
            "in": "query",
            "name": "workspace",
            "schema": {
              "example": "{{workspaceId}}",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "My generated collection",
                "relations": [
                  {
                    "type": "contracttest"
                  }
                ]
              },
              "schema": {
                "properties": {
                  "name": {
                    "example": "My generated collection",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  },
                  "relations": {
                    "items": {
                      "properties": {
                        "type": {
                          "example": "contracttest",
                          "type": "string",
                          "in": "REQUEST_BODY"
                        }
                      },
                      "type": "object",
                      "in": "REQUEST_BODY"
                    },
                    "type": "array",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create collection from schema": {
                    "value": {
                      "collection": {
                        "id": "e6b0d46a-8722-4f42-ab86-f5f473187ddf",
                        "uid": "112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf"
                      },
                      "relations": [
                        {
                          "id": "4b40f06a-5a6a-448f-bfcd-a6dbcb68da22",
                          "type": "contracttest"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collection": {
                      "properties": {
                        "id": {
                          "example": "e6b0d46a-8722-4f42-ab86-f5f473187ddf",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    },
                    "relations": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "4b40f06a-5a6a-448f-bfcd-a6dbcb68da22",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "type": {
                            "example": "contracttest",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create collection from schema"
          }
        },
        "summary": "Create collection from schema",
        "tags": [
          "API",
          "Schema"
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/testsuite": {
      "get": {
        "description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "getTestSuiteRelations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Get test suite relations": {
                    "value": {
                      "testsuite": [
                        {
                          "collectionId": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11.000Z"
                        },
                        {
                          "collectionId": "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "testsuite": {
                      "items": {
                        "properties": {
                          "collectionId": {
                            "example": "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "C test",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "updatedAt": {
                            "example": "2019-08-29T10:18:11.000Z",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Get test suite relations"
          }
        },
        "summary": "Get test suite relations",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/{entityType}/{entityId}/syncWithSchema": {
      "put": {
        "description": "This call allows you to keep the relation in sync with the API schema.\n\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "syncRelationsWithSchema",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful sync": {
                    "value": {
                      "success": true
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "success": {
                      "example": true,
                      "type": "boolean",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful sync"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Failed to sync": {
                    "value": {
                      "error": {
                        "message": "Unable to validate. Only the OpenAPI 3.0 schema format is supported.",
                        "name": "validationFailed"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Unable to validate. Only the OpenAPI 3.0 schema format is supported.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "validationFailed",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Failed to sync"
          }
        },
        "summary": "Sync relations with schema",
        "tags": [
          "API",
          "Relations"
        ],
        "parameters": [
          {
            "description": "Id of the API",
            "in": "path",
            "name": "apiId",
            "required": true,
            "schema": {
              "example": "{{apiId}}",
              "type": "string"
            }
          },
          {
            "description": "Id of the API version",
            "in": "path",
            "name": "apiVersionId",
            "required": true,
            "schema": {
              "example": "{{apiVersionId}}",
              "type": "string"
            }
          },
          {
            "description": "Relation id",
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "example": "{{entityId}}",
              "type": "string"
            }
          },
          {
            "description": "Relation type (e.g documentation, contracttest, integrationtest, testsuite, mock, monitor)",
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "example": "{{entityType}}",
              "type": "string"
            }
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "description": "The `/collections` endpoint returns a list of all [collections](https://www.getpostman.com/docs/collections) that are accessible by you. The list includes your own collections and the collections that you have subscribed to.\n\nThe response contains an array of collection information containing the `name`, `id`, `owner` and `uid` of each collection.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "allCollections",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "collections": [
                        {
                          "id": "dac5eac9-148d-a32e-b76b-3edee9da28f7",
                          "name": "Cloud API",
                          "owner": "631643",
                          "uid": "631643-dac5eac9-148d-a32e-b76b-3edee9da28f7"
                        },
                        {
                          "id": "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                          "name": "Sample Collection",
                          "owner": "631643",
                          "uid": "631643-f2e66c2e-5297-e4a5-739e-20cbb90900e3"
                        },
                        {
                          "id": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
                          "name": "Postman Echo",
                          "owner": "631643",
                          "uid": "631643-f695cab7-6878-eb55-7943-ad88e1ccfd65"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collections": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "dac5eac9-148d-a32e-b76b-3edee9da28f7",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "Cloud API",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "owner": {
                            "example": "631643",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "631643-dac5eac9-148d-a32e-b76b-3edee9da28f7",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "All Collections",
        "tags": [
          "Collections"
        ]
      },
      "post": {
        "description": "This endpoint allows you to create collections using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and the `uid`.\n\nYou can also specify the context of a workspace to create a collection in directly by passing the `workspace` as a query param.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "collection": {
                  "info": {
                    "description": "This is just a sample collection.",
                    "name": "Sample Collection {{$randomInt}}",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item": [
                    {
                      "item": [
                        {
                          "name": "Sample POST Request",
                          "request": {
                            "body": {
                              "mode": "raw",
                              "raw": "{\"data\": \"123\"}"
                            },
                            "description": "This is a sample POST Request",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "url": "https://postman-echo.com/post"
                          }
                        }
                      ],
                      "name": "This is a folder"
                    },
                    {
                      "name": "Sample GET Request",
                      "request": {
                        "description": "This is a sample GET Request",
                        "method": "GET",
                        "url": "https://postman-echo/get"
                      }
                    }
                  ]
                }
              },
              "schema": {
                "properties": {
                  "collection": {
                    "properties": {
                      "info": {
                        "properties": {
                          "description": {
                            "example": "This is just a sample collection.",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "name": {
                            "example": "Sample Collection {{$randomInt}}",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "schema": {
                            "example": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      },
                      "item": {
                        "items": {
                          "properties": {
                            "item": {
                              "items": {
                                "properties": {
                                  "name": {
                                    "example": "Sample POST Request",
                                    "type": "string",
                                    "in": "REQUEST_BODY"
                                  },
                                  "request": {
                                    "properties": {
                                      "body": {
                                        "properties": {
                                          "mode": {
                                            "example": "raw",
                                            "type": "string",
                                            "in": "REQUEST_BODY"
                                          },
                                          "raw": {
                                            "example": "{\"data\": \"123\"}",
                                            "type": "string",
                                            "in": "REQUEST_BODY"
                                          }
                                        },
                                        "type": "object",
                                        "in": "REQUEST_BODY"
                                      },
                                      "description": {
                                        "example": "This is a sample POST Request",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      },
                                      "header": {
                                        "items": {
                                          "properties": {
                                            "key": {
                                              "example": "Content-Type",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            },
                                            "value": {
                                              "example": "application/json",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            }
                                          },
                                          "type": "object",
                                          "in": "REQUEST_BODY"
                                        },
                                        "type": "array",
                                        "in": "REQUEST_BODY"
                                      },
                                      "method": {
                                        "example": "POST",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      },
                                      "url": {
                                        "example": "https://postman-echo.com/post",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "REQUEST_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "REQUEST_BODY"
                              },
                              "type": "array",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "This is a folder",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create Collection in a Workspace": {
                    "value": {
                      "collection": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collection": {
                      "properties": {
                        "id": {
                          "example": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sample Collection",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create Collection in a Workspace"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Malformed Request": {
                    "value": {
                      "error": {
                        "message": "Missing required property: name at info",
                        "name": "malformedRequestError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Missing required property: name at info",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "malformedRequestError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Malformed Request"
          }
        },
        "summary": "Create Collection",
        "tags": [
          "Collections"
        ]
      }
    },
    "/collections/fork/{collection_uid}": {
      "post": {
        "description": "This endpoint allows you to create a fork from an existing collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id`, `uid` along with `fork` information.\n\nYou can also specify the context of a workspace to fork a collection in by passing the `workspace` as a query param.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createAFork",
        "parameters": [
          {
            "description": "Workspace ID is required to create a fork",
            "in": "query",
            "name": "workspace",
            "schema": {
              "example": "{{workspace_id}}",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "collection_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Fork name"
              },
              "schema": {
                "properties": {
                  "name": {
                    "example": "Fork name",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Create a Fork",
        "tags": [
          "Collections"
        ]
      }
    },
    "/collections/merge": {
      "post": {
        "description": "This endpoint allows you to merge a forked collection back to its destination collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and `uid`.\n\nYou need to specify the fork UID (as `source`) and destination collection UID (as `destination`) in the request body.\n\nOptionally, you can also specify the merge strategy as either `deleteSource` or `updateSourceWithDestination`. Following is an explanation of the merge strategies\n\n| Merge Strategy | Behaviour |\n| --- | --- |\n| deleteSource | Forked collection is deleted after merging |\n| updateSourceWithDestination | Forked collection is up to date with changes in destination collection |\n\nIf the collections cannot be merged (due to conflicts), appropriate error messages will be returned.\n\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "mergeAFork",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destination": "{{destination_collection_uid}}",
                "source": "{{source_collection_uid}}",
                "strategy": "deleteSource"
              },
              "schema": {
                "properties": {
                  "destination": {
                    "example": "{{destination_collection_uid}}",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  },
                  "source": {
                    "example": "{{source_collection_uid}}",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  },
                  "strategy": {
                    "example": "deleteSource",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Merge a Fork",
        "tags": [
          "Collections"
        ]
      }
    },
    "/collections/{collection_uid}": {
      "delete": {
        "description": "This endpoint allows you to delete an existing collection.\n\nOn successful deletion of the collection, the response returns the `id` and `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteCollection",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Collection Deleted": {
                    "value": {
                      "collection": {
                        "id": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                        "uid": "5852-a14c6da7-afba-4a84-bf22-4febbaaced6c"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collection": {
                      "properties": {
                        "id": {
                          "example": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-a14c6da7-afba-4a84-bf22-4febbaaced6c",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Collection Deleted"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Collection Not Found": {
                    "value": {
                      "error": {
                        "details": {
                          "id": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                          "item": "collection"
                        },
                        "message": "The specified item does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "details": {
                          "properties": {
                            "id": {
                              "example": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "item": {
                              "example": "collection",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "message": {
                          "example": "The specified item does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Collection Not Found"
          }
        },
        "summary": "Delete Collection",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Access the contents of a collection that is accessible to you using its unique id (`uid`).\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleCollection",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "collection": {
                        "info": {
                          "_postman_id": "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                          "description": "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                          "name": "Sample Collection",
                          "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
                        },
                        "item": [
                          {
                            "event": [
                              {
                                "listen": "test",
                                "script": {
                                  "exec": "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] \u003d responseBody.has(\"headers\");\n    responseJSON \u003d JSON.parse(responseBody);\n    tests[\"Header contains host\"] \u003d \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] \u003d \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n",
                                  "type": "text/javascript"
                                }
                              }
                            ],
                            "id": "82ee981b-e19f-962a-401e-ea34ebfb4848",
                            "name": "Request Headers",
                            "request": {
                              "body": {
                                "formdata": [],
                                "mode": "formdata"
                              },
                              "description": "",
                              "header": [
                                {
                                  "description": "",
                                  "key": "my-sample-header",
                                  "value": "Lorem ipsum dolor sit amet"
                                }
                              ],
                              "method": "GET",
                              "url": "https://echo.getpostman.com/headers"
                            },
                            "response": []
                          }
                        ],
                        "variables": []
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collection": {
                      "properties": {
                        "info": {
                          "properties": {
                            "_postman_id": {
                              "example": "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "description": {
                              "example": "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "name": {
                              "example": "Sample Collection",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "schema": {
                              "example": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "item": {
                          "items": {
                            "properties": {
                              "event": {
                                "items": {
                                  "properties": {
                                    "listen": {
                                      "example": "test",
                                      "type": "string",
                                      "in": "RESPONSE_BODY"
                                    },
                                    "script": {
                                      "properties": {
                                        "exec": {
                                          "example": "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] \u003d responseBody.has(\"headers\");\n    responseJSON \u003d JSON.parse(responseBody);\n    tests[\"Header contains host\"] \u003d \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] \u003d \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n",
                                          "type": "string",
                                          "in": "RESPONSE_BODY"
                                        },
                                        "type": {
                                          "example": "text/javascript",
                                          "type": "string",
                                          "in": "RESPONSE_BODY"
                                        }
                                      },
                                      "type": "object",
                                      "in": "RESPONSE_BODY"
                                    }
                                  },
                                  "type": "object",
                                  "in": "RESPONSE_BODY"
                                },
                                "type": "array",
                                "in": "RESPONSE_BODY"
                              },
                              "id": {
                                "example": "82ee981b-e19f-962a-401e-ea34ebfb4848",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "name": {
                                "example": "Request Headers",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "request": {
                                "properties": {
                                  "body": {
                                    "properties": {
                                      "formdata": {
                                        "items": {
                                          "in": "RESPONSE_BODY"
                                        },
                                        "type": "array",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "mode": {
                                        "example": "formdata",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "description": {
                                    "example": "",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "header": {
                                    "items": {
                                      "properties": {
                                        "description": {
                                          "example": "",
                                          "type": "string",
                                          "in": "RESPONSE_BODY"
                                        },
                                        "key": {
                                          "example": "my-sample-header",
                                          "type": "string",
                                          "in": "RESPONSE_BODY"
                                        },
                                        "value": {
                                          "example": "Lorem ipsum dolor sit amet",
                                          "type": "string",
                                          "in": "RESPONSE_BODY"
                                        }
                                      },
                                      "type": "object",
                                      "in": "RESPONSE_BODY"
                                    },
                                    "type": "array",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "method": {
                                    "example": "GET",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "url": {
                                    "example": "https://echo.getpostman.com/headers",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "response": {
                                "items": {
                                  "in": "RESPONSE_BODY"
                                },
                                "type": "array",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "variables": {
                          "items": {
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "Single Collection ",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This endpoint allows you to update an existing collection using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful updation of the collection, the response returns the collection `name`, `id` and `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.\n\nNote: Please be careful when trying to update the collection, as the existing collection will be replaced by the request body.",
        "operationId": "updateCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "collection": {
                  "info": {
                    "_postman_id": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                    "description": "This is just a sample collection.",
                    "name": "Sample Collection {{$randomInt}}",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item": [
                    {
                      "item": [
                        {
                          "name": "Sample POST Request",
                          "request": {
                            "body": {
                              "mode": "raw",
                              "raw": "{\"data\": \"123\"}"
                            },
                            "description": "This is a sample POST Request",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "url": "https://postman-echo.com/post"
                          }
                        }
                      ],
                      "name": "This is a folder"
                    },
                    {
                      "name": "Sample GET Request",
                      "request": {
                        "description": "This is a sample GET Request",
                        "method": "GET",
                        "url": "https://postman-echo/get"
                      }
                    }
                  ]
                }
              },
              "schema": {
                "properties": {
                  "collection": {
                    "properties": {
                      "info": {
                        "properties": {
                          "_postman_id": {
                            "example": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "description": {
                            "example": "This is just a sample collection.",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "name": {
                            "example": "Sample Collection {{$randomInt}}",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "schema": {
                            "example": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      },
                      "item": {
                        "items": {
                          "properties": {
                            "item": {
                              "items": {
                                "properties": {
                                  "name": {
                                    "example": "Sample POST Request",
                                    "type": "string",
                                    "in": "REQUEST_BODY"
                                  },
                                  "request": {
                                    "properties": {
                                      "body": {
                                        "properties": {
                                          "mode": {
                                            "example": "raw",
                                            "type": "string",
                                            "in": "REQUEST_BODY"
                                          },
                                          "raw": {
                                            "example": "{\"data\": \"123\"}",
                                            "type": "string",
                                            "in": "REQUEST_BODY"
                                          }
                                        },
                                        "type": "object",
                                        "in": "REQUEST_BODY"
                                      },
                                      "description": {
                                        "example": "This is a sample POST Request",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      },
                                      "header": {
                                        "items": {
                                          "properties": {
                                            "key": {
                                              "example": "Content-Type",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            },
                                            "value": {
                                              "example": "application/json",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            }
                                          },
                                          "type": "object",
                                          "in": "REQUEST_BODY"
                                        },
                                        "type": "array",
                                        "in": "REQUEST_BODY"
                                      },
                                      "method": {
                                        "example": "POST",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      },
                                      "url": {
                                        "example": "https://postman-echo.com/post",
                                        "type": "string",
                                        "in": "REQUEST_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "REQUEST_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "REQUEST_BODY"
                              },
                              "type": "array",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "This is a folder",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Collection Updated": {
                    "value": {
                      "collection": {
                        "id": "1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                        "name": "Sample Collection",
                        "uid": "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collection": {
                      "properties": {
                        "id": {
                          "example": "1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sample Collection",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Collection Updated"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Collection ID Mismatch": {
                    "value": {
                      "error": {
                        "message": "The collection ID in the path does not match the collection ID in the request body.",
                        "name": "collectionMismatchError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "The collection ID in the path does not match the collection ID in the request body.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "collectionMismatchError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Collection ID Mismatch"
          },
          "403": {
            "content": {
              "application/json": {
                "examples": {
                  "Not Enough Permissions": {
                    "value": {
                      "error": {
                        "message": "You do not have enough permissions to perform this action.",
                        "name": "forbiddenError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "You do not have enough permissions to perform this action.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "forbiddenError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Not Enough Permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Collection Not Found": {
                    "value": {
                      "error": {
                        "details": {
                          "id": "1d3daef4-2037-4584-ab86-bafd8c8f8a54",
                          "item": "collection"
                        },
                        "message": "The specified item does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "details": {
                          "properties": {
                            "id": {
                              "example": "1d3daef4-2037-4584-ab86-bafd8c8f8a54",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "item": {
                              "example": "collection",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "message": {
                          "example": "The specified item does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Collection Not Found"
          }
        },
        "summary": "Update Collection",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collection_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/environments": {
      "get": {
        "description": "The `/environments` endpoint returns a list of all [environments](https://www.getpostman.com/docs/environments) that belong to you..\n\nThe response contains an array of environments\u0027 information containing the `name`, `id`, `owner` and `uid` of each environment.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "allEnvironments",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "environments": [
                        {
                          "id": "357668d2-84f1-2264-438b-113095359f80",
                          "name": "Postman Cloud API",
                          "owner": "631643",
                          "uid": "631643-357668d2-84f1-2264-438b-113095359f80"
                        },
                        {
                          "id": "84a119b6-f4b1-9120-5f11-a73b17818d70",
                          "name": "Postman Cloud API.template",
                          "owner": "631643",
                          "uid": "631643-84a119b6-f4b1-9120-5f11-a73b17818d70"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environments": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "357668d2-84f1-2264-438b-113095359f80",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "Postman Cloud API",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "owner": {
                            "example": "631643",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "631643-357668d2-84f1-2264-438b-113095359f80",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "All Environments",
        "tags": [
          "Environments"
        ]
      },
      "post": {
        "description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "environment": {
                  "name": "Sample Environment Name (required)",
                  "values": [
                    {
                      "key": "variable_name_1",
                      "value": "The value of the variable"
                    },
                    {
                      "key": "variable_name_2",
                      "value": ""
                    }
                  ]
                }
              },
              "schema": {
                "properties": {
                  "environment": {
                    "properties": {
                      "name": {
                        "example": "Sample Environment Name (required)",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "values": {
                        "items": {
                          "properties": {
                            "key": {
                              "example": "variable_name_1",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "value": {
                              "example": "The value of the variable",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "environment": {
                        "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                        "name": "Sample Environment Name (required)",
                        "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environment": {
                      "properties": {
                        "id": {
                          "example": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Sample Environment Name (required)",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Failure Response": {
                    "value": {
                      "error": {
                        "message": "Missing required property: environment",
                        "name": "malformedRequestError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Missing required property: environment",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "malformedRequestError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Failure Response"
          }
        },
        "summary": "Create Environment",
        "tags": [
          "Environments"
        ]
      }
    },
    "/environments/{environment_uid}": {
      "delete": {
        "description": "This endpoint allows you to delete a single environment based on an environment\u0027s unique `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteEnvironment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Environment Deleted": {
                    "value": {
                      "environment": {
                        "id": "4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce",
                        "uid": "5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environment": {
                      "properties": {
                        "id": {
                          "example": "4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Environment Deleted"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Environment Not Found": {
                    "value": {
                      "error": {
                        "message": "The specified environment does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "The specified environment does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Environment Not Found"
          }
        },
        "summary": "Delete Environment",
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleEnvironment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "environment": {
                        "id": "84a119b6-f4b1-9120-5f11-a73b17818d70",
                        "name": "Postman Cloud API.template",
                        "values": [
                          {
                            "enabled": true,
                            "hovered": false,
                            "key": "postman_api_key",
                            "type": "text",
                            "value": ""
                          }
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environment": {
                      "properties": {
                        "id": {
                          "example": "84a119b6-f4b1-9120-5f11-a73b17818d70",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Postman Cloud API.template",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "values": {
                          "items": {
                            "properties": {
                              "enabled": {
                                "example": true,
                                "type": "boolean",
                                "in": "RESPONSE_BODY"
                              },
                              "hovered": {
                                "example": false,
                                "type": "boolean",
                                "in": "RESPONSE_BODY"
                              },
                              "key": {
                                "example": "postman_api_key",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "type": {
                                "example": "text",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "value": {
                                "example": "",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "Single Environment",
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This endpoint replaces an existing environment.\n\nA sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"environment\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\"minLength\": 1\n\t\t\t\t},\n\t\t\t\t\"values\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"maxItems\": 100,\n\t\t\t\t\t\"additionalItems\": false,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"key\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"key\",\n\t\t\t\t\t\t\t\"value\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"environment\"\n\t]\n}\n```\n\nOn successful updation of the environment, the API returns the environment name and `id`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "environment": {
                  "name": "New Name",
                  "values": [
                    {
                      "key": "name",
                      "value": "Bruce Wayne"
                    },
                    {
                      "key": "occupation",
                      "value": "Vigilante"
                    }
                  ]
                }
              },
              "schema": {
                "properties": {
                  "environment": {
                    "properties": {
                      "name": {
                        "example": "New Name",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "values": {
                        "items": {
                          "properties": {
                            "key": {
                              "example": "name",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "value": {
                              "example": "Bruce Wayne",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "environment": {
                        "id": "357668d2-84f1-2264-438b-113095359f80",
                        "name": "New Name",
                        "uid": "631643-357668d2-84f1-2264-438b-113095359f80"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "environment": {
                      "properties": {
                        "id": {
                          "example": "357668d2-84f1-2264-438b-113095359f80",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "New Name",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "631643-357668d2-84f1-2264-438b-113095359f80",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Failure Response": {
                    "value": {
                      "error": {
                        "message": "Invalid type: null (expected object) at environment.values.0",
                        "name": "malformedRequestError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Invalid type: null (expected object) at environment.values.0",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "malformedRequestError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Failure Response"
          }
        },
        "summary": "Update Environment",
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/import/exported": {
      "post": {
        "description": "This endpoint allows you to import your exported Postman data.\nFor more information about how you can export your data, refer \u003ca href\u003d\"https://go.postman.co/me/export\"\u003eExport your Postman data.\u003c/a\u003e\n\nOn successful imports, the response will be an array with Each element contaning `id`, `name` and `uid` of entities created.\n\n**Note**: Refer to examples for different scenarios.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header.",
        "operationId": "importExportedData",
        "requestBody": {
          "content": {
            "application/octet-stream": {}
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success: Import to a specific workspace with workspace ID passed as a query parameter": {
                    "value": {
                      "collections": [
                        {
                          "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                          "name": "Swagger Petstore",
                          "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collections": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "b31be584-1b1e-4444-b581-761edf88fe77",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "Swagger Petstore",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "2282-b31be584-1b1e-4444-b581-761edf88fe77",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Success: Import to a specific workspace with workspace ID passed as a query parameter"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Error: Param Missing": {
                    "value": {
                      "error": {
                        "details": {
                          "param": "type"
                        },
                        "message": "The request body is missing a value for the type parameter. Check your request and try again.",
                        "name": "paramMissingError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "details": {
                          "properties": {
                            "param": {
                              "example": "type",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "message": {
                          "example": "The request body is missing a value for the type parameter. Check your request and try again.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "paramMissingError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Error: Param Missing"
          }
        },
        "summary": "Import exported data",
        "tags": [
          "Import"
        ]
      }
    },
    "/import/openapi": {
      "post": {
        "description": "This endpoint allows you to import external API specifications into Postman.\n\nCurrently, this endpoint only supports the \u003ca href\u003d\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md\"\u003eOpenAPI\u003c/a\u003e specification, for which the `importType` will be `openapi`.\n\nOn a successful import, the response will be an array with each element contaning `id`, `name` and `uid` of entities created.\n\nSupported `type`s:\n\n- string\n- json\n- file\n\nThe `input` parameter should be defined based on the `type`.\n\n\u003e To import a file, request body must be form-data with `type` param set to `file`.\n\n**Note**: Refer to examples for different scenarios.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header.",
        "operationId": "importExternalApiSpecification",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "input": {
                  "info": {
                    "license": {
                      "name": "MIT"
                    },
                    "title": "Swagger Petstore",
                    "version": "1.0.0"
                  },
                  "openapi": "3.0.0",
                  "paths": {
                    "/pets": {
                      "get": {
                        "operationId": "listPets",
                        "parameters": [
                          {
                            "description": "limit",
                            "in": "query",
                            "name": "limit",
                            "required": false,
                            "schema": {
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        ],
                        "responses": {
                          "default": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "properties": {
                                    "code": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "message"
                                  ]
                                }
                              }
                            },
                            "description": "unexpected error"
                          }
                        },
                        "summary": "List all pets"
                      }
                    }
                  },
                  "servers": [
                    {
                      "url": "http://petstore.swagger.io/v1"
                    }
                  ]
                },
                "type": "json"
              },
              "schema": {
                "properties": {
                  "input": {
                    "properties": {
                      "info": {
                        "properties": {
                          "license": {
                            "properties": {
                              "name": {
                                "example": "MIT",
                                "type": "string",
                                "in": "REQUEST_BODY"
                              }
                            },
                            "type": "object",
                            "in": "REQUEST_BODY"
                          },
                          "title": {
                            "example": "Swagger Petstore",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "version": {
                            "example": "1.0.0",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      },
                      "openapi": {
                        "example": "3.0.0",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "paths": {
                        "properties": {
                          "/pets": {
                            "properties": {
                              "get": {
                                "properties": {
                                  "operationId": {
                                    "example": "listPets",
                                    "type": "string",
                                    "in": "REQUEST_BODY"
                                  },
                                  "parameters": {
                                    "items": {
                                      "properties": {
                                        "description": {
                                          "example": "limit",
                                          "type": "string",
                                          "in": "REQUEST_BODY"
                                        },
                                        "in": {
                                          "example": "query",
                                          "type": "string",
                                          "in": "REQUEST_BODY"
                                        },
                                        "name": {
                                          "example": "limit",
                                          "type": "string",
                                          "in": "REQUEST_BODY"
                                        },
                                        "required": {
                                          "example": false,
                                          "type": "boolean",
                                          "in": "REQUEST_BODY"
                                        },
                                        "schema": {
                                          "properties": {
                                            "format": {
                                              "example": "int32",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            },
                                            "type": {
                                              "example": "integer",
                                              "type": "string",
                                              "in": "REQUEST_BODY"
                                            }
                                          },
                                          "type": "object",
                                          "in": "REQUEST_BODY"
                                        }
                                      },
                                      "type": "object",
                                      "in": "REQUEST_BODY"
                                    },
                                    "type": "array",
                                    "in": "REQUEST_BODY"
                                  },
                                  "responses": {
                                    "properties": {
                                      "default": {
                                        "properties": {
                                          "content": {
                                            "properties": {
                                              "application/json": {
                                                "properties": {
                                                  "schema": {
                                                    "properties": {
                                                      "properties": {
                                                        "properties": {
                                                          "code": {
                                                            "properties": {
                                                              "format": {
                                                                "example": "int32",
                                                                "type": "string",
                                                                "in": "REQUEST_BODY"
                                                              },
                                                              "type": {
                                                                "example": "integer",
                                                                "type": "string",
                                                                "in": "REQUEST_BODY"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "in": "REQUEST_BODY"
                                                          },
                                                          "message": {
                                                            "properties": {
                                                              "type": {
                                                                "example": "string",
                                                                "type": "string",
                                                                "in": "REQUEST_BODY"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "in": "REQUEST_BODY"
                                                          }
                                                        },
                                                        "type": "object",
                                                        "in": "REQUEST_BODY"
                                                      },
                                                      "required": {
                                                        "items": {
                                                          "example": "code",
                                                          "type": "string",
                                                          "in": "REQUEST_BODY"
                                                        },
                                                        "type": "array",
                                                        "in": "REQUEST_BODY"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "in": "REQUEST_BODY"
                                                  }
                                                },
                                                "type": "object",
                                                "in": "REQUEST_BODY"
                                              }
                                            },
                                            "type": "object",
                                            "in": "REQUEST_BODY"
                                          },
                                          "description": {
                                            "example": "unexpected error",
                                            "type": "string",
                                            "in": "REQUEST_BODY"
                                          }
                                        },
                                        "type": "object",
                                        "in": "REQUEST_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "REQUEST_BODY"
                                  },
                                  "summary": {
                                    "example": "List all pets",
                                    "type": "string",
                                    "in": "REQUEST_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "REQUEST_BODY"
                              }
                            },
                            "type": "object",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      },
                      "servers": {
                        "items": {
                          "properties": {
                            "url": {
                              "example": "http://petstore.swagger.io/v1",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  },
                  "type": {
                    "example": "json",
                    "type": "string",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success: Import to a specific workspace with workspace ID passed as a query parameter": {
                    "value": {
                      "collections": [
                        {
                          "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                          "name": "Swagger Petstore",
                          "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "collections": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "b31be584-1b1e-4444-b581-761edf88fe77",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "Swagger Petstore",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "2282-b31be584-1b1e-4444-b581-761edf88fe77",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Success: Import to a specific workspace with workspace ID passed as a query parameter"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Error: Param Missing": {
                    "value": {
                      "error": {
                        "details": {
                          "param": "type"
                        },
                        "message": "The request body is missing a value for the type parameter. Check your request and try again.",
                        "name": "paramMissingError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "details": {
                          "properties": {
                            "param": {
                              "example": "type",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "message": {
                          "example": "The request body is missing a value for the type parameter. Check your request and try again.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "paramMissingError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Error: Param Missing"
          }
        },
        "summary": "Import external API specification",
        "tags": [
          "Import"
        ]
      }
    },
    "/me": {
      "get": {
        "description": "the `/me` Postman API endpoint lets you access information about the authenticated user. You can retrieve the authenticated user\u0027s username, full name, e-mail address, and any other available information.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "apiKeyOwner",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "operations": [
                        {
                          "limit": 1000000.0,
                          "name": "mock_usage",
                          "overage": 0.0,
                          "usage": 2382.0
                        },
                        {
                          "limit": 1.0E7,
                          "name": "monitor_request_runs",
                          "overage": 0.0,
                          "usage": 49492.0
                        },
                        {
                          "limit": 5000000.0,
                          "name": "documenter_public_views",
                          "overage": 0.0,
                          "usage": 120232.0
                        },
                        {
                          "limit": 1000000.0,
                          "name": "api_usage",
                          "overage": 0.0,
                          "usage": 1345.0
                        },
                        {
                          "limit": 25.0,
                          "name": "custom_domains",
                          "overage": 0.0,
                          "usage": 1.0
                        },
                        {
                          "limit": 1.0,
                          "name": "custom_authentication_methods",
                          "overage": 0.0,
                          "usage": 1.0
                        },
                        {
                          "limit": 10000.0,
                          "name": "serverless_requests",
                          "overage": 0.0,
                          "usage": 0.0
                        },
                        {
                          "limit": 5000.0,
                          "name": "integrations",
                          "overage": 0.0,
                          "usage": 145.0
                        },
                        {
                          "limit": 1000000.0,
                          "name": "cloud_agent_requests",
                          "overage": 0.0,
                          "usage": 23823.0
                        }
                      ],
                      "user": {
                        "avatar": "https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6",
                        "email": "janedoe@example.com",
                        "fullName": "Jane Doe",
                        "id": "631643",
                        "isPublic": false,
                        "username": "janedoe"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "operations": {
                      "items": {
                        "properties": {
                          "limit": {
                            "example": 1000000.0,
                            "type": "number",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "mock_usage",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "overage": {
                            "example": 0.0,
                            "type": "number",
                            "in": "RESPONSE_BODY"
                          },
                          "usage": {
                            "example": 2382.0,
                            "type": "number",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    },
                    "user": {
                      "properties": {
                        "avatar": {
                          "example": "https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "email": {
                          "example": "janedoe@example.com",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "fullName": {
                          "example": "Jane Doe",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "631643",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "isPublic": {
                          "example": false,
                          "type": "boolean",
                          "in": "RESPONSE_BODY"
                        },
                        "username": {
                          "example": "janedoe",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "API Key Owner",
        "tags": [
          "User"
        ]
      }
    },
    "/mocks": {
      "get": {
        "description": "This endpoint fetches all the mocks that you have created.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "allMocks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "mocks": [
                        {
                          "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                          "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                          "id": "0fca2246-c108-41f5-8454-cc032def329f",
                          "mockUrl": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                          "owner": "1679925",
                          "uid": "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                        },
                        {
                          "collection": "1679925-37294bb0-e27b-5e52-93ae-c07dd445216d",
                          "id": "2c624389-705a-4e66-9777-05314b431796",
                          "mockUrl": "https://2c624389-705a-4e66-9777-05314b431796.mock.pstmn.io",
                          "owner": "1679925",
                          "uid": "1679925-2c624389-705a-4e66-9777-05314b431796"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mocks": {
                      "items": {
                        "properties": {
                          "collection": {
                            "example": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "environment": {
                            "example": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "id": {
                            "example": "0fca2246-c108-41f5-8454-cc032def329f",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "mockUrl": {
                            "example": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "owner": {
                            "example": "1679925",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "1679925-0fca2246-c108-41f5-8454-cc032def329f",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "All Mocks",
        "tags": [
          "Mocks"
        ]
      },
      "post": {
        "description": "This endpoint allows you to create a mock on a collection. You can also provide an environment UID to resolve any environment variables in the collection.\n\nYou can also specify the context of a workspace to create a mock in directly by passing the `workspace` as a query param.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createMock",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mock": {
                  "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                  "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                }
              },
              "schema": {
                "properties": {
                  "mock": {
                    "properties": {
                      "collection": {
                        "example": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "environment": {
                        "example": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "mock": {
                        "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "id": "0fca2246-c108-41f5-8454-cc032def329f",
                        "mockUrl": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                        "owner": "1679925",
                        "uid": "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "collection": {
                          "example": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "environment": {
                          "example": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "mockUrl": {
                          "example": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "owner": {
                          "example": "1679925",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "1679925-0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Create Mock",
        "tags": [
          "Mocks"
        ]
      }
    },
    "/mocks/{mock_uid}": {
      "delete": {
        "description": "This endpoint allows you to delete an existing mock using its `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteMock",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "mock": {
                        "id": "0fca2246-c108-41f5-8454-cc032def329f",
                        "uid": "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "id": {
                          "example": "0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "1679925-0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Delete Mock",
        "tags": [
          "Mocks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mock_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This endpoint fetches you the basic information about a single mock using its `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleMock",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "mock": {
                        "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "id": "0fca2246-c108-41f5-8454-cc032def329f",
                        "mockUrl": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                        "owner": "1679925",
                        "uid": "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "collection": {
                          "example": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "environment": {
                          "example": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "mockUrl": {
                          "example": "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "owner": {
                          "example": "1679925",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "1679925-0fca2246-c108-41f5-8454-cc032def329f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Single Mock",
        "tags": [
          "Mocks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mock_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This endpoint allows you to update a mock you have created using its `uid`. The endpoint allows you to edit fields,\n* name\n* environment\n* description\n* private\n* versionTag\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateMock",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mock": {
                  "description": "example describing update mock description",
                  "environment": "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                  "name": "My Mock Server",
                  "private": false,
                  "versionTag": "abf07d3d-f8ec-47d4-8015-9fe83078b4ec"
                }
              },
              "schema": {
                "properties": {
                  "mock": {
                    "properties": {
                      "description": {
                        "example": "example describing update mock description",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "environment": {
                        "example": "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "My Mock Server",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "private": {
                        "example": false,
                        "type": "boolean",
                        "in": "REQUEST_BODY"
                      },
                      "versionTag": {
                        "example": "abf07d3d-f8ec-47d4-8015-9fe83078b4ec",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "success Response": {
                    "value": {
                      "mock": {
                        "collection": "11582779-fd6797e2-de6b-4699-975c-85290e4c2499",
                        "config": {
                          "headers": [],
                          "matchBody": false,
                          "matchQueryParams": true,
                          "matchWildcards": true
                        },
                        "environment": "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                        "id": "06040138-dd6b-4cce-9a02-7e1c1ab59723",
                        "mockUrl": "https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io",
                        "name": "My Mock Server",
                        "owner": "11582779",
                        "uid": "11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "collection": {
                          "example": "11582779-fd6797e2-de6b-4699-975c-85290e4c2499",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "config": {
                          "properties": {
                            "headers": {
                              "items": {
                                "in": "RESPONSE_BODY"
                              },
                              "type": "array",
                              "in": "RESPONSE_BODY"
                            },
                            "matchBody": {
                              "example": false,
                              "type": "boolean",
                              "in": "RESPONSE_BODY"
                            },
                            "matchQueryParams": {
                              "example": true,
                              "type": "boolean",
                              "in": "RESPONSE_BODY"
                            },
                            "matchWildcards": {
                              "example": true,
                              "type": "boolean",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "environment": {
                          "example": "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "06040138-dd6b-4cce-9a02-7e1c1ab59723",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "mockUrl": {
                          "example": "https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "My Mock Server",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "owner": {
                          "example": "11582779",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "success Response"
          }
        },
        "summary": "Update Mock",
        "tags": [
          "Mocks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mock_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/mocks/{mock_uid}/publish": {
      "post": {
        "description": "This endpoint publishes the mock you have created using its `uid`\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key ` request header or `apikey` URL query parameter.",
        "operationId": "publishMock",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success Response": {
                    "value": {
                      "mock": {
                        "id": "06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "id": {
                          "example": "06040138-dd6b-4cce-9a02-7e1c1ab59723",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Success Response"
          }
        },
        "summary": "Publish Mock",
        "tags": [
          "Mocks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mock_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/mocks/{mock_uid}/unpublish": {
      "delete": {
        "description": "This endpoint unpublishes the mock you have created using its `uid`\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key ` request header or `apikey` URL query parameter.",
        "operationId": "unpublishMock",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success Response": {
                    "value": {
                      "mock": {
                        "id": "06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "mock": {
                      "properties": {
                        "id": {
                          "example": "06040138-dd6b-4cce-9a02-7e1c1ab59723",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Success Response"
          }
        },
        "summary": "Unpublish Mock",
        "tags": [
          "Mocks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mock_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/monitors": {
      "get": {
        "description": "The `/monitors` endpoint returns a list of all [monitors](https://monitor.getpostman.com/) that are accessible by you.\n\nThe response contains an array of monitors information containing the `name`, `id`, `owner` and `uid` of each monitor.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "allMonitors",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "monitors": [
                        {
                          "id": "1e6b6c77-2031-42d0-9948-76d7251b2dd1",
                          "name": "Batman \u0026 Sherlock Holmes Monitor",
                          "owner": "5852",
                          "uid": "5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1"
                        },
                        {
                          "id": "1e6b6cb7-f13d-4000-acb7-0695757174a8",
                          "name": "Team Level Monitor",
                          "owner": "5886",
                          "uid": "5886-1e6b6cb7-f13d-4000-acb7-0695757174a8"
                        },
                        {
                          "id": "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                          "name": "Postman Echo Monitor",
                          "owner": "5852",
                          "uid": "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitors": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "1e6b6c77-2031-42d0-9948-76d7251b2dd1",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "Batman \u0026 Sherlock Holmes Monitor",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "owner": {
                            "example": "5852",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "uid": {
                            "example": "5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "All Monitors",
        "tags": [
          "Monitors"
        ]
      },
      "post": {
        "description": "This endpoint allows you to create a monitor.\n\nSome sample `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\nYou can also specify the context of a workspace to create a monitor in directly by passing the `workspace` as a query param.\n\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createMonitor",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "monitor": {
                  "collection": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                  "environment": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                  "name": "This is a Monitor Name",
                  "schedule": {
                    "cron": "0 0 * * *",
                    "timezone": "Asia/Kolkata"
                  }
                }
              },
              "schema": {
                "properties": {
                  "monitor": {
                    "properties": {
                      "collection": {
                        "example": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "environment": {
                        "example": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "This is a Monitor Name",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "schedule": {
                        "properties": {
                          "cron": {
                            "example": "0 0 * * *",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "timezone": {
                            "example": "Asia/Kolkata",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Create Monitor in a Workspace": {
                    "value": {
                      "monitor": {
                        "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                        "name": "Monitor Name",
                        "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitor": {
                      "properties": {
                        "id": {
                          "example": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Monitor Name",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Create Monitor in a Workspace"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Parameter Missing": {
                    "value": {
                      "error": {
                        "details": {
                          "param": "monitor"
                        },
                        "message": "Parameter is missing in the request.",
                        "name": "paramMissingError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "details": {
                          "properties": {
                            "param": {
                              "example": "monitor",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "message": {
                          "example": "Parameter is missing in the request.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "paramMissingError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Parameter Missing"
          }
        },
        "summary": "Create Monitor",
        "tags": [
          "Monitors"
        ]
      }
    },
    "/monitors/{monitor_uid}": {
      "delete": {
        "description": "This endpoint can be used to delete an existing monitor using its `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteMonitor",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Monitor Deleted": {
                    "value": {
                      "monitor": {
                        "id": "1e6b8957-35f9-42a0-8d2f-f03d7085b3d2",
                        "uid": "5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitor": {
                      "properties": {
                        "id": {
                          "example": "1e6b8957-35f9-42a0-8d2f-f03d7085b3d2",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Monitor Deleted"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Monitor Not Found": {
                    "value": {
                      "error": {
                        "message": "The specified monitor does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "The specified monitor does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Monitor Not Found"
          }
        },
        "summary": "Delete Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "monitor_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "This endpoint fetches you basic information about the monitor using its `uid`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleMonitor",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "monitor": {
                        "collectionUid": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                        "distribution": [],
                        "environmentUid": "5851-8d05dd85-222c-1452-553b-e76a531b71ed",
                        "id": "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                        "lastRun": {
                          "finishedAt": "2020-03-25T15:45:31.340Z",
                          "startedAt": "2020-03-25T15:45:29.218Z",
                          "stats": {
                            "assertions": {
                              "failed": 1.0,
                              "total": 8.0
                            },
                            "requests": {
                              "total": 4.0
                            }
                          },
                          "status": "failed"
                        },
                        "name": "Postman Echo Monitor",
                        "notifications": {
                          "onError": [
                            {
                              "email": "john.appleseed@example.com"
                            }
                          ],
                          "onFailure": [
                            {
                              "email": "john.appleseed@example.com"
                            }
                          ]
                        },
                        "options": {
                          "followRedirects": true,
                          "requestDelay": 0.0,
                          "requestTimeout": 3000.0,
                          "strictSSL": true
                        },
                        "owner": "5852",
                        "schedule": {
                          "cron": "0 0 * * * *",
                          "nextRun": "2016-11-30T09:30:00.000Z",
                          "timezone": "Asia/Calcutta"
                        },
                        "uid": "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitor": {
                      "properties": {
                        "collectionUid": {
                          "example": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "distribution": {
                          "items": {
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "environmentUid": {
                          "example": "5851-8d05dd85-222c-1452-553b-e76a531b71ed",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "lastRun": {
                          "properties": {
                            "finishedAt": {
                              "example": "2020-03-25T15:45:31.340Z",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "startedAt": {
                              "example": "2020-03-25T15:45:29.218Z",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "stats": {
                              "properties": {
                                "assertions": {
                                  "properties": {
                                    "failed": {
                                      "example": 1.0,
                                      "type": "number",
                                      "in": "RESPONSE_BODY"
                                    },
                                    "total": {
                                      "example": 8.0,
                                      "type": "number",
                                      "in": "RESPONSE_BODY"
                                    }
                                  },
                                  "type": "object",
                                  "in": "RESPONSE_BODY"
                                },
                                "requests": {
                                  "properties": {
                                    "total": {
                                      "example": 4.0,
                                      "type": "number",
                                      "in": "RESPONSE_BODY"
                                    }
                                  },
                                  "type": "object",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            },
                            "status": {
                              "example": "failed",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Postman Echo Monitor",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "notifications": {
                          "properties": {
                            "onError": {
                              "items": {
                                "properties": {
                                  "email": {
                                    "example": "john.appleseed@example.com",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "type": "array",
                              "in": "RESPONSE_BODY"
                            },
                            "onFailure": {
                              "items": {
                                "properties": {
                                  "email": {
                                    "example": "john.appleseed@example.com",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "type": "array",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "options": {
                          "properties": {
                            "followRedirects": {
                              "example": true,
                              "type": "boolean",
                              "in": "RESPONSE_BODY"
                            },
                            "requestDelay": {
                              "example": 0.0,
                              "type": "number",
                              "in": "RESPONSE_BODY"
                            },
                            "requestTimeout": {
                              "example": 3000.0,
                              "type": "number",
                              "in": "RESPONSE_BODY"
                            },
                            "strictSSL": {
                              "example": true,
                              "type": "boolean",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "owner": {
                          "example": "5852",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "schedule": {
                          "properties": {
                            "cron": {
                              "example": "0 0 * * * *",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "nextRun": {
                              "example": "2016-11-30T09:30:00.000Z",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "timezone": {
                              "example": "Asia/Calcutta",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Monitor Not Found": {
                    "value": {
                      "error": {
                        "message": "The specified monitor does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "The specified monitor does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Monitor Not Found"
          }
        },
        "summary": "Single Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "monitor_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This endpoint allows you to update a monitor using its `uid`. Only the monitor name and its schedule can be updated.\n\nSome example `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "updateMonitor",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "monitor": {
                  "name": "Updated Monitor Name",
                  "schedule": {
                    "cron": "*/5 * * * *",
                    "timezone": "America/Chicago"
                  }
                }
              },
              "schema": {
                "properties": {
                  "monitor": {
                    "properties": {
                      "name": {
                        "example": "Updated Monitor Name",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "schedule": {
                        "properties": {
                          "cron": {
                            "example": "*/5 * * * *",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          },
                          "timezone": {
                            "example": "America/Chicago",
                            "type": "string",
                            "in": "REQUEST_BODY"
                          }
                        },
                        "type": "object",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Monitor Updated": {
                    "value": {
                      "monitor": {
                        "id": "1e6b6e2a-c2ad-4090-b750-0df4e6624352",
                        "name": "Updated Monitor Name",
                        "uid": "5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitor": {
                      "properties": {
                        "id": {
                          "example": "1e6b6e2a-c2ad-4090-b750-0df4e6624352",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Updated Monitor Name",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "uid": {
                          "example": "5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Monitor Updated"
          }
        },
        "summary": "Update Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "monitor_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/monitors/{monitor_uid}/run": {
      "post": {
        "description": "This endpoint will run the monitor instantly and wait for the monitor to run completely. It responds with the run results.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "runAMonitor",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Monitor Run with Errors": {
                    "value": {
                      "run": {
                        "executions": [
                          {
                            "id": 1.0,
                            "item": {
                              "id": "b5e8d7dd-909c-4ba7-aef4-8609bc50b586",
                              "name": "Sample POST Request"
                            },
                            "request": {
                              "body": {
                                "contentLength": 18.0,
                                "mode": "raw"
                              },
                              "headers": {
                                "accept": "*/*",
                                "accept-encoding": "gzip, deflate",
                                "content-length": 18.0,
                                "content-type": "application/json"
                              },
                              "method": "POST",
                              "timestamp": "2016-12-04T14:30:26.025Z",
                              "url": "echo.getpostman.com/post"
                            },
                            "response": {
                              "body": {
                                "contentLength": 298.0
                              },
                              "code": 200.0,
                              "headers": {
                                "connection": "keep-alive",
                                "content-encoding": "gzip",
                                "content-type": "application/json",
                                "date": "Sun, 04 Dec 2016 14:30:26 GMT",
                                "transfer-encoding": "chunked"
                              },
                              "responseSize": 298.0,
                              "responseTime": 26.0
                            }
                          },
                          {
                            "assertions": {
                              "Status code is 400": false
                            },
                            "id": 2.0,
                            "item": {
                              "id": "f790d046-755d-44f5-a416-b825e18dfd9d",
                              "name": "Sample GET Request"
                            },
                            "request": {
                              "body": {
                                "contentLength": 0.0,
                                "mode": "formdata"
                              },
                              "headers": {
                                "accept": "*/*",
                                "accept-encoding": "gzip, deflate"
                              },
                              "method": "GET",
                              "timestamp": "2016-12-04T14:30:26.093Z",
                              "url": "echo.getpostman.com/get"
                            },
                            "response": {
                              "body": {
                                "contentLength": 280.0
                              },
                              "code": 200.0,
                              "headers": {
                                "connection": "keep-alive",
                                "content-encoding": "gzip",
                                "content-type": "application/json",
                                "date": "Sun, 04 Dec 2016 14:30:26 GMT",
                                "transfer-encoding": "chunked"
                              },
                              "responseSize": 280.0,
                              "responseTime": 46.0
                            }
                          },
                          {
                            "id": 3.0,
                            "item": {
                              "id": "336e6e17-6d3e-4b8f-a48f-b7e75cf13afb",
                              "name": "This is the second request"
                            },
                            "request": {
                              "body": {
                                "contentLength": 0.0,
                                "mode": "formdata"
                              },
                              "headers": {
                                "accept": "*/*",
                                "accept-encoding": "gzip, deflate",
                                "content-length": 18.0
                              },
                              "method": "POST",
                              "timestamp": "2016-12-04T14:30:26.477Z",
                              "url": "echo.getpostman.com/post"
                            },
                            "response": {
                              "body": {
                                "contentLength": 345.0
                              },
                              "code": 200.0,
                              "headers": {
                                "connection": "keep-alive",
                                "content-encoding": "gzip",
                                "content-type": "application/json",
                                "date": "Sun, 04 Dec 2016 14:30:26 GMT",
                                "transfer-encoding": "chunked"
                              },
                              "responseSize": 345.0,
                              "responseTime": 9.0
                            }
                          }
                        ],
                        "failures": [
                          {
                            "assertion": {
                              "Status code is 400": false
                            },
                            "executionId": 2.0,
                            "message": "Expected \u0027Status code is 400\u0027 to be truthy",
                            "name": "AssertionError"
                          }
                        ],
                        "info": {
                          "collectionUid": "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                          "finishedAt": "2016-12-04T14:30:26.000Z",
                          "jobId": "1e6ba2e3-1aaf-4c10-bd5f-905943284b2a",
                          "monitorId": "1e6b8970-fd13-4480-b011-b3b3e3cd271d",
                          "name": "Sample Collection monitor 1 #56",
                          "startedAt": "2016-12-04T14:30:25.000Z",
                          "status": "failed"
                        },
                        "stats": {
                          "assertions": {
                            "failed": 1.0,
                            "total": 1.0
                          },
                          "requests": {
                            "failed": 1.0,
                            "total": 3.0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "run": {
                      "properties": {
                        "executions": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": 1.0,
                                "type": "number",
                                "in": "RESPONSE_BODY"
                              },
                              "item": {
                                "properties": {
                                  "id": {
                                    "example": "b5e8d7dd-909c-4ba7-aef4-8609bc50b586",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "name": {
                                    "example": "Sample POST Request",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "request": {
                                "properties": {
                                  "body": {
                                    "properties": {
                                      "contentLength": {
                                        "example": 18.0,
                                        "type": "number",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "mode": {
                                        "example": "raw",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "headers": {
                                    "properties": {
                                      "accept": {
                                        "example": "*/*",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "accept-encoding": {
                                        "example": "gzip, deflate",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "content-length": {
                                        "example": 18.0,
                                        "type": "number",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "content-type": {
                                        "example": "application/json",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "method": {
                                    "example": "POST",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "timestamp": {
                                    "example": "2016-12-04T14:30:26.025Z",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "url": {
                                    "example": "echo.getpostman.com/post",
                                    "type": "string",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "response": {
                                "properties": {
                                  "body": {
                                    "properties": {
                                      "contentLength": {
                                        "example": 298.0,
                                        "type": "number",
                                        "in": "RESPONSE_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "code": {
                                    "example": 200.0,
                                    "type": "number",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "headers": {
                                    "properties": {
                                      "connection": {
                                        "example": "keep-alive",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "content-encoding": {
                                        "example": "gzip",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "content-type": {
                                        "example": "application/json",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "date": {
                                        "example": "Sun, 04 Dec 2016 14:30:26 GMT",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      },
                                      "transfer-encoding": {
                                        "example": "chunked",
                                        "type": "string",
                                        "in": "RESPONSE_BODY"
                                      }
                                    },
                                    "type": "object",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "responseSize": {
                                    "example": 298.0,
                                    "type": "number",
                                    "in": "RESPONSE_BODY"
                                  },
                                  "responseTime": {
                                    "example": 26.0,
                                    "type": "number",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "failures": {
                          "items": {
                            "properties": {
                              "assertion": {
                                "properties": {
                                  "Status code is 400": {
                                    "example": false,
                                    "type": "boolean",
                                    "in": "RESPONSE_BODY"
                                  }
                                },
                                "type": "object",
                                "in": "RESPONSE_BODY"
                              },
                              "executionId": {
                                "example": 2.0,
                                "type": "number",
                                "in": "RESPONSE_BODY"
                              },
                              "message": {
                                "example": "Expected \u0027Status code is 400\u0027 to be truthy",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "name": {
                                "example": "AssertionError",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "info": {
                          "properties": {
                            "collectionUid": {
                              "example": "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "finishedAt": {
                              "example": "2016-12-04T14:30:26.000Z",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "jobId": {
                              "example": "1e6ba2e3-1aaf-4c10-bd5f-905943284b2a",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "monitorId": {
                              "example": "1e6b8970-fd13-4480-b011-b3b3e3cd271d",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "name": {
                              "example": "Sample Collection monitor 1 #56",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "startedAt": {
                              "example": "2016-12-04T14:30:25.000Z",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            },
                            "status": {
                              "example": "failed",
                              "type": "string",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        },
                        "stats": {
                          "properties": {
                            "assertions": {
                              "properties": {
                                "failed": {
                                  "example": 1.0,
                                  "type": "number",
                                  "in": "RESPONSE_BODY"
                                },
                                "total": {
                                  "example": 1.0,
                                  "type": "number",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            },
                            "requests": {
                              "properties": {
                                "failed": {
                                  "example": 1.0,
                                  "type": "number",
                                  "in": "RESPONSE_BODY"
                                },
                                "total": {
                                  "example": 3.0,
                                  "type": "number",
                                  "in": "RESPONSE_BODY"
                                }
                              },
                              "type": "object",
                              "in": "RESPONSE_BODY"
                            }
                          },
                          "type": "object",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Monitor Run with Errors"
          }
        },
        "summary": "Run a Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "monitor_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/webhooks": {
      "post": {
        "description": "Create a webhook that triggers a collection with your custom payload.\n\nYou can specify the webhook name and the collection to trigger by using the following attributes of the `webhook` object on your JSON body:\n\n* `name`: the name of the webhook that you\u0027re creating.\n* `collection`: the ID of the collection that you want to trigger once this webhook is called.\n\nOnce created, the webhook URL can be retrieved by accessing the `webhookUrl` attribute of the `webhook` object on the response JSON payload.",
        "operationId": "createWebhook",
        "parameters": [
          {
            "in": "query",
            "name": "workspace",
            "schema": {
              "example": "{{workspace_id}}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "webhook": {
                  "collection": "{{collection_id}}",
                  "name": "{{webhook_name}}"
                }
              },
              "schema": {
                "properties": {
                  "webhook": {
                    "properties": {
                      "collection": {
                        "example": "{{collection_id}}",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "{{webhook_name}}",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Create Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/workspaces": {
      "get": {
        "description": "The `/workspaces` endpoint returns a list of all [workspaces](https://www.getpostman.com/docs/v6/postman/workspaces/intro_to_workspaces) that is accessible by you. The list includes your own workspaces and the workspaces that you have access to.\n\nThe response contains an array of collection information containing the `name`, `id`, and `type` of each workspace.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "allWorkspaces",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "workspaces": [
                        {
                          "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                          "name": "My Workspace",
                          "type": "personal"
                        },
                        {
                          "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                          "name": "Team workspace",
                          "type": "team"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "workspaces": {
                      "items": {
                        "properties": {
                          "id": {
                            "example": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "name": {
                            "example": "My Workspace",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          },
                          "type": {
                            "example": "personal",
                            "type": "string",
                            "in": "RESPONSE_BODY"
                          }
                        },
                        "type": "object",
                        "in": "RESPONSE_BODY"
                      },
                      "type": "array",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          }
        },
        "summary": "All workspaces",
        "tags": [
          "Workspaces"
        ]
      },
      "post": {
        "description": "This endpoint allows you to create a workspace and populate it with entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful creation of the workspace, the response returns the workspcae `name` and `id`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "createWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "workspace": {
                  "collections": [
                    {
                      "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                      "name": "Straw hats",
                      "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                    }
                  ],
                  "description": "Some description",
                  "environments": [
                    {
                      "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                      "name": "env",
                      "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                    }
                  ],
                  "mocks": [
                    {
                      "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                    }
                  ],
                  "monitors": [
                    {
                      "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                    }
                  ],
                  "name": "New Workspace",
                  "type": "personal"
                }
              },
              "schema": {
                "properties": {
                  "workspace": {
                    "properties": {
                      "collections": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "Straw hats",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "uid": {
                              "example": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "description": {
                        "example": "Some description",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "environments": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "env",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "uid": {
                              "example": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "mocks": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cda672ef-1375-40e9-baee-e20ece8d7b65",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "monitors": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "New Workspace",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "type": {
                        "example": "personal",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "workspace": {
                        "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                        "name": "New Workspace"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "workspace": {
                      "properties": {
                        "id": {
                          "example": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "New Workspace",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Instance supplied not found": {
                    "value": {
                      "error": {
                        "message": "Instance not found in the database.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Instance not found in the database.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Instance supplied not found"
          }
        },
        "summary": "Create Workspace",
        "tags": [
          "Workspaces"
        ]
      }
    },
    "/workspaces/{workspace_id}": {
      "delete": {
        "description": "This endpoint allows you to delete an existing workspace.\n\nOn successful deletion of the workspace, the response returns the `id`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "deleteWorkspace",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "workspace": {
                        "id": "{{workspace_id}}"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "workspace": {
                      "properties": {
                        "id": {
                          "example": "{{workspace_id}}",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Delete Workspace",
        "tags": [
          "Workspaces"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Access the contents of a workspace that is accessible to you using its id (`id`). Includes the collections, environments, mocks and monitors of that workspace.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId": "singleWorkspace",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Valid Response": {
                    "value": {
                      "workspace": {
                        "collections": [
                          {
                            "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                            "name": "Mock demo - collection",
                            "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                          },
                          {
                            "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                            "name": "Mock demo - response code",
                            "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                          }
                        ],
                        "description": "Demos.",
                        "environments": [
                          {
                            "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                            "name": "Mock demo - CNX",
                            "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                          },
                          {
                            "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                            "name": "Mock Demo - response code",
                            "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                          }
                        ],
                        "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                        "name": "Demo workspace",
                        "type": "personal"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "workspace": {
                      "properties": {
                        "collections": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "7c31b469-bd43-4411-9283-6d397855ee0e",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "name": {
                                "example": "Mock demo - collection",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "uid": {
                                "example": "1234-7c31b469-bd43-4411-9283-6d397855ee0e",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "description": {
                          "example": "Demos.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "environments": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "name": {
                                "example": "Mock demo - CNX",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              },
                              "uid": {
                                "example": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                                "type": "string",
                                "in": "RESPONSE_BODY"
                              }
                            },
                            "type": "object",
                            "in": "RESPONSE_BODY"
                          },
                          "type": "array",
                          "in": "RESPONSE_BODY"
                        },
                        "id": {
                          "example": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "Demo workspace",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "type": {
                          "example": "personal",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Valid Response"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Workspace Not Found": {
                    "value": {
                      "error": {
                        "message": "Instance not found in the database.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "Instance not found in the database.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Workspace Not Found"
          }
        },
        "summary": "Single workspace",
        "tags": [
          "Workspaces"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "This endpoint allows you to update a workspace and update it\u0027s association to entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful updation of the workspace, the response returns the workspcae `name` and `id`.\n\n\u003e Requires \u003ca href\u003d\"#authentication\"\u003eAPI Key\u003c/a\u003e as `X-Api-Key` request header or `apikey` URL query parameter.\n\n**Note** : The endpoint expects you to send the desired state of the workspace in terms of the associated entities so be careful when trying to update these entities.\n\nFor eg. if your workspace has collections A and B, and in the update call, you send C\u0027s uid in the collections array, then A and B would be removed from the workspace and C would be added.",
        "operationId": "updateWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "workspace": {
                  "collections": [
                    {
                      "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                      "name": "Straw hats",
                      "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                    }
                  ],
                  "description": "Some description",
                  "environments": [
                    {
                      "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                      "name": "env",
                      "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                    }
                  ],
                  "mocks": [
                    {
                      "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                    }
                  ],
                  "monitors": [
                    {
                      "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                    }
                  ],
                  "name": "New Workspace updated"
                }
              },
              "schema": {
                "properties": {
                  "workspace": {
                    "properties": {
                      "collections": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "Straw hats",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "uid": {
                              "example": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "description": {
                        "example": "Some description",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      },
                      "environments": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "name": {
                              "example": "env",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            },
                            "uid": {
                              "example": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "mocks": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cda672ef-1375-40e9-baee-e20ece8d7b65",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "monitors": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec",
                              "type": "string",
                              "in": "REQUEST_BODY"
                            }
                          },
                          "type": "object",
                          "in": "REQUEST_BODY"
                        },
                        "type": "array",
                        "in": "REQUEST_BODY"
                      },
                      "name": {
                        "example": "New Workspace updated",
                        "type": "string",
                        "in": "REQUEST_BODY"
                      }
                    },
                    "type": "object",
                    "in": "REQUEST_BODY"
                  }
                },
                "type": "object",
                "in": "request_body"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Successful Response": {
                    "value": {
                      "workspace": {
                        "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                        "name": "New Workspace"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "workspace": {
                      "properties": {
                        "id": {
                          "example": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "New Workspace",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "application/json": {
                "examples": {
                  "Not enough permissions": {
                    "value": {
                      "error": {
                        "message": "You do not have access to update this workspace.",
                        "name": "forbiddenError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "You do not have access to update this workspace.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "forbiddenError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Not enough permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Specified workspace/entities do not exist": {
                    "value": {
                      "error": {
                        "message": "The specified workspace does not exist.",
                        "name": "instanceNotFoundError"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "example": "The specified workspace does not exist.",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        },
                        "name": {
                          "example": "instanceNotFoundError",
                          "type": "string",
                          "in": "RESPONSE_BODY"
                        }
                      },
                      "type": "object",
                      "in": "RESPONSE_BODY"
                    }
                  },
                  "type": "object",
                  "required": true,
                  "in": "response_body"
                }
              }
            },
            "description": "Specified workspace/entities do not exist"
          }
        },
        "summary": "Update Workspace",
        "tags": [
          "Workspaces"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  }
}