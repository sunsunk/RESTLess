{
   "openapi":"3.0.1",
   "info":{
      "title":"API title",
      "version":"0.0.1"
   },
   "servers":[
      {
         "url":"http://localhost:8081/api"
      }
   ],
   "tags":[
      {
         "name":"groups",
         "description":"Operations about groups"
      },
      {
         "name":"projects",
         "description":"Operations about projects"
      },
      {
         "name":"internal",
         "description":"Operations about internals"
      },
      {
         "name":"issues",
         "description":"Operations about issues"
      },
      {
         "name":"keys",
         "description":"Operations about keys"
      },
      {
         "name":"ci",
         "description":"Operations about cis"
      },
      {
         "name":"namespaces",
         "description":"Operations about namespaces"
      },
      {
         "name":"notification_settings",
         "description":"Operations about notification_settings"
      },
      {
         "name":"runners",
         "description":"Operations about runners"
      },
      {
         "name":"snippets",
         "description":"Operations about snippets"
      },
      {
         "name":"hooks",
         "description":"Operations about hooks"
      },
      {
         "name":"todos",
         "description":"Operations about todos"
      },
      {
         "name":"users",
         "description":"Operations about users"
      },
      {
         "name":"user",
         "description":"Operations about users"
      },
      {
         "name":"deploy_keys",
         "description":"Operations about deploy_keys"
      },
      {
         "name":"session",
         "description":"Operations about sessions"
      },
      {
         "name":"application",
         "description":"Operations about applications"
      },
      {
         "name":"sidekiq",
         "description":"Operations about sidekiqs"
      },
      {
         "name":"licenses",
         "description":"Operations about licenses"
      },
      {
         "name":"templates",
         "description":"Operations about templates"
      },
      {
         "name":"gitignores",
         "description":"Operations about gitignores"
      },
      {
         "name":"gitlab_ci_ymls",
         "description":"Operations about gitlab_ci_ymls"
      },
      {
         "name":"dockerfiles",
         "description":"Operations about dockerfiles"
      },
      {
         "name":"version",
         "description":"Operations about versions"
      }
   ],
   "paths":{
      "/v3/groups/{id}/access_requests":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Gets a list of access requests for a group.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3GroupsIdAccessRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a list of access requests for a group.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AccessRequester"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "groups"
            ],
            "summary":"Requests access for the authenticated user to a group.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"postV3GroupsIdAccessRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Requests access for the authenticated user to a group.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AccessRequester"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/access_requests/{user_id}/approve":{
         "put":{
            "tags":[
               "groups"
            ],
            "summary":"Approves an access request for the given user.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"putV3GroupsIdAccessRequestsUserIdApprove",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the access requester",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Approves an access request for the given user.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/access_requests/{user_id}":{
         "delete":{
            "tags":[
               "groups"
            ],
            "summary":"Denies an access request for the given user.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"deleteV3GroupsIdAccessRequestsUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the access requester",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Denies an access request for the given user.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/groups":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get a groups list",
            "description":"Get a groups list",
            "operationId":"getV3Groups",
            "parameters":[
               {
                  "name":"statistics",
                  "in":"query",
                  "description":"Include project statistics",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"all_available",
                  "in":"query",
                  "description":"Show all group that you have access to",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Search for a specific group",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Order by name or path",
                  "schema":{
                     "type":"string",
                     "default":"name",
                     "enum":[
                        "name",
                        "path"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Sort by asc (ascending) or desc (descending)",
                  "schema":{
                     "type":"string",
                     "default":"asc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a groups list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Group"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "groups"
            ],
            "summary":"Create a group. Available only for users who can create groups.",
            "description":"Create a group. Available only for users who can create groups.",
            "operationId":"postV3Groups",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name",
                           "path"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the group"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the group"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the group"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the group",
                              "format":"int32"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Enable/disable LFS for the projects in this group"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name",
                           "path"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the group"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the group"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the group"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the group",
                              "format":"int32"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Enable/disable LFS for the projects in this group"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a group. Available only for users who can create groups.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Group"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/owned":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get list of owned groups for authenticated user",
            "description":"Get list of owned groups for authenticated user",
            "operationId":"getV3GroupsOwned",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"statistics",
                  "in":"query",
                  "description":"Include project statistics",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get list of owned groups for authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Group"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get a single group, with containing projects.",
            "description":"Get a single group, with containing projects.",
            "operationId":"getV3GroupsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single group, with containing projects.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GroupDetail"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "groups"
            ],
            "summary":"Update a group. Available only for users who can administrate groups.",
            "description":"Update a group. Available only for users who can administrate groups.",
            "operationId":"putV3GroupsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the group"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the group"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the group"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the group",
                              "format":"int32"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Enable/disable LFS for the projects in this group"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the group"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the group"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the group"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the group",
                              "format":"int32"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Enable/disable LFS for the projects in this group"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update a group. Available only for users who can administrate groups.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Group"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "groups"
            ],
            "summary":"Remove a group.",
            "description":"Remove a group.",
            "operationId":"deleteV3GroupsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Remove a group.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/projects":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get a list of projects in this group.",
            "description":"Get a list of projects in this group.",
            "operationId":"getV3GroupsIdProjects",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of projects in this group.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/projects/{project_id}":{
         "post":{
            "tags":[
               "groups"
            ],
            "summary":"Transfer a project to the group namespace. Available only for admin.",
            "description":"Transfer a project to the group namespace. Available only for admin.",
            "operationId":"postV3GroupsIdProjectsProjectId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"The ID or path of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Transfer a project to the group namespace. Available only for admin.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GroupDetail"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/issues":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get a list of group issues",
            "description":"Get a list of group issues",
            "operationId":"getV3GroupsIdIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"state",
                  "in":"query",
                  "description":"Return opened, closed, or all issues",
                  "schema":{
                     "type":"string",
                     "default":"opened",
                     "enum":[
                        "opened",
                        "closed",
                        "all"
                     ]
                  }
               },
               {
                  "name":"labels",
                  "in":"query",
                  "description":"Comma-separated list of label names",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone",
                  "in":"query",
                  "description":"Return issues for a specific milestone",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return issues ordered by `created_at` or `updated_at` fields.",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "created_at",
                        "updated_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return issues sorted in `asc` or `desc` order.",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of group issues",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/members":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Gets a list of group or project members viewable by the authenticated user.",
            "description":"Gets a list of group or project members viewable by the authenticated user.",
            "operationId":"getV3GroupsIdMembers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"query",
                  "in":"query",
                  "description":"A query string to search for members",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a list of group or project members viewable by the authenticated user.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "groups"
            ],
            "summary":"Adds a member to a group or project.",
            "description":"Adds a member to a group or project.",
            "operationId":"postV3GroupsIdMembers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level",
                           "user_id"
                        ],
                        "properties":{
                           "user_id":{
                              "type":"integer",
                              "description":"The user ID of the new member",
                              "format":"int32"
                           },
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level",
                           "user_id"
                        ],
                        "properties":{
                           "user_id":{
                              "type":"integer",
                              "description":"The user ID of the new member",
                              "format":"int32"
                           },
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Adds a member to a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/members/{user_id}":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Gets a member of a group or project.",
            "description":"Gets a member of a group or project.",
            "operationId":"getV3GroupsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a member of a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "groups"
            ],
            "summary":"Updates a member of a group or project.",
            "description":"Updates a member of a group or project.",
            "operationId":"putV3GroupsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the new member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level"
                        ],
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level"
                        ],
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Updates a member of a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "groups"
            ],
            "summary":"Removes a user from a group or project.",
            "description":"Removes a user from a group or project.",
            "operationId":"deleteV3GroupsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Removes a user from a group or project.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/groups/{id}/notification_settings":{
         "get":{
            "tags":[
               "groups"
            ],
            "summary":"Get group level notification level settings, defaults to Global",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"getV3GroupsIdNotificationSettings",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID or project ID or project NAMESPACE/PROJECT_NAME",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get group level notification level settings, defaults to Global",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/NotificationSetting"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "groups"
            ],
            "summary":"Update group level notification level settings, defaults to Global",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"putV3GroupsIdNotificationSettings",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID or project ID or project NAMESPACE/PROJECT_NAME",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The group notification level"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The group notification level"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update group level notification level settings, defaults to Global",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/NotificationSetting"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/access_requests":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets a list of access requests for a project.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3ProjectsIdAccessRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a list of access requests for a project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AccessRequester"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Requests access for the authenticated user to a project.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"postV3ProjectsIdAccessRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Requests access for the authenticated user to a project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AccessRequester"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/access_requests/{user_id}/approve":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Approves an access request for the given user.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"putV3ProjectsIdAccessRequestsUserIdApprove",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the access requester",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Approves an access request for the given user.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/access_requests/{user_id}":{
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Denies an access request for the given user.",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"deleteV3ProjectsIdAccessRequestsUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the access requester",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Denies an access request for the given user.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdIssuesIssueIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of an Issue, Merge Request or Snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdIssuesIssueIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of an Issue, Merge Request or Snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdSnippetsSnippetIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "description":"The ID of an Issue, Merge Request or Snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdSnippetsSnippetIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +awardable+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +awardable+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Award a new Emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of a award_emoji (without colons)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Award a new Emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of the award",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +awardables+ award emoji",
            "description":"This feature was introduced in 8.9",
            "operationId":"deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
            "parameters":[
               {
                  "name":"award_id",
                  "in":"path",
                  "description":"The ID of an award emoji",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +awardables+ award emoji",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AwardEmoji"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/boards":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all project boards",
            "description":"This feature was introduced in 8.13",
            "operationId":"getV3ProjectsIdBoards",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all project boards",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Board"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/branches":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project repository branches",
            "description":"Get a project repository branches",
            "operationId":"getV3ProjectsIdRepositoryBranches",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project repository branches",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoBranch"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create branch",
            "description":"Create branch",
            "operationId":"postV3ProjectsIdRepositoryBranches",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "ref"
                        ],
                        "properties":{
                           "branch_name":{
                              "type":"string",
                              "description":"The name of the branch"
                           },
                           "ref":{
                              "type":"string",
                              "description":"Create branch from commit sha or existing branch"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "ref"
                        ],
                        "properties":{
                           "branch_name":{
                              "type":"string",
                              "description":"The name of the branch"
                           },
                           "ref":{
                              "type":"string",
                              "description":"Create branch from commit sha or existing branch"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create branch",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoBranch"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/branches/{branch}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single branch",
            "description":"Get a single branch",
            "operationId":"getV3ProjectsIdRepositoryBranchesBranch",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"branch",
                  "in":"path",
                  "description":"The name of the branch",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single branch",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoBranch"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a branch",
            "description":"Delete a branch",
            "operationId":"deleteV3ProjectsIdRepositoryBranchesBranch",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"branch",
                  "in":"path",
                  "description":"The name of the branch",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a branch",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/branches/{branch}/protect":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Protect a single branch",
            "description":"Protect a single branch",
            "operationId":"putV3ProjectsIdRepositoryBranchesBranchProtect",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"branch",
                  "in":"path",
                  "description":"The name of the branch",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "developers_can_push":{
                              "type":"boolean",
                              "description":"Flag if developers can push to that branch"
                           },
                           "developers_can_merge":{
                              "type":"boolean",
                              "description":"Flag if developers can merge to that branch"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "developers_can_push":{
                              "type":"boolean",
                              "description":"Flag if developers can push to that branch"
                           },
                           "developers_can_merge":{
                              "type":"boolean",
                              "description":"Flag if developers can merge to that branch"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Protect a single branch",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoBranch"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/branches/{branch}/unprotect":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Unprotect a single branch",
            "description":"Unprotect a single branch",
            "operationId":"putV3ProjectsIdRepositoryBranchesBranchUnprotect",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"branch",
                  "in":"path",
                  "description":"The name of the branch",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unprotect a single branch",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoBranch"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/merged_branches":{
         "delete":{
            "tags":[
               "projects"
            ],
            "operationId":"deleteV3ProjectsIdRepositoryMergedBranches",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"deleted MergedBranch",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project builds",
            "description":"Get a project builds",
            "operationId":"getV3ProjectsIdBuilds",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"scope",
                  "in":"query",
                  "description":"The scope of builds to show",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "pending",
                        "running",
                        "failed",
                        "success",
                        "canceled"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project builds",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/builds":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get builds for a specific commit of a project",
            "description":"Get builds for a specific commit of a project",
            "operationId":"getV3ProjectsIdRepositoryCommitsShaBuilds",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The SHA id of a commit",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"scope",
                  "in":"query",
                  "description":"The scope of builds to show",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "pending",
                        "running",
                        "failed",
                        "success",
                        "canceled"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get builds for a specific commit of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific build of a project",
            "description":"Get a specific build of a project",
            "operationId":"getV3ProjectsIdBuildsBuildId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific build of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/artifacts":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Download the artifacts file from build",
            "description":"This feature was introduced in GitLab 8.5",
            "operationId":"getV3ProjectsIdBuildsBuildIdArtifacts",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Download the artifacts file from build",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/artifacts/{ref_name}/download":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Download the artifacts file from build",
            "description":"This feature was introduced in GitLab 8.10",
            "operationId":"getV3ProjectsIdBuildsArtifactsRefNameDownload",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref_name",
                  "in":"path",
                  "description":"The ref from repository",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"job",
                  "in":"query",
                  "description":"The name for the build",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Download the artifacts file from build",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/trace":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a trace of a specific build of a project",
            "description":"Get a trace of a specific build of a project",
            "operationId":"getV3ProjectsIdBuildsBuildIdTrace",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a trace of a specific build of a project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/cancel":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Cancel a specific build of a project",
            "description":"Cancel a specific build of a project",
            "operationId":"postV3ProjectsIdBuildsBuildIdCancel",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Cancel a specific build of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/retry":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Retry a specific build of a project",
            "description":"Retry a specific build of a project",
            "operationId":"postV3ProjectsIdBuildsBuildIdRetry",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Retry a specific build of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/erase":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Erase build (remove artifacts and build trace)",
            "description":"Erase build (remove artifacts and build trace)",
            "operationId":"postV3ProjectsIdBuildsBuildIdErase",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Erase build (remove artifacts and build trace)",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/artifacts/keep":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Keep the artifacts to prevent them from being deleted",
            "description":"Keep the artifacts to prevent them from being deleted",
            "operationId":"postV3ProjectsIdBuildsBuildIdArtifactsKeep",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Keep the artifacts to prevent them from being deleted",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/builds/{build_id}/play":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Trigger a manual build",
            "description":"This feature was added in GitLab 8.11",
            "operationId":"postV3ProjectsIdBuildsBuildIdPlay",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"build_id",
                  "in":"path",
                  "description":"The ID of a Build",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Trigger a manual build",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Build"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project repository commits",
            "description":"Get a project repository commits",
            "operationId":"getV3ProjectsIdRepositoryCommits",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref_name",
                  "in":"query",
                  "description":"The name of a repository branch or tag, if not given the default branch is used",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"since",
                  "in":"query",
                  "description":"Only commits after or in this date will be returned",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"until",
                  "in":"query",
                  "description":"Only commits before or in this date will be returned",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"The page for pagination",
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":0
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"The number of results per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32",
                     "default":20
                  }
               },
               {
                  "name":"path",
                  "in":"query",
                  "description":"The file path",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project repository commits",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommit"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Commit multiple file changes as one commit",
            "description":"This feature was introduced in GitLab 8.13",
            "operationId":"postV3ProjectsIdRepositoryCommits",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "actions",
                           "branch_name",
                           "commit_message"
                        ],
                        "properties":{
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit message"
                           },
                           "actions":{
                              "type":"array",
                              "description":"Actions to perform in commit",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "author_email":{
                              "type":"string",
                              "description":"Author email for commit"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"Author name for commit"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "actions",
                           "branch_name",
                           "commit_message"
                        ],
                        "properties":{
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit message"
                           },
                           "actions":{
                              "type":"array",
                              "description":"Actions to perform in commit",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "author_email":{
                              "type":"string",
                              "description":"Author email for commit"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"Author name for commit"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Commit multiple file changes as one commit",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommitDetail"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific commit of a project",
            "description":"Get a specific commit of a project",
            "operationId":"getV3ProjectsIdRepositoryCommitsSha",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"A commit sha, or the name of a branch or tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific commit of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommitDetail"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/diff":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the diff for a specific commit of a project",
            "description":"Get the diff for a specific commit of a project",
            "operationId":"getV3ProjectsIdRepositoryCommitsShaDiff",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"A commit sha, or the name of a branch or tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the diff for a specific commit of a project",
                  "content":{
                     
                  }
               },
               "404":{
                  "description":"Not Found",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/comments":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a commit's comments",
            "description":"Get a commit's comments",
            "operationId":"getV3ProjectsIdRepositoryCommitsShaComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"A commit sha, or the name of a branch or tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a commit's comments",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CommitNote"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found",
                  "content":{
                     
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Post comment to commit",
            "description":"Post comment to commit",
            "operationId":"postV3ProjectsIdRepositoryCommitsShaComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit's SHA",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "line",
                           "line_type",
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           },
                           "path":{
                              "type":"string",
                              "description":"The file path"
                           },
                           "line":{
                              "type":"integer",
                              "description":"The line number",
                              "format":"int32"
                           },
                           "line_type":{
                              "type":"string",
                              "description":"The type of the line",
                              "default":"new",
                              "enum":[
                                 "new",
                                 "old"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "line",
                           "line_type",
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           },
                           "path":{
                              "type":"string",
                              "description":"The file path"
                           },
                           "line":{
                              "type":"integer",
                              "description":"The line number",
                              "format":"int32"
                           },
                           "line_type":{
                              "type":"string",
                              "description":"The type of the line",
                              "default":"new",
                              "enum":[
                                 "new",
                                 "old"
                              ]
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Post comment to commit",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CommitNote"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/cherry_pick":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Cherry pick commit into a branch",
            "description":"This feature was introduced in GitLab 8.15",
            "operationId":"postV3ProjectsIdRepositoryCommitsShaCherryPick",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"A commit sha to be cherry picked",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch"
                        ],
                        "properties":{
                           "branch":{
                              "type":"string",
                              "description":"The name of the branch"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch"
                        ],
                        "properties":{
                           "branch":{
                              "type":"string",
                              "description":"The name of the branch"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Cherry pick commit into a branch",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommit"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/statuses":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a commit's statuses",
            "description":"Get a commit's statuses",
            "operationId":"getV3ProjectsIdRepositoryCommitsShaStatuses",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit hash",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref",
                  "in":"query",
                  "description":"The ref",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"stage",
                  "in":"query",
                  "description":"The stage",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"name",
                  "in":"query",
                  "description":"The name",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"all",
                  "in":"query",
                  "description":"Show all statuses, default: false",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a commit's statuses",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CommitStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/statuses/{sha}":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Post status to a commit",
            "description":"Post status to a commit",
            "operationId":"postV3ProjectsIdStatusesSha",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit hash",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "state"
                        ],
                        "properties":{
                           "state":{
                              "type":"string",
                              "description":"The state of the status",
                              "enum":[
                                 "pending",
                                 "running",
                                 "success",
                                 "failed",
                                 "canceled"
                              ]
                           },
                           "ref":{
                              "type":"string",
                              "description":"The ref"
                           },
                           "target_url":{
                              "type":"string",
                              "description":"The target URL to associate with this status"
                           },
                           "description":{
                              "type":"string",
                              "description":"A short description of the status"
                           },
                           "name":{
                              "type":"string",
                              "description":"A string label to differentiate this status from the status of other systems. Default: \"default\""
                           },
                           "context":{
                              "type":"string",
                              "description":"A string label to differentiate this status from the status of other systems. Default: \"default\""
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "state"
                        ],
                        "properties":{
                           "state":{
                              "type":"string",
                              "description":"The state of the status",
                              "enum":[
                                 "pending",
                                 "running",
                                 "success",
                                 "failed",
                                 "canceled"
                              ]
                           },
                           "ref":{
                              "type":"string",
                              "description":"The ref"
                           },
                           "target_url":{
                              "type":"string",
                              "description":"The target URL to associate with this status"
                           },
                           "description":{
                              "type":"string",
                              "description":"A short description of the status"
                           },
                           "name":{
                              "type":"string",
                              "description":"A string label to differentiate this status from the status of other systems. Default: \"default\""
                           },
                           "context":{
                              "type":"string",
                              "description":"A string label to differentiate this status from the status of other systems. Default: \"default\""
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Post status to a commit",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CommitStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/keys":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific project's deploy keys",
            "description":"Get a specific project's deploy keys",
            "operationId":"getV3ProjectsIdKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific project's deploy keys",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add new deploy key to currently authenticated user",
            "description":"Add new deploy key to currently authenticated user",
            "operationId":"postV3ProjectsIdKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new deploy key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The name of the deploy key"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new deploy key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The name of the deploy key"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add new deploy key to currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/keys/{key_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get single deploy key",
            "description":"Get single deploy key",
            "operationId":"getV3ProjectsIdKeysKeyId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get single deploy key",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete deploy key for a project",
            "description":"Delete deploy key for a project",
            "operationId":"deleteV3ProjectsIdKeysKeyId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/keys/{key_id}/enable":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Enable a deploy key for a project",
            "description":"This feature was added in GitLab 8.11",
            "operationId":"postV3ProjectsIdKeysKeyIdEnable",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Enable a deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/keys/{key_id}/disable":{
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Disable a deploy key for a project",
            "description":"This feature was added in GitLab 8.11",
            "operationId":"deleteV3ProjectsIdKeysKeyIdDisable",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Disable a deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deploy_keys":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific project's deploy keys",
            "description":"Get a specific project's deploy keys",
            "operationId":"getV3ProjectsIdDeployKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific project's deploy keys",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add new deploy key to currently authenticated user",
            "description":"Add new deploy key to currently authenticated user",
            "operationId":"postV3ProjectsIdDeployKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new deploy key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The name of the deploy key"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new deploy key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The name of the deploy key"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add new deploy key to currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deploy_keys/{key_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get single deploy key",
            "description":"Get single deploy key",
            "operationId":"getV3ProjectsIdDeployKeysKeyId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get single deploy key",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete deploy key for a project",
            "description":"Delete deploy key for a project",
            "operationId":"deleteV3ProjectsIdDeployKeysKeyId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deploy_keys/{key_id}/enable":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Enable a deploy key for a project",
            "description":"This feature was added in GitLab 8.11",
            "operationId":"postV3ProjectsIdDeployKeysKeyIdEnable",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Enable a deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deploy_keys/{key_id}/disable":{
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Disable a deploy key for a project",
            "description":"This feature was added in GitLab 8.11",
            "operationId":"deleteV3ProjectsIdDeployKeysKeyIdDisable",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the deploy key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Disable a deploy key for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deployments":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all deployments of the project",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3ProjectsIdDeployments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all deployments of the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Deployment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/deployments/{deployment_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets a specific deployment",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3ProjectsIdDeploymentsDeploymentId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"deployment_id",
                  "in":"path",
                  "description":"The deployment ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a specific deployment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Deployment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/environments":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all environments of the project",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3ProjectsIdEnvironments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all environments of the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Environment"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Creates a new environment",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"postV3ProjectsIdEnvironments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the environment to be created"
                           },
                           "external_url":{
                              "type":"string",
                              "description":"URL on which this deployment is viewable"
                           },
                           "slug":{
                              "type":"string"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the environment to be created"
                           },
                           "external_url":{
                              "type":"string",
                              "description":"URL on which this deployment is viewable"
                           },
                           "slug":{
                              "type":"string"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Creates a new environment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Environment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/environments/{environment_id}":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Updates an existing environment",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"putV3ProjectsIdEnvironmentsEnvironmentId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"environment_id",
                  "in":"path",
                  "description":"The environment ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The new environment name"
                           },
                           "external_url":{
                              "type":"string",
                              "description":"The new URL on which this deployment is viewable"
                           },
                           "slug":{
                              "type":"string"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The new environment name"
                           },
                           "external_url":{
                              "type":"string",
                              "description":"The new URL on which this deployment is viewable"
                           },
                           "slug":{
                              "type":"string"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Updates an existing environment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Environment"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Deletes an existing environment",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"deleteV3ProjectsIdEnvironmentsEnvironmentId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"environment_id",
                  "in":"path",
                  "description":"The environment ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Deletes an existing environment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Environment"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/files":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a file from repository",
            "description":"Get a file from repository",
            "operationId":"getV3ProjectsIdRepositoryFiles",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"file_path",
                  "in":"query",
                  "description":"The path to the file. Ex. lib/class.rb",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref",
                  "in":"query",
                  "description":"The name of branch, tag, or commit",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a file from repository",
                  "content":{
                     
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update existing file in repository",
            "description":"Update existing file in repository",
            "operationId":"putV3ProjectsIdRepositoryFiles",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "commit_message",
                           "content",
                           "file_path"
                        ],
                        "properties":{
                           "file_path":{
                              "type":"string",
                              "description":"The path to new file. Ex. lib/class.rb"
                           },
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit Message"
                           },
                           "author_email":{
                              "type":"string",
                              "description":"The email of the author"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"The name of the author"
                           },
                           "content":{
                              "type":"string",
                              "description":"File content"
                           },
                           "encoding":{
                              "type":"string",
                              "description":"File encoding",
                              "enum":[
                                 "base64"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "commit_message",
                           "content",
                           "file_path"
                        ],
                        "properties":{
                           "file_path":{
                              "type":"string",
                              "description":"The path to new file. Ex. lib/class.rb"
                           },
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit Message"
                           },
                           "author_email":{
                              "type":"string",
                              "description":"The email of the author"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"The name of the author"
                           },
                           "content":{
                              "type":"string",
                              "description":"File content"
                           },
                           "encoding":{
                              "type":"string",
                              "description":"File encoding",
                              "enum":[
                                 "base64"
                              ]
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update existing file in repository",
                  "content":{
                     
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create new file in repository",
            "description":"Create new file in repository",
            "operationId":"postV3ProjectsIdRepositoryFiles",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "commit_message",
                           "content",
                           "file_path"
                        ],
                        "properties":{
                           "file_path":{
                              "type":"string",
                              "description":"The path to new file. Ex. lib/class.rb"
                           },
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit Message"
                           },
                           "author_email":{
                              "type":"string",
                              "description":"The email of the author"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"The name of the author"
                           },
                           "content":{
                              "type":"string",
                              "description":"File content"
                           },
                           "encoding":{
                              "type":"string",
                              "description":"File encoding",
                              "enum":[
                                 "base64"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "branch_name",
                           "commit_message",
                           "content",
                           "file_path"
                        ],
                        "properties":{
                           "file_path":{
                              "type":"string",
                              "description":"The path to new file. Ex. lib/class.rb"
                           },
                           "branch_name":{
                              "type":"string",
                              "description":"The name of branch"
                           },
                           "commit_message":{
                              "type":"string",
                              "description":"Commit Message"
                           },
                           "author_email":{
                              "type":"string",
                              "description":"The email of the author"
                           },
                           "author_name":{
                              "type":"string",
                              "description":"The name of the author"
                           },
                           "content":{
                              "type":"string",
                              "description":"File content"
                           },
                           "encoding":{
                              "type":"string",
                              "description":"File encoding",
                              "enum":[
                                 "base64"
                              ]
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create new file in repository",
                  "content":{
                     
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete an existing file in repository",
            "description":"Delete an existing file in repository",
            "operationId":"deleteV3ProjectsIdRepositoryFiles",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"file_path",
                  "in":"query",
                  "description":"The path to new file. Ex. lib/class.rb",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"branch_name",
                  "in":"query",
                  "description":"The name of branch",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"commit_message",
                  "in":"query",
                  "description":"Commit Message",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"author_email",
                  "in":"query",
                  "description":"The email of the author",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"author_name",
                  "in":"query",
                  "description":"The name of the author",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete an existing file in repository",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/time_estimate":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Set a time estimate for a project issue",
            "description":"Set a time estimate for a project issue",
            "operationId":"postV3ProjectsIdIssuesIssueIdTimeEstimate",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Set a time estimate for a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/reset_time_estimate":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Reset the time estimate for a project issue",
            "description":"Reset the time estimate for a project issue",
            "operationId":"postV3ProjectsIdIssuesIssueIdResetTimeEstimate",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Reset the time estimate for a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/add_spent_time":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add spent time for a project issue",
            "description":"Add spent time for a project issue",
            "operationId":"postV3ProjectsIdIssuesIssueIdAddSpentTime",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add spent time for a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/reset_spent_time":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Reset spent time for a project issue",
            "description":"Reset spent time for a project issue",
            "operationId":"postV3ProjectsIdIssuesIssueIdResetSpentTime",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Reset spent time for a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/time_stats":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Show time stats for a project issue",
            "description":"Show time stats for a project issue",
            "operationId":"getV3ProjectsIdIssuesIssueIdTimeStats",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Show time stats for a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project issues",
            "description":"Get a list of project issues",
            "operationId":"getV3ProjectsIdIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"state",
                  "in":"query",
                  "description":"Return opened, closed, or all issues",
                  "schema":{
                     "type":"string",
                     "default":"all",
                     "enum":[
                        "opened",
                        "closed",
                        "all"
                     ]
                  }
               },
               {
                  "name":"iid",
                  "in":"query",
                  "description":"Return the issue having the given `iid`",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"labels",
                  "in":"query",
                  "description":"Comma-separated list of label names",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone",
                  "in":"query",
                  "description":"Return issues for a specific milestone",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return issues ordered by `created_at` or `updated_at` fields.",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "created_at",
                        "updated_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return issues sorted in `asc` or `desc` order.",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project issues",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new project issue",
            "description":"Create a new project issue",
            "operationId":"postV3ProjectsIdIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of an issue"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"Date time when the issue was created. Available only for admins and project owners.",
                              "format":"date-time"
                           },
                           "merge_request_for_resolving_discussions":{
                              "type":"integer",
                              "description":"The IID of a merge request for which to resolve discussions",
                              "format":"int32"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of an issue"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign issue",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign issue",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"Date time string in the format YEAR-MONTH-DAY"
                           },
                           "confidential":{
                              "type":"boolean",
                              "description":"Boolean parameter if the issue should be confidential"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of an issue"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"Date time when the issue was created. Available only for admins and project owners.",
                              "format":"date-time"
                           },
                           "merge_request_for_resolving_discussions":{
                              "type":"integer",
                              "description":"The IID of a merge request for which to resolve discussions",
                              "format":"int32"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of an issue"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign issue",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign issue",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"Date time string in the format YEAR-MONTH-DAY"
                           },
                           "confidential":{
                              "type":"boolean",
                              "description":"Boolean parameter if the issue should be confidential"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new project issue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single project issue",
            "description":"Get a single project issue",
            "operationId":"getV3ProjectsIdIssuesIssueId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single project issue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing issue",
            "description":"Update an existing issue",
            "operationId":"putV3ProjectsIdIssuesIssueId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of an issue"
                           },
                           "updated_at":{
                              "type":"string",
                              "description":"Date time when the issue was updated. Available only for admins and project owners.",
                              "format":"date-time"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"State of the issue",
                              "enum":[
                                 "reopen",
                                 "close"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of an issue"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign issue",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign issue",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"Date time string in the format YEAR-MONTH-DAY"
                           },
                           "confidential":{
                              "type":"boolean",
                              "description":"Boolean parameter if the issue should be confidential"
                           },
                           "created_at":{
                              "type":"string"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of an issue"
                           },
                           "updated_at":{
                              "type":"string",
                              "description":"Date time when the issue was updated. Available only for admins and project owners.",
                              "format":"date-time"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"State of the issue",
                              "enum":[
                                 "reopen",
                                 "close"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of an issue"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign issue",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign issue",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"Date time string in the format YEAR-MONTH-DAY"
                           },
                           "confidential":{
                              "type":"boolean",
                              "description":"Boolean parameter if the issue should be confidential"
                           },
                           "created_at":{
                              "type":"string"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing issue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a project issue",
            "description":"Delete a project issue",
            "operationId":"deleteV3ProjectsIdIssuesIssueId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a project issue",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/move":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Move an existing issue",
            "description":"Move an existing issue",
            "operationId":"postV3ProjectsIdIssuesIssueIdMove",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of a project issue",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "to_project_id"
                        ],
                        "properties":{
                           "to_project_id":{
                              "type":"integer",
                              "description":"The ID of the new project",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "to_project_id"
                        ],
                        "properties":{
                           "to_project_id":{
                              "type":"integer",
                              "description":"The ID of the new project",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Move an existing issue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/labels":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all labels of the project",
            "description":"Get all labels of the project",
            "operationId":"getV3ProjectsIdLabels",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all labels of the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing label. At least one optional parameter is required.",
            "description":"Update an existing label. At least one optional parameter is required.",
            "operationId":"putV3ProjectsIdLabels",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the label to be updated"
                           },
                           "new_name":{
                              "type":"string",
                              "description":"The new name of the label"
                           },
                           "color":{
                              "type":"string",
                              "description":"The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                           },
                           "description":{
                              "type":"string",
                              "description":"The new description of label"
                           },
                           "priority":{
                              "type":"integer",
                              "description":"The priority of the label",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the label to be updated"
                           },
                           "new_name":{
                              "type":"string",
                              "description":"The new name of the label"
                           },
                           "color":{
                              "type":"string",
                              "description":"The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                           },
                           "description":{
                              "type":"string",
                              "description":"The new description of label"
                           },
                           "priority":{
                              "type":"integer",
                              "description":"The priority of the label",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update an existing label. At least one optional parameter is required.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new label",
            "description":"Create a new label",
            "operationId":"postV3ProjectsIdLabels",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "color",
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the label to be created"
                           },
                           "color":{
                              "type":"string",
                              "description":"The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of label to be created"
                           },
                           "priority":{
                              "type":"integer",
                              "description":"The priority of the label",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "color",
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the label to be created"
                           },
                           "color":{
                              "type":"string",
                              "description":"The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of label to be created"
                           },
                           "priority":{
                              "type":"integer",
                              "description":"The priority of the label",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new label",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete an existing label",
            "description":"Delete an existing label",
            "operationId":"deleteV3ProjectsIdLabels",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"name",
                  "in":"query",
                  "description":"The name of the label to be deleted",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete an existing label",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/members":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets a list of group or project members viewable by the authenticated user.",
            "description":"Gets a list of group or project members viewable by the authenticated user.",
            "operationId":"getV3ProjectsIdMembers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"query",
                  "in":"query",
                  "description":"A query string to search for members",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a list of group or project members viewable by the authenticated user.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Adds a member to a group or project.",
            "description":"Adds a member to a group or project.",
            "operationId":"postV3ProjectsIdMembers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level",
                           "user_id"
                        ],
                        "properties":{
                           "user_id":{
                              "type":"integer",
                              "description":"The user ID of the new member",
                              "format":"int32"
                           },
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level",
                           "user_id"
                        ],
                        "properties":{
                           "user_id":{
                              "type":"integer",
                              "description":"The user ID of the new member",
                              "format":"int32"
                           },
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level (defaults: `30`, developer access level)",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Adds a member to a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/members/{user_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets a member of a group or project.",
            "description":"Gets a member of a group or project.",
            "operationId":"getV3ProjectsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a member of a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Updates a member of a group or project.",
            "description":"Updates a member of a group or project.",
            "operationId":"putV3ProjectsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the new member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level"
                        ],
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "access_level"
                        ],
                        "properties":{
                           "access_level":{
                              "type":"integer",
                              "description":"A valid access level",
                              "format":"int32"
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Date string in the format YEAR-MONTH-DAY",
                              "format":"date-time"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Updates a member of a group or project.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Member"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Removes a user from a group or project.",
            "description":"Removes a user from a group or project.",
            "operationId":"deleteV3ProjectsIdMembersUserId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The user ID of the member",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Removes a user from a group or project.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/versions":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of merge request diff versions",
            "description":"This feature was introduced in GitLab 8.12.",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdVersions",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a merge request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of merge request diff versions",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequestDiff"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single merge request diff version",
            "description":"This feature was introduced in GitLab 8.12.",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a merge request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"version_id",
                  "in":"path",
                  "description":"The ID of a merge request diff version",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single merge request diff version",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequestDiffFull"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Set a time estimate for a project merge_request",
            "description":"Set a time estimate for a project merge_request",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a project merge_request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Set a time estimate for a project merge_request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Reset the time estimate for a project merge_request",
            "description":"Reset the time estimate for a project merge_request",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a project merge_request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Reset the time estimate for a project merge_request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add spent time for a project merge_request",
            "description":"Add spent time for a project merge_request",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a project merge_request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "duration"
                        ],
                        "properties":{
                           "duration":{
                              "type":"string",
                              "description":"The duration to be parsed"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add spent time for a project merge_request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Reset spent time for a project merge_request",
            "description":"Reset spent time for a project merge_request",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a project merge_request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Reset spent time for a project merge_request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/time_stats":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Show time stats for a project merge_request",
            "description":"Show time stats for a project merge_request",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a project merge_request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Show time stats for a project merge_request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"List merge requests",
            "description":"List merge requests",
            "operationId":"getV3ProjectsIdMergeRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"state",
                  "in":"query",
                  "description":"Return opened, closed, merged, or all merge requests",
                  "schema":{
                     "type":"string",
                     "default":"all",
                     "enum":[
                        "opened",
                        "closed",
                        "merged",
                        "all"
                     ]
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return merge requests ordered by `created_at` or `updated_at` fields.",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "created_at",
                        "updated_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return merge requests sorted in `asc` or `desc` order.",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"List merge requests",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a merge request",
            "description":"Create a merge request",
            "operationId":"postV3ProjectsIdMergeRequests",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "source_branch",
                           "target_branch",
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "source_branch":{
                              "type":"string",
                              "description":"The source branch"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "target_project_id":{
                              "type":"integer",
                              "description":"The target project of the merge request defaults to the :id of the project",
                              "format":"int32"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "source_branch",
                           "target_branch",
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "source_branch":{
                              "type":"string",
                              "description":"The source branch"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "target_project_id":{
                              "type":"integer",
                              "description":"The target project of the merge request defaults to the :id of the project",
                              "format":"int32"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single merge request",
            "description":"Get a single merge request",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update a merge request",
            "description":"Update a merge request",
            "operationId":"putV3ProjectsIdMergeRequestsMergeRequestId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"Status of the merge request",
                              "enum":[
                                 "close",
                                 "reopen",
                                 "merge"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"Status of the merge request",
                              "enum":[
                                 "close",
                                 "reopen",
                                 "merge"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a merge request",
            "description":"Delete a merge request",
            "operationId":"deleteV3ProjectsIdMergeRequestsMergeRequestId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a merge request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a merge request",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single merge request",
            "description":"This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3ProjectsIdMergeRequestMergeRequestId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of a merge request",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update a merge request",
            "description":"Update a merge request",
            "operationId":"putV3ProjectsIdMergeRequestMergeRequestId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"Status of the merge request",
                              "enum":[
                                 "close",
                                 "reopen",
                                 "merge"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the merge request"
                           },
                           "target_branch":{
                              "type":"string",
                              "description":"The target branch"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"Status of the merge request",
                              "enum":[
                                 "close",
                                 "reopen",
                                 "merge"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the merge request"
                           },
                           "assignee_id":{
                              "type":"integer",
                              "description":"The ID of a user to assign the merge request",
                              "format":"int32"
                           },
                           "milestone_id":{
                              "type":"integer",
                              "description":"The ID of a milestone to assign the merge request",
                              "format":"int32"
                           },
                           "labels":{
                              "type":"string",
                              "description":"Comma-separated list of label names"
                           },
                           "remove_source_branch":{
                              "type":"boolean",
                              "description":"Remove source branch when merging"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/commits":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the commits of a merge request",
            "description":"Get the commits of a merge request",
            "operationId":"getV3ProjectsIdMergeRequestMergeRequestIdCommits",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the commits of a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommit"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/changes":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Show the merge request changes",
            "description":"Show the merge request changes",
            "operationId":"getV3ProjectsIdMergeRequestMergeRequestIdChanges",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Show the merge request changes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequestChanges"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/merge":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Merge a merge request",
            "description":"Merge a merge request",
            "operationId":"putV3ProjectsIdMergeRequestMergeRequestIdMerge",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "merge_commit_message":{
                              "type":"string",
                              "description":"Custom merge commit message"
                           },
                           "should_remove_source_branch":{
                              "type":"boolean",
                              "description":"When true, the source branch will be deleted if possible"
                           },
                           "merge_when_build_succeeds":{
                              "type":"boolean",
                              "description":"When true, this merge request will be merged when the pipeline succeeds"
                           },
                           "sha":{
                              "type":"string",
                              "description":"When present, must have the HEAD SHA of the source branch"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "merge_commit_message":{
                              "type":"string",
                              "description":"Custom merge commit message"
                           },
                           "should_remove_source_branch":{
                              "type":"boolean",
                              "description":"When true, the source branch will be deleted if possible"
                           },
                           "merge_when_build_succeeds":{
                              "type":"boolean",
                              "description":"When true, this merge request will be merged when the pipeline succeeds"
                           },
                           "sha":{
                              "type":"string",
                              "description":"When present, must have the HEAD SHA of the source branch"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Merge a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
            "description":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
            "operationId":"postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/comments":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the comments of a merge request",
            "description":"Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
            "operationId":"getV3ProjectsIdMergeRequestMergeRequestIdComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the comments of a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Post a comment to a merge request",
            "description":"Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
            "operationId":"postV3ProjectsIdMergeRequestMergeRequestIdComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Post a comment to a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{merge_request_id}/closes_issues":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"List issues that will be closed on merge",
            "description":"List issues that will be closed on merge",
            "operationId":"getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"List issues that will be closed on merge",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/commits":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the commits of a merge request",
            "description":"Get the commits of a merge request",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdCommits",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the commits of a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoCommit"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/changes":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Show the merge request changes",
            "description":"Show the merge request changes",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdChanges",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Show the merge request changes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequestChanges"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/merge":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Merge a merge request",
            "description":"Merge a merge request",
            "operationId":"putV3ProjectsIdMergeRequestsMergeRequestIdMerge",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "merge_commit_message":{
                              "type":"string",
                              "description":"Custom merge commit message"
                           },
                           "should_remove_source_branch":{
                              "type":"boolean",
                              "description":"When true, the source branch will be deleted if possible"
                           },
                           "merge_when_build_succeeds":{
                              "type":"boolean",
                              "description":"When true, this merge request will be merged when the pipeline succeeds"
                           },
                           "sha":{
                              "type":"string",
                              "description":"When present, must have the HEAD SHA of the source branch"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "merge_commit_message":{
                              "type":"string",
                              "description":"Custom merge commit message"
                           },
                           "should_remove_source_branch":{
                              "type":"boolean",
                              "description":"When true, the source branch will be deleted if possible"
                           },
                           "merge_when_build_succeeds":{
                              "type":"boolean",
                              "description":"When true, this merge request will be merged when the pipeline succeeds"
                           },
                           "sha":{
                              "type":"string",
                              "description":"When present, must have the HEAD SHA of the source branch"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Merge a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
            "description":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/comments":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the comments of a merge request",
            "description":"Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the comments of a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Post a comment to a merge request",
            "description":"Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdComments",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "note"
                        ],
                        "properties":{
                           "note":{
                              "type":"string",
                              "description":"The text of the comment"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Post a comment to a merge request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"List issues that will be closed on merge",
            "description":"List issues that will be closed on merge",
            "operationId":"getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"List issues that will be closed on merge",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MRNote"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/milestones":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project milestones",
            "description":"Get a list of project milestones",
            "operationId":"getV3ProjectsIdMilestones",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"state",
                  "in":"query",
                  "description":"Return \"active\", \"closed\", or \"all\" milestones",
                  "schema":{
                     "type":"string",
                     "default":"all",
                     "enum":[
                        "active",
                        "closed",
                        "all"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project milestones",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Milestone"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new project milestone",
            "description":"Create a new project milestone",
            "operationId":"postV3ProjectsIdMilestones",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the milestone"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the milestone"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           },
                           "start_date":{
                              "type":"string",
                              "description":"The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the milestone"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the milestone"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           },
                           "start_date":{
                              "type":"string",
                              "description":"The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new project milestone",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Milestone"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/milestones/{milestone_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single project milestone",
            "description":"Get a single project milestone",
            "operationId":"getV3ProjectsIdMilestonesMilestoneId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone_id",
                  "in":"path",
                  "description":"The ID of a project milestone",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single project milestone",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Milestone"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing project milestone",
            "description":"Update an existing project milestone",
            "operationId":"putV3ProjectsIdMilestonesMilestoneId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone_id",
                  "in":"path",
                  "description":"The ID of a project milestone",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the milestone"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"The state event of the milestone ",
                              "enum":[
                                 "close",
                                 "activate"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the milestone"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           },
                           "start_date":{
                              "type":"string",
                              "description":"The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the milestone"
                           },
                           "state_event":{
                              "type":"string",
                              "description":"The state event of the milestone ",
                              "enum":[
                                 "close",
                                 "activate"
                              ]
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the milestone"
                           },
                           "due_date":{
                              "type":"string",
                              "description":"The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           },
                           "start_date":{
                              "type":"string",
                              "description":"The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing project milestone",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Milestone"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/milestones/{milestone_id}/issues":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all issues for a single project milestone",
            "description":"Get all issues for a single project milestone",
            "operationId":"getV3ProjectsIdMilestonesMilestoneIdIssues",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone_id",
                  "in":"path",
                  "description":"The ID of a project milestone",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all issues for a single project milestone",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{noteable_id}/notes":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +noteable+ notes",
            "description":"Get a list of project +noteable+ notes",
            "operationId":"getV3ProjectsIdIssuesNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +noteable+ notes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new +noteable+ note",
            "description":"Create a new +noteable+ note",
            "operationId":"postV3ProjectsIdIssuesNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single +noteable+ note",
            "description":"Get a single +noteable+ note",
            "operationId":"getV3ProjectsIdIssuesNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing +noteable+ note",
            "description":"Update an existing +noteable+ note",
            "operationId":"putV3ProjectsIdIssuesNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update an existing +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +noteable+ note",
            "description":"Delete a +noteable+ note",
            "operationId":"deleteV3ProjectsIdIssuesNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{noteable_id}/notes":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +noteable+ notes",
            "description":"Get a list of project +noteable+ notes",
            "operationId":"getV3ProjectsIdMergeRequestsNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +noteable+ notes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new +noteable+ note",
            "description":"Create a new +noteable+ note",
            "operationId":"postV3ProjectsIdMergeRequestsNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single +noteable+ note",
            "description":"Get a single +noteable+ note",
            "operationId":"getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing +noteable+ note",
            "description":"Update an existing +noteable+ note",
            "operationId":"putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update an existing +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +noteable+ note",
            "description":"Delete a +noteable+ note",
            "operationId":"deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{noteable_id}/notes":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of project +noteable+ notes",
            "description":"Get a list of project +noteable+ notes",
            "operationId":"getV3ProjectsIdSnippetsNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of project +noteable+ notes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new +noteable+ note",
            "description":"Create a new +noteable+ note",
            "operationId":"postV3ProjectsIdSnippetsNoteableIdNotes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           },
                           "created_at":{
                              "type":"string",
                              "description":"The creation date of the note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single +noteable+ note",
            "description":"Get a single +noteable+ note",
            "operationId":"getV3ProjectsIdSnippetsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing +noteable+ note",
            "description":"Update an existing +noteable+ note",
            "operationId":"putV3ProjectsIdSnippetsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "body"
                        ],
                        "properties":{
                           "body":{
                              "type":"string",
                              "description":"The content of a note"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update an existing +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a +noteable+ note",
            "description":"Delete a +noteable+ note",
            "operationId":"deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"noteable_id",
                  "in":"path",
                  "description":"The ID of the noteable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"note_id",
                  "in":"path",
                  "description":"The ID of a note",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a +noteable+ note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Note"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/notification_settings":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get project level notification level settings, defaults to Global",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"getV3ProjectsIdNotificationSettings",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID or project ID or project NAMESPACE/PROJECT_NAME",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get project level notification level settings, defaults to Global",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/NotificationSetting"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update project level notification level settings, defaults to Global",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"putV3ProjectsIdNotificationSettings",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The group ID or project ID or project NAMESPACE/PROJECT_NAME",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The project notification level"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The project notification level"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update project level notification level settings, defaults to Global",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/NotificationSetting"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/pipelines":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all Pipelines of the project",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"getV3ProjectsIdPipelines",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"scope",
                  "in":"query",
                  "description":"Either running, branches, or tags",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "running",
                        "branches",
                        "tags"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all Pipelines of the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Pipeline"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/pipeline":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new pipeline",
            "description":"This feature was introduced in GitLab 8.14",
            "operationId":"postV3ProjectsIdPipeline",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "ref"
                        ],
                        "properties":{
                           "ref":{
                              "type":"string",
                              "description":"Reference"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "ref"
                        ],
                        "properties":{
                           "ref":{
                              "type":"string",
                              "description":"Reference"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new pipeline",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Pipeline"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/pipelines/{pipeline_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets a specific pipeline for the project",
            "description":"This feature was introduced in GitLab 8.11",
            "operationId":"getV3ProjectsIdPipelinesPipelineId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"pipeline_id",
                  "in":"path",
                  "description":"The pipeline ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets a specific pipeline for the project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Pipeline"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/pipelines/{pipeline_id}/retry":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Retry failed builds in the pipeline",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"postV3ProjectsIdPipelinesPipelineIdRetry",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"pipeline_id",
                  "in":"path",
                  "description":"The pipeline ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Retry failed builds in the pipeline",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Pipeline"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/pipelines/{pipeline_id}/cancel":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Cancel all builds in the pipeline",
            "description":"This feature was introduced in GitLab 8.11.",
            "operationId":"postV3ProjectsIdPipelinesPipelineIdCancel",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The project ID",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"pipeline_id",
                  "in":"path",
                  "description":"The pipeline ID",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Cancel all builds in the pipeline",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Pipeline"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/hooks":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get project hooks",
            "description":"Get project hooks",
            "operationId":"getV3ProjectsIdHooks",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get project hooks",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectHook"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add hook to project",
            "description":"Add hook to project",
            "operationId":"postV3ProjectsIdHooks",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "issues_events":{
                              "type":"boolean",
                              "description":"Trigger hook on issues events"
                           },
                           "merge_requests_events":{
                              "type":"boolean",
                              "description":"Trigger hook on merge request events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "note_events":{
                              "type":"boolean",
                              "description":"Trigger hook on note(comment) events"
                           },
                           "build_events":{
                              "type":"boolean",
                              "description":"Trigger hook on build events"
                           },
                           "pipeline_events":{
                              "type":"boolean",
                              "description":"Trigger hook on pipeline events"
                           },
                           "wiki_page_events":{
                              "type":"boolean",
                              "description":"Trigger hook on wiki events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           },
                           "token":{
                              "type":"string",
                              "description":"Secret token to validate received payloads; this will not be returned in the response"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "issues_events":{
                              "type":"boolean",
                              "description":"Trigger hook on issues events"
                           },
                           "merge_requests_events":{
                              "type":"boolean",
                              "description":"Trigger hook on merge request events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "note_events":{
                              "type":"boolean",
                              "description":"Trigger hook on note(comment) events"
                           },
                           "build_events":{
                              "type":"boolean",
                              "description":"Trigger hook on build events"
                           },
                           "pipeline_events":{
                              "type":"boolean",
                              "description":"Trigger hook on pipeline events"
                           },
                           "wiki_page_events":{
                              "type":"boolean",
                              "description":"Trigger hook on wiki events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           },
                           "token":{
                              "type":"string",
                              "description":"Secret token to validate received payloads; this will not be returned in the response"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add hook to project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectHook"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/hooks/{hook_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project hook",
            "description":"Get a project hook",
            "operationId":"getV3ProjectsIdHooksHookId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"hook_id",
                  "in":"path",
                  "description":"The ID of a project hook",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectHook"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing project hook",
            "description":"Update an existing project hook",
            "operationId":"putV3ProjectsIdHooksHookId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"hook_id",
                  "in":"path",
                  "description":"The ID of the hook to update",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "issues_events":{
                              "type":"boolean",
                              "description":"Trigger hook on issues events"
                           },
                           "merge_requests_events":{
                              "type":"boolean",
                              "description":"Trigger hook on merge request events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "note_events":{
                              "type":"boolean",
                              "description":"Trigger hook on note(comment) events"
                           },
                           "build_events":{
                              "type":"boolean",
                              "description":"Trigger hook on build events"
                           },
                           "pipeline_events":{
                              "type":"boolean",
                              "description":"Trigger hook on pipeline events"
                           },
                           "wiki_page_events":{
                              "type":"boolean",
                              "description":"Trigger hook on wiki events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           },
                           "token":{
                              "type":"string",
                              "description":"Secret token to validate received payloads; this will not be returned in the response"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "issues_events":{
                              "type":"boolean",
                              "description":"Trigger hook on issues events"
                           },
                           "merge_requests_events":{
                              "type":"boolean",
                              "description":"Trigger hook on merge request events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "note_events":{
                              "type":"boolean",
                              "description":"Trigger hook on note(comment) events"
                           },
                           "build_events":{
                              "type":"boolean",
                              "description":"Trigger hook on build events"
                           },
                           "pipeline_events":{
                              "type":"boolean",
                              "description":"Trigger hook on pipeline events"
                           },
                           "wiki_page_events":{
                              "type":"boolean",
                              "description":"Trigger hook on wiki events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           },
                           "token":{
                              "type":"string",
                              "description":"Secret token to validate received payloads; this will not be returned in the response"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update an existing project hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectHook"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Deletes project hook",
            "description":"Deletes project hook",
            "operationId":"deleteV3ProjectsIdHooksHookId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"hook_id",
                  "in":"path",
                  "description":"The ID of the hook to delete",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Deletes project hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectHook"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/visible":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of visible projects for authenticated user",
            "description":"Get a list of visible projects for authenticated user",
            "operationId":"getV3ProjectsVisible",
            "parameters":[
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of visible projects for authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BasicProjectDetails"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a projects list for authenticated user",
            "description":"Get a projects list for authenticated user",
            "operationId":"getV3Projects",
            "parameters":[
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a projects list for authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BasicProjectDetails"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create new project",
            "description":"Create new project",
            "operationId":"postV3Projects",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the repository"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           },
                           "namespace_id":{
                              "type":"integer",
                              "description":"Namespace ID for the new project. Default to the user namespace.",
                              "format":"int32"
                           },
                           "import_url":{
                              "type":"string",
                              "description":"URL from which the project is imported"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the repository"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           },
                           "namespace_id":{
                              "type":"integer",
                              "description":"Namespace ID for the new project. Default to the user namespace.",
                              "format":"int32"
                           },
                           "import_url":{
                              "type":"string",
                              "description":"URL from which the project is imported"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create new project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/owned":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get an owned projects list for authenticated user",
            "description":"Get an owned projects list for authenticated user",
            "operationId":"getV3ProjectsOwned",
            "parameters":[
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"statistics",
                  "in":"query",
                  "description":"Include project statistics",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get an owned projects list for authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BasicProjectDetails"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/starred":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Gets starred project for the authenticated user",
            "description":"Gets starred project for the authenticated user",
            "operationId":"getV3ProjectsStarred",
            "parameters":[
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Gets starred project for the authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BasicProjectDetails"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/all":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all projects for admin user",
            "description":"Get all projects for admin user",
            "operationId":"getV3ProjectsAll",
            "parameters":[
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"archived",
                  "in":"query",
                  "description":"Limit by archived status",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"visibility",
                  "in":"query",
                  "description":"Limit by visibility",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "public",
                        "internal",
                        "private"
                     ]
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of authorized projects matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"simple",
                  "in":"query",
                  "description":"Return only the ID, URL, name, and path of each project",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"statistics",
                  "in":"query",
                  "description":"Include project statistics",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all projects for admin user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BasicProjectDetails"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/search/{query}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Search for projects the current user has access to",
            "description":"Search for projects the current user has access to",
            "operationId":"getV3ProjectsSearchQuery",
            "parameters":[
               {
                  "name":"query",
                  "in":"path",
                  "description":"The project name to be searched",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return projects ordered by field",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "id",
                        "name",
                        "path",
                        "created_at",
                        "updated_at",
                        "last_activity_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return projects sorted in ascending and descending order",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Search for projects the current user has access to",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/user/{user_id}":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create new project for a specified user. Only available to admin users.",
            "description":"Create new project for a specified user. Only available to admin users.",
            "operationId":"postV3ProjectsUserUserId",
            "parameters":[
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"The ID of a user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "default_branch":{
                              "type":"string",
                              "description":"The default branch of the project"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           },
                           "namespace_id":{
                              "type":"integer",
                              "description":"Namespace ID for the new project. Default to the user namespace.",
                              "format":"int32"
                           },
                           "import_url":{
                              "type":"string",
                              "description":"URL from which the project is imported"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "name"
                        ],
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "default_branch":{
                              "type":"string",
                              "description":"The default branch of the project"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           },
                           "namespace_id":{
                              "type":"integer",
                              "description":"Namespace ID for the new project. Default to the user namespace.",
                              "format":"int32"
                           },
                           "import_url":{
                              "type":"string",
                              "description":"URL from which the project is imported"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create new project for a specified user. Only available to admin users.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single project",
            "description":"Get a single project",
            "operationId":"getV3ProjectsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectWithAccess"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing project",
            "description":"Update an existing project",
            "operationId":"putV3ProjectsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "default_branch":{
                              "type":"string",
                              "description":"The default branch of the project"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the repository"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string",
                              "description":"The name of the project"
                           },
                           "default_branch":{
                              "type":"string",
                              "description":"The default branch of the project"
                           },
                           "path":{
                              "type":"string",
                              "description":"The path of the repository"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the project"
                           },
                           "issues_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the issue tracker is enabled"
                           },
                           "merge_requests_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if merge requests are enabled"
                           },
                           "wiki_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the wiki is enabled"
                           },
                           "builds_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if builds are enabled"
                           },
                           "snippets_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if snippets are enabled"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if shared runners are enabled for that project"
                           },
                           "container_registry_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if the container registry is enabled for that project"
                           },
                           "lfs_enabled":{
                              "type":"boolean",
                              "description":"Flag indication if Git LFS is enabled for that project"
                           },
                           "public":{
                              "type":"boolean",
                              "description":"Create a public project. The same as visibility_level = 20."
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"Create a public project. The same as visibility_level = 20.",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "public_builds":{
                              "type":"boolean",
                              "description":"Perform public builds"
                           },
                           "request_access_enabled":{
                              "type":"boolean",
                              "description":"Allow users to request member access"
                           },
                           "only_allow_merge_if_build_succeeds":{
                              "type":"boolean",
                              "description":"Only allow to merge if builds succeed"
                           },
                           "only_allow_merge_if_all_discussions_are_resolved":{
                              "type":"boolean",
                              "description":"Only allow to merge if all discussions are resolved"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Remove a project",
            "description":"Remove a project",
            "operationId":"deleteV3ProjectsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Remove a project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/events":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get events for a single project",
            "description":"Get events for a single project",
            "operationId":"getV3ProjectsIdEvents",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get events for a single project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Event"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/fork/{id}":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Fork new project for the current user or provided namespace.",
            "description":"Fork new project for the current user or provided namespace.",
            "operationId":"postV3ProjectsForkId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "namespace":{
                              "type":"string",
                              "description":"The ID or name of the namespace that the project will be forked into"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "namespace":{
                              "type":"string",
                              "description":"The ID or name of the namespace that the project will be forked into"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Fork new project for the current user or provided namespace.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/archive":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Archive a project",
            "description":"Archive a project",
            "operationId":"postV3ProjectsIdArchive",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Archive a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/unarchive":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Unarchive a project",
            "description":"Unarchive a project",
            "operationId":"postV3ProjectsIdUnarchive",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Unarchive a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/star":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Star a project",
            "description":"Star a project",
            "operationId":"postV3ProjectsIdStar",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Star a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Unstar a project",
            "description":"Unstar a project",
            "operationId":"deleteV3ProjectsIdStar",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unstar a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Project"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/fork/{forked_from_id}":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Mark this project as forked from another",
            "description":"Mark this project as forked from another",
            "operationId":"postV3ProjectsIdForkForkedFromId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"forked_from_id",
                  "in":"path",
                  "description":"The ID of the project it was forked from",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Mark this project as forked from another",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/fork":{
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Remove a forked_from relationship",
            "description":"Remove a forked_from relationship",
            "operationId":"deleteV3ProjectsIdFork",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Remove a forked_from relationship",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/share":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Share the project with a group",
            "description":"Share the project with a group",
            "operationId":"postV3ProjectsIdShare",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "group_access",
                           "group_id"
                        ],
                        "properties":{
                           "group_id":{
                              "type":"integer",
                              "description":"The ID of a group",
                              "format":"int32"
                           },
                           "group_access":{
                              "type":"integer",
                              "description":"The group access level",
                              "format":"int32",
                              "enum":[
                                 "10",
                                 "20",
                                 "30",
                                 "40"
                              ]
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Share expiration date",
                              "format":"date"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "group_access",
                           "group_id"
                        ],
                        "properties":{
                           "group_id":{
                              "type":"integer",
                              "description":"The ID of a group",
                              "format":"int32"
                           },
                           "group_access":{
                              "type":"integer",
                              "description":"The group access level",
                              "format":"int32",
                              "enum":[
                                 "10",
                                 "20",
                                 "30",
                                 "40"
                              ]
                           },
                           "expires_at":{
                              "type":"string",
                              "description":"Share expiration date",
                              "format":"date"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Share the project with a group",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectGroupLink"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/share/{group_id}":{
         "delete":{
            "tags":[
               "projects"
            ],
            "operationId":"deleteV3ProjectsIdShareGroupId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"group_id",
                  "in":"path",
                  "description":"The ID of the group",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"deleted Share",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/uploads":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Upload a file",
            "description":"Upload a file",
            "operationId":"postV3ProjectsIdUploads",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "file"
                        ],
                        "properties":{
                           "file":{
                              "type":"string",
                              "description":"The file to be uploaded",
                              "format":"binary"
                           }
                        }
                     }
                  },
                  "multipart/form-data":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "file"
                        ],
                        "properties":{
                           "file":{
                              "type":"string",
                              "description":"The file to be uploaded",
                              "format":"binary"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Upload a file",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/users":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the users list of a project",
            "description":"Get the users list of a project",
            "operationId":"getV3ProjectsIdUsers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Return list of users matching the search criteria",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the users list of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserBasic"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get all project snippets",
            "description":"Get all project snippets",
            "operationId":"getV3ProjectsIdSnippets",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all project snippets",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectSnippet"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new project snippet",
            "description":"Create a new project snippet",
            "operationId":"postV3ProjectsIdSnippets",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "code",
                           "file_name",
                           "title",
                           "visibility_level"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The file name of the snippet"
                           },
                           "code":{
                              "type":"string",
                              "description":"The content of the snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "code",
                           "file_name",
                           "title",
                           "visibility_level"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The file name of the snippet"
                           },
                           "code":{
                              "type":"string",
                              "description":"The content of the snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new project snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectSnippet"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single project snippet",
            "description":"Get a single project snippet",
            "operationId":"getV3ProjectsIdSnippetsSnippetId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "description":"The ID of a project snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single project snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectSnippet"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing project snippet",
            "description":"Update an existing project snippet",
            "operationId":"putV3ProjectsIdSnippetsSnippetId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "description":"The ID of a project snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The file name of the snippet"
                           },
                           "code":{
                              "type":"string",
                              "description":"The content of the snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of the snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The file name of the snippet"
                           },
                           "code":{
                              "type":"string",
                              "description":"The content of the snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing project snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectSnippet"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a project snippet",
            "description":"Delete a project snippet",
            "operationId":"deleteV3ProjectsIdSnippetsSnippetId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "description":"The ID of a project snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a project snippet",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/snippets/{snippet_id}/raw":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a raw project snippet",
            "description":"Get a raw project snippet",
            "operationId":"getV3ProjectsIdSnippetsSnippetIdRaw",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"snippet_id",
                  "in":"path",
                  "description":"The ID of a project snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a raw project snippet",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/tree":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project repository tree",
            "description":"Get a project repository tree",
            "operationId":"getV3ProjectsIdRepositoryTree",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref_name",
                  "in":"query",
                  "description":"The name of a repository branch or tag, if not given the default branch is used",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"path",
                  "in":"query",
                  "description":"The path of the tree",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"recursive",
                  "in":"query",
                  "description":"Used to get a recursive tree",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project repository tree",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoTreeObject"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/blobs/{sha}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a raw file contents",
            "description":"Get a raw file contents",
            "operationId":"getV3ProjectsIdRepositoryBlobsSha",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit, branch name, or tag name",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"filepath",
                  "in":"query",
                  "description":"The path to the file to display",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a raw file contents",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/commits/{sha}/blob":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a raw file contents",
            "description":"Get a raw file contents",
            "operationId":"getV3ProjectsIdRepositoryCommitsShaBlob",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit, branch name, or tag name",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"filepath",
                  "in":"query",
                  "description":"The path to the file to display",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a raw file contents",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/raw_blobs/{sha}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a raw blob contents by blob sha",
            "description":"Get a raw blob contents by blob sha",
            "operationId":"getV3ProjectsIdRepositoryRawBlobsSha",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"path",
                  "description":"The commit, branch name, or tag name",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a raw blob contents by blob sha",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/archive":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get an archive of the repository",
            "description":"Get an archive of the repository",
            "operationId":"getV3ProjectsIdRepositoryArchive",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sha",
                  "in":"query",
                  "description":"The commit sha of the archive to be downloaded",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"format",
                  "in":"query",
                  "description":"The archive format",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get an archive of the repository",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/compare":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Compare two branches, tags, or commits",
            "description":"Compare two branches, tags, or commits",
            "operationId":"getV3ProjectsIdRepositoryCompare",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"from",
                  "in":"query",
                  "description":"The commit, branch name, or tag name to start comparison",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"to",
                  "in":"query",
                  "description":"The commit, branch name, or tag name to stop comparison",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Compare two branches, tags, or commits",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Compare"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/contributors":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get repository contributors",
            "description":"Get repository contributors",
            "operationId":"getV3ProjectsIdRepositoryContributors",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get repository contributors",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Contributor"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/runners":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get runners available for project",
            "description":"Get runners available for project",
            "operationId":"getV3ProjectsIdRunners",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"scope",
                  "in":"query",
                  "description":"The scope of specific runners to show",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "active",
                        "paused",
                        "online",
                        "specific",
                        "shared"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get runners available for project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Enable a runner for a project",
            "description":"Enable a runner for a project",
            "operationId":"postV3ProjectsIdRunners",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "runner_id"
                        ],
                        "properties":{
                           "runner_id":{
                              "type":"integer",
                              "description":"The ID of the runner",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "runner_id"
                        ],
                        "properties":{
                           "runner_id":{
                              "type":"integer",
                              "description":"The ID of the runner",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Enable a runner for a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/runners/{runner_id}":{
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Disable project's runner",
            "description":"Disable project's runner",
            "operationId":"deleteV3ProjectsIdRunnersRunnerId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"runner_id",
                  "in":"path",
                  "description":"The ID of the runner",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Disable project's runner",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/asana":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set asana service for project",
            "description":"Set asana service for project",
            "operationId":"putV3ProjectsIdServicesAsana",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"User API token"
                           },
                           "restrict_to_branch":{
                              "type":"string",
                              "description":"Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"User API token"
                           },
                           "restrict_to_branch":{
                              "type":"string",
                              "description":"Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set asana service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/assembla":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set assembla service for project",
            "description":"Set assembla service for project",
            "operationId":"putV3ProjectsIdServicesAssembla",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The authentication token"
                           },
                           "subdomain":{
                              "type":"string",
                              "description":"Subdomain setting"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The authentication token"
                           },
                           "subdomain":{
                              "type":"string",
                              "description":"Subdomain setting"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set assembla service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/bamboo":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set bamboo service for project",
            "description":"Set bamboo service for project",
            "operationId":"putV3ProjectsIdServicesBamboo",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "bamboo_url",
                           "build_key",
                           "password",
                           "username"
                        ],
                        "properties":{
                           "bamboo_url":{
                              "type":"string",
                              "description":"Bamboo root URL like https://bamboo.example.com"
                           },
                           "build_key":{
                              "type":"string",
                              "description":"Bamboo build plan key like"
                           },
                           "username":{
                              "type":"string",
                              "description":"A user with API access, if applicable"
                           },
                           "password":{
                              "type":"string",
                              "description":"Passord of the user"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "bamboo_url",
                           "build_key",
                           "password",
                           "username"
                        ],
                        "properties":{
                           "bamboo_url":{
                              "type":"string",
                              "description":"Bamboo root URL like https://bamboo.example.com"
                           },
                           "build_key":{
                              "type":"string",
                              "description":"Bamboo build plan key like"
                           },
                           "username":{
                              "type":"string",
                              "description":"A user with API access, if applicable"
                           },
                           "password":{
                              "type":"string",
                              "description":"Passord of the user"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set bamboo service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/bugzilla":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set bugzilla service for project",
            "description":"Set bugzilla service for project",
            "operationId":"putV3ProjectsIdServicesBugzilla",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"New issue URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"Issues URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"Project URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"Description"
                           },
                           "title":{
                              "type":"string",
                              "description":"Title"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"New issue URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"Issues URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"Project URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"Description"
                           },
                           "title":{
                              "type":"string",
                              "description":"Title"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set bugzilla service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/buildkite":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set buildkite service for project",
            "description":"Set buildkite service for project",
            "operationId":"putV3ProjectsIdServicesBuildkite",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "project_url",
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Buildkite project GitLab token"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"The buildkite project URL"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Enable SSL verification for communication"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "project_url",
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Buildkite project GitLab token"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"The buildkite project URL"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Enable SSL verification for communication"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set buildkite service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/builds-email":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set builds-email service for project",
            "description":"Set builds-email service for project",
            "operationId":"putV3ProjectsIdServicesBuildsEmail",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "add_pusher":{
                              "type":"boolean",
                              "description":"Add pusher to recipients list"
                           },
                           "notify_only_broken_builds":{
                              "type":"boolean",
                              "description":"Notify only broken builds"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "add_pusher":{
                              "type":"boolean",
                              "description":"Add pusher to recipients list"
                           },
                           "notify_only_broken_builds":{
                              "type":"boolean",
                              "description":"Notify only broken builds"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set builds-email service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/campfire":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set campfire service for project",
            "description":"Set campfire service for project",
            "operationId":"putV3ProjectsIdServicesCampfire",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Campfire token"
                           },
                           "subdomain":{
                              "type":"string",
                              "description":"Campfire subdomain"
                           },
                           "room":{
                              "type":"string",
                              "description":"Campfire room"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Campfire token"
                           },
                           "subdomain":{
                              "type":"string",
                              "description":"Campfire subdomain"
                           },
                           "room":{
                              "type":"string",
                              "description":"Campfire room"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set campfire service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/custom-issue-tracker":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set custom-issue-tracker service for project",
            "description":"Set custom-issue-tracker service for project",
            "operationId":"putV3ProjectsIdServicesCustomIssueTracker",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"New issue URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"Issues URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"Project URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"Description"
                           },
                           "title":{
                              "type":"string",
                              "description":"Title"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"New issue URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"Issues URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"Project URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"Description"
                           },
                           "title":{
                              "type":"string",
                              "description":"Title"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set custom-issue-tracker service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/drone-ci":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set drone-ci service for project",
            "description":"Set drone-ci service for project",
            "operationId":"putV3ProjectsIdServicesDroneCi",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "drone_url",
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Drone CI token"
                           },
                           "drone_url":{
                              "type":"string",
                              "description":"Drone CI URL"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Enable SSL verification for communication"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "drone_url",
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Drone CI token"
                           },
                           "drone_url":{
                              "type":"string",
                              "description":"Drone CI URL"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Enable SSL verification for communication"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set drone-ci service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/emails-on-push":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set emails-on-push service for project",
            "description":"Set emails-on-push service for project",
            "operationId":"putV3ProjectsIdServicesEmailsOnPush",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "disable_diffs":{
                              "type":"boolean",
                              "description":"Disable code diffs"
                           },
                           "send_from_committer_email":{
                              "type":"boolean",
                              "description":"Send from committer"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "disable_diffs":{
                              "type":"boolean",
                              "description":"Disable code diffs"
                           },
                           "send_from_committer_email":{
                              "type":"boolean",
                              "description":"Send from committer"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set emails-on-push service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/external-wiki":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set external-wiki service for project",
            "description":"Set external-wiki service for project",
            "operationId":"putV3ProjectsIdServicesExternalWiki",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "external_wiki_url"
                        ],
                        "properties":{
                           "external_wiki_url":{
                              "type":"string",
                              "description":"The URL of the external Wiki"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "external_wiki_url"
                        ],
                        "properties":{
                           "external_wiki_url":{
                              "type":"string",
                              "description":"The URL of the external Wiki"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set external-wiki service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/flowdock":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set flowdock service for project",
            "description":"Set flowdock service for project",
            "operationId":"putV3ProjectsIdServicesFlowdock",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Flowdock token"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"Flowdock token"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set flowdock service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/gemnasium":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set gemnasium service for project",
            "description":"Set gemnasium service for project",
            "operationId":"putV3ProjectsIdServicesGemnasium",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key",
                           "token"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"Your personal API key on gemnasium.com"
                           },
                           "token":{
                              "type":"string",
                              "description":"The project's slug on gemnasium.com"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key",
                           "token"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"Your personal API key on gemnasium.com"
                           },
                           "token":{
                              "type":"string",
                              "description":"The project's slug on gemnasium.com"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set gemnasium service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/hipchat":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set hipchat service for project",
            "description":"Set hipchat service for project",
            "operationId":"putV3ProjectsIdServicesHipchat",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The room token"
                           },
                           "room":{
                              "type":"string",
                              "description":"The room name or ID"
                           },
                           "color":{
                              "type":"string",
                              "description":"The room color"
                           },
                           "notify":{
                              "type":"boolean",
                              "description":"Enable notifications"
                           },
                           "api_version":{
                              "type":"string",
                              "description":"Leave blank for default (v2)"
                           },
                           "server":{
                              "type":"string",
                              "description":"Leave blank for default. https://hipchat.example.com"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The room token"
                           },
                           "room":{
                              "type":"string",
                              "description":"The room name or ID"
                           },
                           "color":{
                              "type":"string",
                              "description":"The room color"
                           },
                           "notify":{
                              "type":"boolean",
                              "description":"Enable notifications"
                           },
                           "api_version":{
                              "type":"string",
                              "description":"Leave blank for default (v2)"
                           },
                           "server":{
                              "type":"string",
                              "description":"Leave blank for default. https://hipchat.example.com"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set hipchat service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/irker":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set irker service for project",
            "description":"Set irker service for project",
            "operationId":"putV3ProjectsIdServicesIrker",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Recipients/channels separated by whitespaces"
                           },
                           "default_irc_uri":{
                              "type":"string",
                              "description":"Default: irc://irc.network.net:6697"
                           },
                           "server_host":{
                              "type":"string",
                              "description":"Server host. Default localhost"
                           },
                           "server_port":{
                              "type":"integer",
                              "description":"Server port. Default 6659",
                              "format":"int32"
                           },
                           "colorize_messages":{
                              "type":"boolean",
                              "description":"Colorize messages"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Recipients/channels separated by whitespaces"
                           },
                           "default_irc_uri":{
                              "type":"string",
                              "description":"Default: irc://irc.network.net:6697"
                           },
                           "server_host":{
                              "type":"string",
                              "description":"Server host. Default localhost"
                           },
                           "server_port":{
                              "type":"integer",
                              "description":"Server port. Default 6659",
                              "format":"int32"
                           },
                           "colorize_messages":{
                              "type":"boolean",
                              "description":"Colorize messages"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set irker service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/jira":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set jira service for project",
            "description":"Set jira service for project",
            "operationId":"putV3ProjectsIdServicesJira",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "project_key",
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com"
                           },
                           "project_key":{
                              "type":"string",
                              "description":"The short identifier for your JIRA project, all uppercase, e.g., PROJ"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user created to be used with GitLab/JIRA"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user created to be used with GitLab/JIRA"
                           },
                           "jira_issue_transition_id":{
                              "type":"integer",
                              "description":"The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`",
                              "format":"int32"
                           },
                           "commit_events":{
                              "type":"string",
                              "description":"Event will be triggered when a commit is created/updated"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "project_key",
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com"
                           },
                           "project_key":{
                              "type":"string",
                              "description":"The short identifier for your JIRA project, all uppercase, e.g., PROJ"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user created to be used with GitLab/JIRA"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user created to be used with GitLab/JIRA"
                           },
                           "jira_issue_transition_id":{
                              "type":"integer",
                              "description":"The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`",
                              "format":"int32"
                           },
                           "commit_events":{
                              "type":"string",
                              "description":"Event will be triggered when a commit is created/updated"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set jira service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/kubernetes":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set kubernetes service for project",
            "description":"Set kubernetes service for project",
            "operationId":"putV3ProjectsIdServicesKubernetes",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_url",
                           "namespace",
                           "token"
                        ],
                        "properties":{
                           "namespace":{
                              "type":"string",
                              "description":"The Kubernetes namespace to use"
                           },
                           "api_url":{
                              "type":"string",
                              "description":"The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com"
                           },
                           "token":{
                              "type":"string",
                              "description":"The service token to authenticate against the Kubernetes cluster with"
                           },
                           "ca_pem":{
                              "type":"string",
                              "description":"A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_url",
                           "namespace",
                           "token"
                        ],
                        "properties":{
                           "namespace":{
                              "type":"string",
                              "description":"The Kubernetes namespace to use"
                           },
                           "api_url":{
                              "type":"string",
                              "description":"The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com"
                           },
                           "token":{
                              "type":"string",
                              "description":"The service token to authenticate against the Kubernetes cluster with"
                           },
                           "ca_pem":{
                              "type":"string",
                              "description":"A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set kubernetes service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/mattermost-slash-commands":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set mattermost-slash-commands service for project",
            "description":"Set mattermost-slash-commands service for project",
            "operationId":"putV3ProjectsIdServicesMattermostSlashCommands",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Mattermost token"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Mattermost token"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set mattermost-slash-commands service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/slack-slash-commands":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set slack-slash-commands service for project",
            "description":"Set slack-slash-commands service for project",
            "operationId":"putV3ProjectsIdServicesSlackSlashCommands",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Slack token"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Slack token"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set slack-slash-commands service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/pipelines-email":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set pipelines-email service for project",
            "description":"Set pipelines-email service for project",
            "operationId":"putV3ProjectsIdServicesPipelinesEmail",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "notify_only_broken_builds":{
                              "type":"boolean",
                              "description":"Notify only broken builds"
                           },
                           "pipeline_events":{
                              "type":"string"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "recipients"
                        ],
                        "properties":{
                           "recipients":{
                              "type":"string",
                              "description":"Comma-separated list of recipient email addresses"
                           },
                           "notify_only_broken_builds":{
                              "type":"boolean",
                              "description":"Notify only broken builds"
                           },
                           "pipeline_events":{
                              "type":"string"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set pipelines-email service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/pivotaltracker":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set pivotaltracker service for project",
            "description":"Set pivotaltracker service for project",
            "operationId":"putV3ProjectsIdServicesPivotaltracker",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Pivotaltracker token"
                           },
                           "restrict_to_branch":{
                              "type":"string",
                              "description":"Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches."
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Pivotaltracker token"
                           },
                           "restrict_to_branch":{
                              "type":"string",
                              "description":"Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches."
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set pivotaltracker service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/pushover":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set pushover service for project",
            "description":"Set pushover service for project",
            "operationId":"putV3ProjectsIdServicesPushover",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key",
                           "device",
                           "priority",
                           "sound",
                           "user_key"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"The application key"
                           },
                           "user_key":{
                              "type":"string",
                              "description":"The user key"
                           },
                           "priority":{
                              "type":"string",
                              "description":"The priority"
                           },
                           "device":{
                              "type":"string",
                              "description":"Leave blank for all active devices"
                           },
                           "sound":{
                              "type":"string",
                              "description":"The sound of the notification"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "api_key",
                           "device",
                           "priority",
                           "sound",
                           "user_key"
                        ],
                        "properties":{
                           "api_key":{
                              "type":"string",
                              "description":"The application key"
                           },
                           "user_key":{
                              "type":"string",
                              "description":"The user key"
                           },
                           "priority":{
                              "type":"string",
                              "description":"The priority"
                           },
                           "device":{
                              "type":"string",
                              "description":"Leave blank for all active devices"
                           },
                           "sound":{
                              "type":"string",
                              "description":"The sound of the notification"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set pushover service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/redmine":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set redmine service for project",
            "description":"Set redmine service for project",
            "operationId":"putV3ProjectsIdServicesRedmine",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"The new issue URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"The project URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"The issues URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the tracker"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "issues_url",
                           "new_issue_url",
                           "project_url"
                        ],
                        "properties":{
                           "new_issue_url":{
                              "type":"string",
                              "description":"The new issue URL"
                           },
                           "project_url":{
                              "type":"string",
                              "description":"The project URL"
                           },
                           "issues_url":{
                              "type":"string",
                              "description":"The issues URL"
                           },
                           "description":{
                              "type":"string",
                              "description":"The description of the tracker"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set redmine service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/slack":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set slack service for project",
            "description":"Set slack service for project",
            "operationId":"putV3ProjectsIdServicesSlack",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "webhook"
                        ],
                        "properties":{
                           "webhook":{
                              "type":"string",
                              "description":"The Slack webhook. e.g. https://hooks.slack.com/services/..."
                           },
                           "new_issue_url":{
                              "type":"string",
                              "description":"The user name"
                           },
                           "channel":{
                              "type":"string",
                              "description":"The channel name"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           },
                           "pipeline_events":{
                              "type":"string"
                           },
                           "wiki_page_events":{
                              "type":"string",
                              "description":"Event will be triggered when a wiki page is created/updated"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "webhook"
                        ],
                        "properties":{
                           "webhook":{
                              "type":"string",
                              "description":"The Slack webhook. e.g. https://hooks.slack.com/services/..."
                           },
                           "new_issue_url":{
                              "type":"string",
                              "description":"The user name"
                           },
                           "channel":{
                              "type":"string",
                              "description":"The channel name"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           },
                           "pipeline_events":{
                              "type":"string"
                           },
                           "wiki_page_events":{
                              "type":"string",
                              "description":"Event will be triggered when a wiki page is created/updated"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set slack service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/mattermost":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set mattermost service for project",
            "description":"Set mattermost service for project",
            "operationId":"putV3ProjectsIdServicesMattermost",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "webhook"
                        ],
                        "properties":{
                           "webhook":{
                              "type":"string",
                              "description":"The Mattermost webhook. e.g. http://mattermost_host/hooks/..."
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           },
                           "pipeline_events":{
                              "type":"string"
                           },
                           "wiki_page_events":{
                              "type":"string",
                              "description":"Event will be triggered when a wiki page is created/updated"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "webhook"
                        ],
                        "properties":{
                           "webhook":{
                              "type":"string",
                              "description":"The Mattermost webhook. e.g. http://mattermost_host/hooks/..."
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           },
                           "issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when an issue is created/updated/closed"
                           },
                           "confidential_issue_events":{
                              "type":"string",
                              "description":"Event will be triggered when a confidential issue is created/updated/closed"
                           },
                           "merge_request_events":{
                              "type":"string",
                              "description":"Event will be triggered when a merge request is created/updated/merged"
                           },
                           "note_events":{
                              "type":"string",
                              "description":"Event will be triggered when someone adds a comment"
                           },
                           "tag_push_events":{
                              "type":"string",
                              "description":"Event will be triggered when a new tag is pushed to the repository"
                           },
                           "build_events":{
                              "type":"string",
                              "description":"Event will be triggered when a build status changes"
                           },
                           "pipeline_events":{
                              "type":"string"
                           },
                           "wiki_page_events":{
                              "type":"string",
                              "description":"Event will be triggered when a wiki page is created/updated"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set mattermost service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/teamcity":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Set teamcity service for project",
            "description":"Set teamcity service for project",
            "operationId":"putV3ProjectsIdServicesTeamcity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "build_type",
                           "password",
                           "teamcity_url",
                           "username"
                        ],
                        "properties":{
                           "teamcity_url":{
                              "type":"string",
                              "description":"TeamCity root URL like https://teamcity.example.com"
                           },
                           "build_type":{
                              "type":"string",
                              "description":"Build configuration ID"
                           },
                           "username":{
                              "type":"string",
                              "description":"A user with permissions to trigger a manual build"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "build_type",
                           "password",
                           "teamcity_url",
                           "username"
                        ],
                        "properties":{
                           "teamcity_url":{
                              "type":"string",
                              "description":"TeamCity root URL like https://teamcity.example.com"
                           },
                           "build_type":{
                              "type":"string",
                              "description":"Build configuration ID"
                           },
                           "username":{
                              "type":"string",
                              "description":"A user with permissions to trigger a manual build"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user"
                           },
                           "push_events":{
                              "type":"string",
                              "description":"Event will be triggered by a push to the repository"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Set teamcity service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/{service_slug}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the service settings for project",
            "description":"Get the service settings for project",
            "operationId":"getV3ProjectsIdServicesServiceSlug",
            "parameters":[
               {
                  "name":"service_slug",
                  "in":"path",
                  "description":"The name of the service",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "asana",
                        "assembla",
                        "bamboo",
                        "bugzilla",
                        "buildkite",
                        "builds-email",
                        "campfire",
                        "custom-issue-tracker",
                        "drone-ci",
                        "emails-on-push",
                        "external-wiki",
                        "flowdock",
                        "gemnasium",
                        "hipchat",
                        "irker",
                        "jira",
                        "kubernetes",
                        "mattermost-slash-commands",
                        "slack-slash-commands",
                        "pipelines-email",
                        "pivotaltracker",
                        "pushover",
                        "redmine",
                        "slack",
                        "mattermost",
                        "teamcity"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the service settings for project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectService"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a service for project",
            "description":"Delete a service for project",
            "operationId":"deleteV3ProjectsIdServicesServiceSlug",
            "parameters":[
               {
                  "name":"service_slug",
                  "in":"path",
                  "description":"The name of the service",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "asana",
                        "assembla",
                        "bamboo",
                        "bugzilla",
                        "buildkite",
                        "builds-email",
                        "campfire",
                        "custom-issue-tracker",
                        "drone-ci",
                        "emails-on-push",
                        "external-wiki",
                        "flowdock",
                        "gemnasium",
                        "hipchat",
                        "irker",
                        "jira",
                        "kubernetes",
                        "mattermost-slash-commands",
                        "slack-slash-commands",
                        "pipelines-email",
                        "pivotaltracker",
                        "pushover",
                        "redmine",
                        "slack",
                        "mattermost",
                        "teamcity"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a service for project",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/mattermost_slash_commands/trigger":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Trigger a slash command for mattermost-slash-commands",
            "description":"Added in GitLab 8.13",
            "operationId":"postV3ProjectsIdServicesMattermostSlashCommandsTrigger",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Mattermost token"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Mattermost token"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Trigger a slash command for mattermost-slash-commands",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/services/slack_slash_commands/trigger":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Trigger a slash command for slack-slash-commands",
            "description":"Added in GitLab 8.13",
            "operationId":"postV3ProjectsIdServicesSlackSlashCommandsTrigger",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Slack token"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The Slack token"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Trigger a slash command for slack-slash-commands",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_request/{subscribable_id}/subscription":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Subscribe to a resource",
            "description":"Subscribe to a resource",
            "operationId":"postV3ProjectsIdMergeRequestSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Subscribe to a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Unsubscribe from a resource",
            "description":"Unsubscribe from a resource",
            "operationId":"deleteV3ProjectsIdMergeRequestSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unsubscribe from a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{subscribable_id}/subscription":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Subscribe to a resource",
            "description":"Subscribe to a resource",
            "operationId":"postV3ProjectsIdMergeRequestsSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Subscribe to a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Unsubscribe from a resource",
            "description":"Unsubscribe from a resource",
            "operationId":"deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unsubscribe from a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MergeRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{subscribable_id}/subscription":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Subscribe to a resource",
            "description":"Subscribe to a resource",
            "operationId":"postV3ProjectsIdIssuesSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Subscribe to a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Unsubscribe from a resource",
            "description":"Unsubscribe from a resource",
            "operationId":"deleteV3ProjectsIdIssuesSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unsubscribe from a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/labels/{subscribable_id}/subscription":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Subscribe to a resource",
            "description":"Subscribe to a resource",
            "operationId":"postV3ProjectsIdLabelsSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Subscribe to a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Unsubscribe from a resource",
            "description":"Unsubscribe from a resource",
            "operationId":"deleteV3ProjectsIdLabelsSubscribableIdSubscription",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"subscribable_id",
                  "in":"path",
                  "description":"The ID of a resource",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unsubscribe from a resource",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Label"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/tags":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a project repository tags",
            "description":"Get a project repository tags",
            "operationId":"getV3ProjectsIdRepositoryTags",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a project repository tags",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoTag"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new repository tag",
            "description":"Create a new repository tag",
            "operationId":"postV3ProjectsIdRepositoryTags",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "ref",
                           "tag_name"
                        ],
                        "properties":{
                           "tag_name":{
                              "type":"string",
                              "description":"The name of the tag"
                           },
                           "ref":{
                              "type":"string",
                              "description":"The commit sha or branch name"
                           },
                           "message":{
                              "type":"string",
                              "description":"Specifying a message creates an annotated tag"
                           },
                           "release_description":{
                              "type":"string",
                              "description":"Specifying release notes stored in the GitLab database"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "ref",
                           "tag_name"
                        ],
                        "properties":{
                           "tag_name":{
                              "type":"string",
                              "description":"The name of the tag"
                           },
                           "ref":{
                              "type":"string",
                              "description":"The commit sha or branch name"
                           },
                           "message":{
                              "type":"string",
                              "description":"Specifying a message creates an annotated tag"
                           },
                           "release_description":{
                              "type":"string",
                              "description":"Specifying release notes stored in the GitLab database"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new repository tag",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoTag"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/tags/{tag_name}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a single repository tag",
            "description":"Get a single repository tag",
            "operationId":"getV3ProjectsIdRepositoryTagsTagName",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"tag_name",
                  "in":"path",
                  "description":"The name of the tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single repository tag",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoTag"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a repository tag",
            "description":"Delete a repository tag",
            "operationId":"deleteV3ProjectsIdRepositoryTagsTagName",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"tag_name",
                  "in":"path",
                  "description":"The name of the tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete a repository tag",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/repository/tags/{tag_name}/release":{
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update a tag's release note",
            "description":"Update a tag's release note",
            "operationId":"putV3ProjectsIdRepositoryTagsTagNameRelease",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"tag_name",
                  "in":"path",
                  "description":"The name of the tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "description"
                        ],
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"Release notes with markdown support"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "description"
                        ],
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"Release notes with markdown support"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Update a tag's release note",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Release"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Add a release note to a tag",
            "description":"Add a release note to a tag",
            "operationId":"postV3ProjectsIdRepositoryTagsTagNameRelease",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"tag_name",
                  "in":"path",
                  "description":"The name of the tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "description"
                        ],
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"Release notes with markdown support"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "description"
                        ],
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"Release notes with markdown support"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add a release note to a tag",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Release"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/merge_requests/{merge_request_id}/todo":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a todo on an issuable",
            "description":"Create a todo on an issuable",
            "operationId":"postV3ProjectsIdMergeRequestsMergeRequestIdTodo",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"merge_request_id",
                  "in":"path",
                  "description":"The ID of an issuable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Create a todo on an issuable",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Todo"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/issues/{issue_id}/todo":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a todo on an issuable",
            "description":"Create a todo on an issuable",
            "operationId":"postV3ProjectsIdIssuesIssueIdTodo",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"issue_id",
                  "in":"path",
                  "description":"The ID of an issuable",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Create a todo on an issuable",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Todo"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/(ref/{ref}/)trigger/builds":{
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Trigger a GitLab project build",
            "description":"Trigger a GitLab project build",
            "operationId":"postV3ProjectsId(refRef)triggerBuilds",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ref",
                  "in":"path",
                  "description":"The commit sha or name of a branch or tag",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The unique token of trigger"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "token"
                        ],
                        "properties":{
                           "token":{
                              "type":"string",
                              "description":"The unique token of trigger"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Trigger a GitLab project build",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TriggerRequest"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/triggers":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get triggers list",
            "description":"Get triggers list",
            "operationId":"getV3ProjectsIdTriggers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get triggers list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Trigger"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a trigger",
            "description":"Create a trigger",
            "operationId":"postV3ProjectsIdTriggers",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Create a trigger",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Trigger"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/triggers/{token}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get specific trigger of a project",
            "description":"Get specific trigger of a project",
            "operationId":"getV3ProjectsIdTriggersToken",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"token",
                  "in":"path",
                  "description":"The unique token of trigger",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get specific trigger of a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Trigger"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a trigger",
            "description":"Delete a trigger",
            "operationId":"deleteV3ProjectsIdTriggersToken",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"token",
                  "in":"path",
                  "description":"The unique token of trigger",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a trigger",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Trigger"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/variables":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get project variables",
            "description":"Get project variables",
            "operationId":"getV3ProjectsIdVariables",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get project variables",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Variable"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new variable in a project",
            "description":"Create a new variable in a project",
            "operationId":"postV3ProjectsIdVariables",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "value"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The key of the variable"
                           },
                           "value":{
                              "type":"string",
                              "description":"The value of the variable"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "value"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The key of the variable"
                           },
                           "value":{
                              "type":"string",
                              "description":"The value of the variable"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new variable in a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Variable"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/variables/{key}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a specific variable from a project",
            "description":"Get a specific variable from a project",
            "operationId":"getV3ProjectsIdVariablesKey",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key",
                  "in":"path",
                  "description":"The key of the variable",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a specific variable from a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Variable"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Update an existing variable from a project",
            "description":"Update an existing variable from a project",
            "operationId":"putV3ProjectsIdVariablesKey",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key",
                  "in":"path",
                  "description":"The key of the variable",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "value":{
                              "type":"string",
                              "description":"The value of the variable"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "value":{
                              "type":"string",
                              "description":"The value of the variable"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing variable from a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Variable"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete an existing variable from a project",
            "description":"Delete an existing variable from a project",
            "operationId":"deleteV3ProjectsIdVariablesKey",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"key",
                  "in":"path",
                  "description":"The key of the variable",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete an existing variable from a project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Variable"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/boards/{board_id}/lists":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get the lists of a project board",
            "description":"Does not include `backlog` and `done` lists. This feature was introduced in 8.13",
            "operationId":"getV3ProjectsIdBoardsBoardIdLists",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"board_id",
                  "in":"path",
                  "description":"The ID of a board",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the lists of a project board",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/List"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "projects"
            ],
            "summary":"Create a new board list",
            "description":"This feature was introduced in 8.13",
            "operationId":"postV3ProjectsIdBoardsBoardIdLists",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"board_id",
                  "in":"path",
                  "description":"The ID of a board",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "label_id"
                        ],
                        "properties":{
                           "label_id":{
                              "type":"integer",
                              "description":"The ID of an existing label",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "label_id"
                        ],
                        "properties":{
                           "label_id":{
                              "type":"integer",
                              "description":"The ID of an existing label",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new board list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/List"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/projects/{id}/boards/{board_id}/lists/{list_id}":{
         "get":{
            "tags":[
               "projects"
            ],
            "summary":"Get a list of a project board",
            "description":"This feature was introduced in 8.13",
            "operationId":"getV3ProjectsIdBoardsBoardIdListsListId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"board_id",
                  "in":"path",
                  "description":"The ID of a board",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"list_id",
                  "in":"path",
                  "description":"The ID of a list",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a list of a project board",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/List"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "projects"
            ],
            "summary":"Moves a board list to a new position",
            "description":"This feature was introduced in 8.13",
            "operationId":"putV3ProjectsIdBoardsBoardIdListsListId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"board_id",
                  "in":"path",
                  "description":"The ID of a board",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"list_id",
                  "in":"path",
                  "description":"The ID of a list",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "position"
                        ],
                        "properties":{
                           "position":{
                              "type":"integer",
                              "description":"The position of the list",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "position"
                        ],
                        "properties":{
                           "position":{
                              "type":"integer",
                              "description":"The position of the list",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Moves a board list to a new position",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/List"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "projects"
            ],
            "summary":"Delete a board list",
            "description":"This feature was introduced in 8.13",
            "operationId":"deleteV3ProjectsIdBoardsBoardIdListsListId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"board_id",
                  "in":"path",
                  "description":"The ID of a board",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"list_id",
                  "in":"path",
                  "description":"The ID of a board list",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a board list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/List"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/internal/allowed":{
         "post":{
            "tags":[
               "internal"
            ],
            "operationId":"postV3InternalAllowed",
            "responses":{
               "201":{
                  "description":"created Allowed",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/lfs_authenticate":{
         "post":{
            "tags":[
               "internal"
            ],
            "operationId":"postV3InternalLfsAuthenticate",
            "responses":{
               "201":{
                  "description":"created LfsAuthenticate",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/merge_request_urls":{
         "get":{
            "tags":[
               "internal"
            ],
            "operationId":"getV3InternalMergeRequestUrls",
            "responses":{
               "200":{
                  "description":"get MergeRequestUrl(s)",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/discover":{
         "get":{
            "tags":[
               "internal"
            ],
            "operationId":"getV3InternalDiscover",
            "responses":{
               "200":{
                  "description":"get Discover(s)",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/check":{
         "get":{
            "tags":[
               "internal"
            ],
            "operationId":"getV3InternalCheck",
            "responses":{
               "200":{
                  "description":"get Check(s)",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/broadcast_message":{
         "get":{
            "tags":[
               "internal"
            ],
            "operationId":"getV3InternalBroadcastMessage",
            "responses":{
               "200":{
                  "description":"get BroadcastMessage(s)",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/internal/two_factor_recovery_codes":{
         "post":{
            "tags":[
               "internal"
            ],
            "operationId":"postV3InternalTwoFactorRecoveryCodes",
            "responses":{
               "201":{
                  "description":"created TwoFactorRecoveryCode",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/issues":{
         "get":{
            "tags":[
               "issues"
            ],
            "summary":"Get currently authenticated user's issues",
            "description":"Get currently authenticated user's issues",
            "operationId":"getV3Issues",
            "parameters":[
               {
                  "name":"state",
                  "in":"query",
                  "description":"Return opened, closed, or all issues",
                  "schema":{
                     "type":"string",
                     "default":"all",
                     "enum":[
                        "opened",
                        "closed",
                        "all"
                     ]
                  }
               },
               {
                  "name":"labels",
                  "in":"query",
                  "description":"Comma-separated list of label names",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"milestone",
                  "in":"query",
                  "description":"Return issues for a specific milestone",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"order_by",
                  "in":"query",
                  "description":"Return issues ordered by `created_at` or `updated_at` fields.",
                  "schema":{
                     "type":"string",
                     "default":"created_at",
                     "enum":[
                        "created_at",
                        "updated_at"
                     ]
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"Return issues sorted in `asc` or `desc` order.",
                  "schema":{
                     "type":"string",
                     "default":"desc",
                     "enum":[
                        "asc",
                        "desc"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get currently authenticated user's issues",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Issue"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/keys/{id}":{
         "get":{
            "tags":[
               "keys"
            ],
            "summary":"Get single ssh key by id. Only available to admin users",
            "description":"Get single ssh key by id. Only available to admin users",
            "operationId":"getV3KeysId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get single ssh key by id. Only available to admin users",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKeyWithUser"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/ci/lint":{
         "post":{
            "tags":[
               "ci"
            ],
            "summary":"Validation of .gitlab-ci.yml content",
            "description":"Validation of .gitlab-ci.yml content",
            "operationId":"postV3CiLint",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "content"
                        ],
                        "properties":{
                           "content":{
                              "type":"string",
                              "description":"Content of .gitlab-ci.yml"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "content"
                        ],
                        "properties":{
                           "content":{
                              "type":"string",
                              "description":"Content of .gitlab-ci.yml"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Validation of .gitlab-ci.yml content",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/namespaces":{
         "get":{
            "tags":[
               "namespaces"
            ],
            "summary":"Get a namespaces list",
            "description":"Get a namespaces list",
            "operationId":"getV3Namespaces",
            "parameters":[
               {
                  "name":"search",
                  "in":"query",
                  "description":"Search query for namespaces",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a namespaces list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Namespace"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/notification_settings":{
         "get":{
            "tags":[
               "notification_settings"
            ],
            "summary":"Get global notification level settings and email, defaults to Participate",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"getV3NotificationSettings",
            "responses":{
               "200":{
                  "description":"Get global notification level settings and email, defaults to Participate",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GlobalNotificationSetting"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "notification_settings"
            ],
            "summary":"Update global notification level settings and email, defaults to Participate",
            "description":"This feature was introduced in GitLab 8.12",
            "operationId":"putV3NotificationSettings",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The global notification level"
                           },
                           "notification_email":{
                              "type":"string",
                              "description":"The email address to send notifications"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "level":{
                              "type":"string",
                              "description":"The global notification level"
                           },
                           "notification_email":{
                              "type":"string",
                              "description":"The email address to send notifications"
                           },
                           "new_note":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_issue":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "new_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reopen_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "close_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "reassign_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "merge_merge_request":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "failed_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           },
                           "success_pipeline":{
                              "type":"boolean",
                              "description":"Enable/disable this notification"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update global notification level settings and email, defaults to Participate",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GlobalNotificationSetting"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/runners":{
         "get":{
            "tags":[
               "runners"
            ],
            "summary":"Get runners available for user",
            "description":"Get runners available for user",
            "operationId":"getV3Runners",
            "parameters":[
               {
                  "name":"scope",
                  "in":"query",
                  "description":"The scope of specific runners to show",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "active",
                        "paused",
                        "online"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get runners available for user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/runners/all":{
         "get":{
            "tags":[
               "runners"
            ],
            "summary":"Get all runners - shared and specific",
            "description":"Get all runners - shared and specific",
            "operationId":"getV3RunnersAll",
            "parameters":[
               {
                  "name":"scope",
                  "in":"query",
                  "description":"The scope of specific runners to show",
                  "schema":{
                     "type":"string",
                     "enum":[
                        "active",
                        "paused",
                        "online",
                        "specific",
                        "shared"
                     ]
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get all runners - shared and specific",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/runners/{id}":{
         "get":{
            "tags":[
               "runners"
            ],
            "summary":"Get runner's details",
            "description":"Get runner's details",
            "operationId":"getV3RunnersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the runner",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get runner's details",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RunnerDetails"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "runners"
            ],
            "summary":"Update runner's details",
            "description":"Update runner's details",
            "operationId":"putV3RunnersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the runner",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"The description of the runner"
                           },
                           "active":{
                              "type":"boolean",
                              "description":"The state of a runner"
                           },
                           "tag_list":{
                              "type":"array",
                              "description":"The list of tags for a runner",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "run_untagged":{
                              "type":"boolean",
                              "description":"Flag indicating the runner can execute untagged jobs"
                           },
                           "locked":{
                              "type":"boolean",
                              "description":"Flag indicating the runner is locked"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "description":{
                              "type":"string",
                              "description":"The description of the runner"
                           },
                           "active":{
                              "type":"boolean",
                              "description":"The state of a runner"
                           },
                           "tag_list":{
                              "type":"array",
                              "description":"The list of tags for a runner",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "run_untagged":{
                              "type":"boolean",
                              "description":"Flag indicating the runner can execute untagged jobs"
                           },
                           "locked":{
                              "type":"boolean",
                              "description":"Flag indicating the runner is locked"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update runner's details",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RunnerDetails"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "runners"
            ],
            "summary":"Remove a runner",
            "description":"Remove a runner",
            "operationId":"deleteV3RunnersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the runner",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Remove a runner",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Runner"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/snippets":{
         "get":{
            "tags":[
               "snippets"
            ],
            "summary":"Get a snippets list for authenticated user",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3Snippets",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a snippets list for authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "snippets"
            ],
            "summary":"Create new snippet",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"postV3Snippets",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "content",
                           "file_name",
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of a snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The name of a snippet file"
                           },
                           "content":{
                              "type":"string",
                              "description":"The content of a snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "default":10,
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "content",
                           "file_name",
                           "title"
                        ],
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of a snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The name of a snippet file"
                           },
                           "content":{
                              "type":"string",
                              "description":"The content of a snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "default":10,
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create new snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/snippets/public":{
         "get":{
            "tags":[
               "snippets"
            ],
            "summary":"List all public snippets current_user has access to",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3SnippetsPublic",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"List all public snippets current_user has access to",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/snippets/{id}":{
         "get":{
            "tags":[
               "snippets"
            ],
            "summary":"Get a single snippet",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3SnippetsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "snippets"
            ],
            "summary":"Update an existing snippet",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"putV3SnippetsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of a snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The name of a snippet file"
                           },
                           "content":{
                              "type":"string",
                              "description":"The content of a snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "title":{
                              "type":"string",
                              "description":"The title of a snippet"
                           },
                           "file_name":{
                              "type":"string",
                              "description":"The name of a snippet file"
                           },
                           "content":{
                              "type":"string",
                              "description":"The content of a snippet"
                           },
                           "visibility_level":{
                              "type":"integer",
                              "description":"The visibility level of the snippet",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update an existing snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "snippets"
            ],
            "summary":"Remove snippet",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"deleteV3SnippetsId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Remove snippet",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PersonalSnippet"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/snippets/{id}/raw":{
         "get":{
            "tags":[
               "snippets"
            ],
            "summary":"Get a raw snippet",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3SnippetsIdRaw",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of a snippet",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a raw snippet",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/hooks":{
         "get":{
            "tags":[
               "hooks"
            ],
            "summary":"Get the list of system hooks",
            "description":"Get the list of system hooks",
            "operationId":"getV3Hooks",
            "responses":{
               "200":{
                  "description":"Get the list of system hooks",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Hook"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "hooks"
            ],
            "summary":"Create a new system hook",
            "description":"Create a new system hook",
            "operationId":"postV3Hooks",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "token":{
                              "type":"string",
                              "description":"The token used to validate payloads"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "url"
                        ],
                        "properties":{
                           "url":{
                              "type":"string",
                              "description":"The URL to send the request to"
                           },
                           "token":{
                              "type":"string",
                              "description":"The token used to validate payloads"
                           },
                           "push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on push events"
                           },
                           "tag_push_events":{
                              "type":"boolean",
                              "description":"Trigger hook on tag push events"
                           },
                           "enable_ssl_verification":{
                              "type":"boolean",
                              "description":"Do SSL verification when triggering the hook"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a new system hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Hook"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/hooks/{id}":{
         "get":{
            "tags":[
               "hooks"
            ],
            "summary":"Test a hook",
            "description":"Test a hook",
            "operationId":"getV3HooksId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the system hook",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Test a hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Hook"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "hooks"
            ],
            "summary":"Delete a hook",
            "description":"Delete a hook",
            "operationId":"deleteV3HooksId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the system hook",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a hook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Hook"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/todos":{
         "get":{
            "tags":[
               "todos"
            ],
            "summary":"Get a todo list",
            "description":"Get a todo list",
            "operationId":"getV3Todos",
            "parameters":[
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a todo list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Todo"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "todos"
            ],
            "summary":"Mark all todos as done",
            "description":"Mark all todos as done",
            "operationId":"deleteV3Todos",
            "responses":{
               "204":{
                  "description":"Mark all todos as done",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/todos/{id}":{
         "delete":{
            "tags":[
               "todos"
            ],
            "summary":"Mark a todo as done",
            "description":"Mark a todo as done",
            "operationId":"deleteV3TodosId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the todo being marked as done",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Mark a todo as done",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Todo"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get the list of users",
            "description":"Get the list of users",
            "operationId":"getV3Users",
            "parameters":[
               {
                  "name":"username",
                  "in":"query",
                  "description":"Get a single user with a specific username",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "in":"query",
                  "description":"Search for a username",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"active",
                  "in":"query",
                  "description":"Filters only active users",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"external",
                  "in":"query",
                  "description":"Filters only external users",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"blocked",
                  "in":"query",
                  "description":"Filters only blocked users",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the list of users",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserBasic"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Create a user. Available only for admins.",
            "description":"Create a user. Available only for admins.",
            "operationId":"postV3Users",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email",
                           "name",
                           "password",
                           "username"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the new user"
                           },
                           "name":{
                              "type":"string",
                              "description":"The name of the user"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user"
                           },
                           "skype":{
                              "type":"string",
                              "description":"The Skype username"
                           },
                           "linkedin":{
                              "type":"string",
                              "description":"The LinkedIn username"
                           },
                           "twitter":{
                              "type":"string",
                              "description":"The Twitter username"
                           },
                           "website_url":{
                              "type":"string",
                              "description":"The website of the user"
                           },
                           "organization":{
                              "type":"string",
                              "description":"The organization of the user"
                           },
                           "projects_limit":{
                              "type":"integer",
                              "description":"The number of projects a user can create",
                              "format":"int32"
                           },
                           "extern_uid":{
                              "type":"string",
                              "description":"The external authentication provider UID"
                           },
                           "provider":{
                              "type":"string",
                              "description":"The external provider"
                           },
                           "bio":{
                              "type":"string",
                              "description":"The biography of the user"
                           },
                           "location":{
                              "type":"string",
                              "description":"The location of the user"
                           },
                           "admin":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an administrator"
                           },
                           "can_create_group":{
                              "type":"boolean",
                              "description":"Flag indicating the user can create groups"
                           },
                           "confirm":{
                              "type":"boolean",
                              "description":"Flag indicating the account needs to be confirmed"
                           },
                           "external":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an external user"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email",
                           "name",
                           "password",
                           "username"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the new user"
                           },
                           "name":{
                              "type":"string",
                              "description":"The name of the user"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user"
                           },
                           "skype":{
                              "type":"string",
                              "description":"The Skype username"
                           },
                           "linkedin":{
                              "type":"string",
                              "description":"The LinkedIn username"
                           },
                           "twitter":{
                              "type":"string",
                              "description":"The Twitter username"
                           },
                           "website_url":{
                              "type":"string",
                              "description":"The website of the user"
                           },
                           "organization":{
                              "type":"string",
                              "description":"The organization of the user"
                           },
                           "projects_limit":{
                              "type":"integer",
                              "description":"The number of projects a user can create",
                              "format":"int32"
                           },
                           "extern_uid":{
                              "type":"string",
                              "description":"The external authentication provider UID"
                           },
                           "provider":{
                              "type":"string",
                              "description":"The external provider"
                           },
                           "bio":{
                              "type":"string",
                              "description":"The biography of the user"
                           },
                           "location":{
                              "type":"string",
                              "description":"The location of the user"
                           },
                           "admin":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an administrator"
                           },
                           "can_create_group":{
                              "type":"boolean",
                              "description":"Flag indicating the user can create groups"
                           },
                           "confirm":{
                              "type":"boolean",
                              "description":"Flag indicating the account needs to be confirmed"
                           },
                           "external":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an external user"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Create a user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserPublic"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get a single user",
            "description":"Get a single user",
            "operationId":"getV3UsersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserBasic"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Update a user. Available only for admins.",
            "description":"Update a user. Available only for admins.",
            "operationId":"putV3UsersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the new user"
                           },
                           "name":{
                              "type":"string",
                              "description":"The name of the user"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user"
                           },
                           "skype":{
                              "type":"string",
                              "description":"The Skype username"
                           },
                           "linkedin":{
                              "type":"string",
                              "description":"The LinkedIn username"
                           },
                           "twitter":{
                              "type":"string",
                              "description":"The Twitter username"
                           },
                           "website_url":{
                              "type":"string",
                              "description":"The website of the user"
                           },
                           "organization":{
                              "type":"string",
                              "description":"The organization of the user"
                           },
                           "projects_limit":{
                              "type":"integer",
                              "description":"The number of projects a user can create",
                              "format":"int32"
                           },
                           "extern_uid":{
                              "type":"string",
                              "description":"The external authentication provider UID"
                           },
                           "provider":{
                              "type":"string",
                              "description":"The external provider"
                           },
                           "bio":{
                              "type":"string",
                              "description":"The biography of the user"
                           },
                           "location":{
                              "type":"string",
                              "description":"The location of the user"
                           },
                           "admin":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an administrator"
                           },
                           "can_create_group":{
                              "type":"boolean",
                              "description":"Flag indicating the user can create groups"
                           },
                           "confirm":{
                              "type":"boolean",
                              "description":"Flag indicating the account needs to be confirmed"
                           },
                           "external":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an external user"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the new user"
                           },
                           "name":{
                              "type":"string",
                              "description":"The name of the user"
                           },
                           "username":{
                              "type":"string",
                              "description":"The username of the user"
                           },
                           "skype":{
                              "type":"string",
                              "description":"The Skype username"
                           },
                           "linkedin":{
                              "type":"string",
                              "description":"The LinkedIn username"
                           },
                           "twitter":{
                              "type":"string",
                              "description":"The Twitter username"
                           },
                           "website_url":{
                              "type":"string",
                              "description":"The website of the user"
                           },
                           "organization":{
                              "type":"string",
                              "description":"The organization of the user"
                           },
                           "projects_limit":{
                              "type":"integer",
                              "description":"The number of projects a user can create",
                              "format":"int32"
                           },
                           "extern_uid":{
                              "type":"string",
                              "description":"The external authentication provider UID"
                           },
                           "provider":{
                              "type":"string",
                              "description":"The external provider"
                           },
                           "bio":{
                              "type":"string",
                              "description":"The biography of the user"
                           },
                           "location":{
                              "type":"string",
                              "description":"The location of the user"
                           },
                           "admin":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an administrator"
                           },
                           "can_create_group":{
                              "type":"boolean",
                              "description":"Flag indicating the user can create groups"
                           },
                           "confirm":{
                              "type":"boolean",
                              "description":"Flag indicating the account needs to be confirmed"
                           },
                           "external":{
                              "type":"boolean",
                              "description":"Flag indicating the user is an external user"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Update a user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserPublic"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"Delete a user. Available only for admins.",
            "description":"Delete a user. Available only for admins.",
            "operationId":"deleteV3UsersId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete a user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}/keys":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get the SSH keys of a specified user. Available only for admins.",
            "description":"Get the SSH keys of a specified user. Available only for admins.",
            "operationId":"getV3UsersIdKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the SSH keys of a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Add an SSH key to a specified user. Available only for admins.",
            "description":"Add an SSH key to a specified user. Available only for admins.",
            "operationId":"postV3UsersIdKeys",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new SSH key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The title of the new SSH key"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new SSH key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The title of the new SSH key"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add an SSH key to a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}/keys/{key_id}":{
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"Delete an existing SSH key from a specified user. Available only for admins.",
            "description":"Delete an existing SSH key from a specified user. Available only for admins.",
            "operationId":"deleteV3UsersIdKeysKeyId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the SSH key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete an existing SSH key from a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}/emails":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get the emails addresses of a specified user. Available only for admins.",
            "description":"Get the emails addresses of a specified user. Available only for admins.",
            "operationId":"getV3UsersIdEmails",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the emails addresses of a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Add an email address to a specified user. Available only for admins.",
            "description":"Add an email address to a specified user. Available only for admins.",
            "operationId":"postV3UsersIdEmails",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add an email address to a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}/emails/{email_id}":{
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"Delete an email address of a specified user. Available only for admins.",
            "description":"Delete an email address of a specified user. Available only for admins.",
            "operationId":"deleteV3UsersIdEmailsEmailId",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"email_id",
                  "in":"path",
                  "description":"The ID of the email",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete an email address of a specified user. Available only for admins.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/users/{id}/block":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Block a user. Available only for admins.",
            "description":"Block a user. Available only for admins.",
            "operationId":"putV3UsersIdBlock",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Block a user. Available only for admins.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/users/{id}/unblock":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Unblock a user. Available only for admins.",
            "description":"Unblock a user. Available only for admins.",
            "operationId":"putV3UsersIdUnblock",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Unblock a user. Available only for admins.",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/users/{id}/events":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get the contribution events of a specified user",
            "description":"This feature was introduced in GitLab 8.13.",
            "operationId":"getV3UsersIdEvents",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"page",
                  "in":"query",
                  "description":"Current page number",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"per_page",
                  "in":"query",
                  "description":"Number of items per page",
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the contribution events of a specified user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Event"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/user":{
         "get":{
            "tags":[
               "user"
            ],
            "summary":"Get the currently authenticated user",
            "description":"Get the currently authenticated user",
            "operationId":"getV3User",
            "responses":{
               "200":{
                  "description":"Get the currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserPublic"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/user/keys":{
         "get":{
            "tags":[
               "user"
            ],
            "summary":"Get the currently authenticated user's SSH keys",
            "description":"Get the currently authenticated user's SSH keys",
            "operationId":"getV3UserKeys",
            "responses":{
               "200":{
                  "description":"Get the currently authenticated user's SSH keys",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "user"
            ],
            "summary":"Add a new SSH key to the currently authenticated user",
            "description":"Add a new SSH key to the currently authenticated user",
            "operationId":"postV3UserKeys",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new SSH key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The title of the new SSH key"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "key",
                           "title"
                        ],
                        "properties":{
                           "key":{
                              "type":"string",
                              "description":"The new SSH key"
                           },
                           "title":{
                              "type":"string",
                              "description":"The title of the new SSH key"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add a new SSH key to the currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/user/keys/{key_id}":{
         "get":{
            "tags":[
               "user"
            ],
            "summary":"Get a single key owned by currently authenticated user",
            "description":"Get a single key owned by currently authenticated user",
            "operationId":"getV3UserKeysKeyId",
            "parameters":[
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the SSH key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single key owned by currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "user"
            ],
            "summary":"Delete an SSH key from the currently authenticated user",
            "description":"Delete an SSH key from the currently authenticated user",
            "operationId":"deleteV3UserKeysKeyId",
            "parameters":[
               {
                  "name":"key_id",
                  "in":"path",
                  "description":"The ID of the SSH key",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Delete an SSH key from the currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/SSHKey"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/user/emails":{
         "get":{
            "tags":[
               "user"
            ],
            "summary":"Get the currently authenticated user's email addresses",
            "description":"Get the currently authenticated user's email addresses",
            "operationId":"getV3UserEmails",
            "responses":{
               "200":{
                  "description":"Get the currently authenticated user's email addresses",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "user"
            ],
            "summary":"Add new email address to the currently authenticated user",
            "description":"Add new email address to the currently authenticated user",
            "operationId":"postV3UserEmails",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The new email"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "email"
                        ],
                        "properties":{
                           "email":{
                              "type":"string",
                              "description":"The new email"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Add new email address to the currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/user/emails/{email_id}":{
         "get":{
            "tags":[
               "user"
            ],
            "summary":"Get a single email address owned by the currently authenticated user",
            "description":"Get a single email address owned by the currently authenticated user",
            "operationId":"getV3UserEmailsEmailId",
            "parameters":[
               {
                  "name":"email_id",
                  "in":"path",
                  "description":"The ID of the email",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get a single email address owned by the currently authenticated user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Email"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "user"
            ],
            "summary":"Delete an email address from the currently authenticated user",
            "description":"Delete an email address from the currently authenticated user",
            "operationId":"deleteV3UserEmailsEmailId",
            "parameters":[
               {
                  "name":"email_id",
                  "in":"path",
                  "description":"The ID of the email",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "204":{
                  "description":"Delete an email address from the currently authenticated user",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/deploy_keys":{
         "get":{
            "tags":[
               "deploy_keys"
            ],
            "operationId":"getV3DeployKeys",
            "responses":{
               "200":{
                  "description":"get DeployKey(s)",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/session":{
         "post":{
            "tags":[
               "session"
            ],
            "summary":"Login to get token",
            "description":"Login to get token",
            "operationId":"postV3Session",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "password"
                        ],
                        "properties":{
                           "login":{
                              "type":"string",
                              "description":"The username"
                           },
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "password"
                        ],
                        "properties":{
                           "login":{
                              "type":"string",
                              "description":"The username"
                           },
                           "email":{
                              "type":"string",
                              "description":"The email of the user"
                           },
                           "password":{
                              "type":"string",
                              "description":"The password of the user"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Login to get token",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserWithPrivateToken"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/application/settings":{
         "get":{
            "tags":[
               "application"
            ],
            "summary":"Get the current application settings",
            "description":"Get the current application settings",
            "operationId":"getV3ApplicationSettings",
            "responses":{
               "200":{
                  "description":"Get the current application settings",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ApplicationSetting"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "application"
            ],
            "summary":"Modify application settings",
            "description":"Modify application settings",
            "operationId":"putV3ApplicationSettings",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "akismet_api_key",
                           "domain_blacklist",
                           "housekeeping_bitmaps_enabled",
                           "housekeeping_full_repack_period",
                           "housekeeping_gc_period",
                           "housekeeping_incremental_repack_period",
                           "koding_url",
                           "metrics_host",
                           "metrics_method_call_threshold",
                           "metrics_packet_size",
                           "metrics_pool_size",
                           "metrics_port",
                           "metrics_sample_interval",
                           "metrics_timeout",
                           "plantuml_url",
                           "recaptcha_private_key",
                           "recaptcha_site_key",
                           "sentry_dsn",
                           "shared_runners_text",
                           "sidekiq_throttling_factor",
                           "sidekiq_throttling_queus",
                           "two_factor_grace_period"
                        ],
                        "properties":{
                           "default_branch_protection":{
                              "type":"integer",
                              "description":"Determine if developers can push to master",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "1",
                                 "2"
                              ]
                           },
                           "default_project_visibility":{
                              "type":"integer",
                              "description":"The default project visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "default_snippet_visibility":{
                              "type":"integer",
                              "description":"The default snippet visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "default_group_visibility":{
                              "type":"integer",
                              "description":"The default group visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "restricted_visibility_levels":{
                              "type":"array",
                              "description":"Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users.",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "import_sources":{
                              "type":"array",
                              "description":"Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com",
                              "items":{
                                 "type":"string"
                              },
                              "enum":[
                                 "github",
                                 "bitbucket",
                                 "gitlab",
                                 "google_code",
                                 "fogbugz",
                                 "git",
                                 "gitlab_project"
                              ]
                           },
                           "disabled_oauth_sign_in_sources":{
                              "type":"array",
                              "description":"Disable certain OAuth sign-in sources",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "enabled_git_access_protocol":{
                              "type":"string",
                              "description":"Allow only the selected protocols to be used for Git access.",
                              "enum":[
                                 "ssh",
                                 "http",
                                 "nil"
                              ]
                           },
                           "gravatar_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if the Gravatar service is enabled"
                           },
                           "default_projects_limit":{
                              "type":"integer",
                              "description":"The maximum number of personal projects",
                              "format":"int32"
                           },
                           "max_attachment_size":{
                              "type":"integer",
                              "description":"Maximum attachment size in MB",
                              "format":"int32"
                           },
                           "session_expire_delay":{
                              "type":"integer",
                              "description":"Session duration in minutes. GitLab restart is required to apply changes.",
                              "format":"int32"
                           },
                           "user_oauth_applications":{
                              "type":"boolean",
                              "description":"Allow users to register any application to use GitLab as an OAuth provider"
                           },
                           "user_default_external":{
                              "type":"boolean",
                              "description":"Newly registered users will by default be external"
                           },
                           "signup_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if sign up is enabled"
                           },
                           "send_user_confirmation_email":{
                              "type":"boolean",
                              "description":"Send confirmation email on sign-up"
                           },
                           "domain_whitelist":{
                              "type":"string",
                              "description":"ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                           },
                           "domain_blacklist_enabled":{
                              "type":"boolean",
                              "description":"Enable domain blacklist for sign ups"
                           },
                           "domain_blacklist":{
                              "type":"string",
                              "description":"Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                           },
                           "after_sign_up_text":{
                              "type":"string",
                              "description":"Text shown after sign up"
                           },
                           "signin_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if sign in is enabled"
                           },
                           "require_two_factor_authentication":{
                              "type":"boolean",
                              "description":"Require all users to setup Two-factor authentication"
                           },
                           "two_factor_grace_period":{
                              "type":"integer",
                              "description":"Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication",
                              "format":"int32"
                           },
                           "home_page_url":{
                              "type":"string",
                              "description":"We will redirect non-logged in users to this page"
                           },
                           "after_sign_out_path":{
                              "type":"string",
                              "description":"We will redirect users to this page after they sign out"
                           },
                           "sign_in_text":{
                              "type":"string",
                              "description":"The sign in text of the GitLab application"
                           },
                           "help_page_text":{
                              "type":"string",
                              "description":"Custom text displayed on the help page"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Enable shared runners for new projects"
                           },
                           "shared_runners_text":{
                              "type":"string",
                              "description":"Shared runners text "
                           },
                           "max_artifacts_size":{
                              "type":"integer",
                              "description":"Set the maximum file size each build's artifacts can have",
                              "format":"int32"
                           },
                           "container_registry_token_expire_delay":{
                              "type":"integer",
                              "description":"Authorization token duration (minutes)",
                              "format":"int32"
                           },
                           "metrics_enabled":{
                              "type":"boolean",
                              "description":"Enable the InfluxDB metrics"
                           },
                           "metrics_host":{
                              "type":"string",
                              "description":"The InfluxDB host"
                           },
                           "metrics_port":{
                              "type":"integer",
                              "description":"The UDP port to use for connecting to InfluxDB",
                              "format":"int32"
                           },
                           "metrics_pool_size":{
                              "type":"integer",
                              "description":"The amount of InfluxDB connections to open",
                              "format":"int32"
                           },
                           "metrics_timeout":{
                              "type":"integer",
                              "description":"The amount of seconds after which an InfluxDB connection will time out",
                              "format":"int32"
                           },
                           "metrics_method_call_threshold":{
                              "type":"integer",
                              "description":"A method call is only tracked when it takes longer to complete than the given amount of milliseconds.",
                              "format":"int32"
                           },
                           "metrics_sample_interval":{
                              "type":"integer",
                              "description":"The sampling interval in seconds",
                              "format":"int32"
                           },
                           "metrics_packet_size":{
                              "type":"integer",
                              "description":"The amount of points to store in a single UDP packet",
                              "format":"int32"
                           },
                           "sidekiq_throttling_enabled":{
                              "type":"boolean",
                              "description":"Enable Sidekiq Job Throttling"
                           },
                           "sidekiq_throttling_queus":{
                              "type":"array",
                              "description":"Choose which queues you wish to throttle",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "sidekiq_throttling_factor":{
                              "type":"number",
                              "description":"The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive.",
                              "format":"float"
                           },
                           "recaptcha_enabled":{
                              "type":"boolean",
                              "description":"Helps prevent bots from creating accounts"
                           },
                           "recaptcha_site_key":{
                              "type":"string",
                              "description":"Generate site key at http://www.google.com/recaptcha"
                           },
                           "recaptcha_private_key":{
                              "type":"string",
                              "description":"Generate private key at http://www.google.com/recaptcha"
                           },
                           "akismet_enabled":{
                              "type":"boolean",
                              "description":"Helps prevent bots from creating issues"
                           },
                           "akismet_api_key":{
                              "type":"string",
                              "description":"Generate API key at http://www.akismet.com"
                           },
                           "admin_notification_email":{
                              "type":"string",
                              "description":"Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area."
                           },
                           "sentry_enabled":{
                              "type":"boolean",
                              "description":"Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com"
                           },
                           "sentry_dsn":{
                              "type":"string",
                              "description":"Sentry Data Source Name"
                           },
                           "repository_storage":{
                              "type":"string",
                              "description":"Storage paths for new projects"
                           },
                           "repository_checks_enabled":{
                              "type":"boolean",
                              "description":"GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues."
                           },
                           "koding_enabled":{
                              "type":"boolean",
                              "description":"Enable Koding"
                           },
                           "koding_url":{
                              "type":"string",
                              "description":"The Koding team URL"
                           },
                           "plantuml_enabled":{
                              "type":"boolean",
                              "description":"Enable PlantUML"
                           },
                           "plantuml_url":{
                              "type":"string",
                              "description":"The PlantUML server URL"
                           },
                           "version_check_enabled":{
                              "type":"boolean",
                              "description":"Let GitLab inform you when an update is available."
                           },
                           "email_author_in_body":{
                              "type":"boolean",
                              "description":"Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead."
                           },
                           "html_emails_enabled":{
                              "type":"boolean",
                              "description":"By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format."
                           },
                           "housekeeping_enabled":{
                              "type":"boolean",
                              "description":"Enable automatic repository housekeeping (git repack, git gc)"
                           },
                           "housekeeping_bitmaps_enabled":{
                              "type":"boolean",
                              "description":"Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance."
                           },
                           "housekeeping_incremental_repack_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which an incremental 'git repack' is run.",
                              "format":"int32"
                           },
                           "housekeeping_full_repack_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which a full 'git repack' is run.",
                              "format":"int32"
                           },
                           "housekeeping_gc_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which 'git gc' is run.",
                              "format":"int32"
                           }
                        }
                     }
                  },
                  "application/x-www-form-urlencoded":{
                     "schema":{
                        "type":"object",
                        "required":[
                           "akismet_api_key",
                           "domain_blacklist",
                           "housekeeping_bitmaps_enabled",
                           "housekeeping_full_repack_period",
                           "housekeeping_gc_period",
                           "housekeeping_incremental_repack_period",
                           "koding_url",
                           "metrics_host",
                           "metrics_method_call_threshold",
                           "metrics_packet_size",
                           "metrics_pool_size",
                           "metrics_port",
                           "metrics_sample_interval",
                           "metrics_timeout",
                           "plantuml_url",
                           "recaptcha_private_key",
                           "recaptcha_site_key",
                           "sentry_dsn",
                           "shared_runners_text",
                           "sidekiq_throttling_factor",
                           "sidekiq_throttling_queus",
                           "two_factor_grace_period"
                        ],
                        "properties":{
                           "default_branch_protection":{
                              "type":"integer",
                              "description":"Determine if developers can push to master",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "1",
                                 "2"
                              ]
                           },
                           "default_project_visibility":{
                              "type":"integer",
                              "description":"The default project visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "default_snippet_visibility":{
                              "type":"integer",
                              "description":"The default snippet visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "default_group_visibility":{
                              "type":"integer",
                              "description":"The default group visibility",
                              "format":"int32",
                              "enum":[
                                 "0",
                                 "10",
                                 "20"
                              ]
                           },
                           "restricted_visibility_levels":{
                              "type":"array",
                              "description":"Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users.",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "import_sources":{
                              "type":"array",
                              "description":"Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com",
                              "items":{
                                 "type":"string"
                              },
                              "enum":[
                                 "github",
                                 "bitbucket",
                                 "gitlab",
                                 "google_code",
                                 "fogbugz",
                                 "git",
                                 "gitlab_project"
                              ]
                           },
                           "disabled_oauth_sign_in_sources":{
                              "type":"array",
                              "description":"Disable certain OAuth sign-in sources",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "enabled_git_access_protocol":{
                              "type":"string",
                              "description":"Allow only the selected protocols to be used for Git access.",
                              "enum":[
                                 "ssh",
                                 "http",
                                 "nil"
                              ]
                           },
                           "gravatar_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if the Gravatar service is enabled"
                           },
                           "default_projects_limit":{
                              "type":"integer",
                              "description":"The maximum number of personal projects",
                              "format":"int32"
                           },
                           "max_attachment_size":{
                              "type":"integer",
                              "description":"Maximum attachment size in MB",
                              "format":"int32"
                           },
                           "session_expire_delay":{
                              "type":"integer",
                              "description":"Session duration in minutes. GitLab restart is required to apply changes.",
                              "format":"int32"
                           },
                           "user_oauth_applications":{
                              "type":"boolean",
                              "description":"Allow users to register any application to use GitLab as an OAuth provider"
                           },
                           "user_default_external":{
                              "type":"boolean",
                              "description":"Newly registered users will by default be external"
                           },
                           "signup_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if sign up is enabled"
                           },
                           "send_user_confirmation_email":{
                              "type":"boolean",
                              "description":"Send confirmation email on sign-up"
                           },
                           "domain_whitelist":{
                              "type":"string",
                              "description":"ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                           },
                           "domain_blacklist_enabled":{
                              "type":"boolean",
                              "description":"Enable domain blacklist for sign ups"
                           },
                           "domain_blacklist":{
                              "type":"string",
                              "description":"Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
                           },
                           "after_sign_up_text":{
                              "type":"string",
                              "description":"Text shown after sign up"
                           },
                           "signin_enabled":{
                              "type":"boolean",
                              "description":"Flag indicating if sign in is enabled"
                           },
                           "require_two_factor_authentication":{
                              "type":"boolean",
                              "description":"Require all users to setup Two-factor authentication"
                           },
                           "two_factor_grace_period":{
                              "type":"integer",
                              "description":"Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication",
                              "format":"int32"
                           },
                           "home_page_url":{
                              "type":"string",
                              "description":"We will redirect non-logged in users to this page"
                           },
                           "after_sign_out_path":{
                              "type":"string",
                              "description":"We will redirect users to this page after they sign out"
                           },
                           "sign_in_text":{
                              "type":"string",
                              "description":"The sign in text of the GitLab application"
                           },
                           "help_page_text":{
                              "type":"string",
                              "description":"Custom text displayed on the help page"
                           },
                           "shared_runners_enabled":{
                              "type":"boolean",
                              "description":"Enable shared runners for new projects"
                           },
                           "shared_runners_text":{
                              "type":"string",
                              "description":"Shared runners text "
                           },
                           "max_artifacts_size":{
                              "type":"integer",
                              "description":"Set the maximum file size each build's artifacts can have",
                              "format":"int32"
                           },
                           "container_registry_token_expire_delay":{
                              "type":"integer",
                              "description":"Authorization token duration (minutes)",
                              "format":"int32"
                           },
                           "metrics_enabled":{
                              "type":"boolean",
                              "description":"Enable the InfluxDB metrics"
                           },
                           "metrics_host":{
                              "type":"string",
                              "description":"The InfluxDB host"
                           },
                           "metrics_port":{
                              "type":"integer",
                              "description":"The UDP port to use for connecting to InfluxDB",
                              "format":"int32"
                           },
                           "metrics_pool_size":{
                              "type":"integer",
                              "description":"The amount of InfluxDB connections to open",
                              "format":"int32"
                           },
                           "metrics_timeout":{
                              "type":"integer",
                              "description":"The amount of seconds after which an InfluxDB connection will time out",
                              "format":"int32"
                           },
                           "metrics_method_call_threshold":{
                              "type":"integer",
                              "description":"A method call is only tracked when it takes longer to complete than the given amount of milliseconds.",
                              "format":"int32"
                           },
                           "metrics_sample_interval":{
                              "type":"integer",
                              "description":"The sampling interval in seconds",
                              "format":"int32"
                           },
                           "metrics_packet_size":{
                              "type":"integer",
                              "description":"The amount of points to store in a single UDP packet",
                              "format":"int32"
                           },
                           "sidekiq_throttling_enabled":{
                              "type":"boolean",
                              "description":"Enable Sidekiq Job Throttling"
                           },
                           "sidekiq_throttling_queus":{
                              "type":"array",
                              "description":"Choose which queues you wish to throttle",
                              "items":{
                                 "type":"string"
                              }
                           },
                           "sidekiq_throttling_factor":{
                              "type":"number",
                              "description":"The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive.",
                              "format":"float"
                           },
                           "recaptcha_enabled":{
                              "type":"boolean",
                              "description":"Helps prevent bots from creating accounts"
                           },
                           "recaptcha_site_key":{
                              "type":"string",
                              "description":"Generate site key at http://www.google.com/recaptcha"
                           },
                           "recaptcha_private_key":{
                              "type":"string",
                              "description":"Generate private key at http://www.google.com/recaptcha"
                           },
                           "akismet_enabled":{
                              "type":"boolean",
                              "description":"Helps prevent bots from creating issues"
                           },
                           "akismet_api_key":{
                              "type":"string",
                              "description":"Generate API key at http://www.akismet.com"
                           },
                           "admin_notification_email":{
                              "type":"string",
                              "description":"Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area."
                           },
                           "sentry_enabled":{
                              "type":"boolean",
                              "description":"Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com"
                           },
                           "sentry_dsn":{
                              "type":"string",
                              "description":"Sentry Data Source Name"
                           },
                           "repository_storage":{
                              "type":"string",
                              "description":"Storage paths for new projects"
                           },
                           "repository_checks_enabled":{
                              "type":"boolean",
                              "description":"GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues."
                           },
                           "koding_enabled":{
                              "type":"boolean",
                              "description":"Enable Koding"
                           },
                           "koding_url":{
                              "type":"string",
                              "description":"The Koding team URL"
                           },
                           "plantuml_enabled":{
                              "type":"boolean",
                              "description":"Enable PlantUML"
                           },
                           "plantuml_url":{
                              "type":"string",
                              "description":"The PlantUML server URL"
                           },
                           "version_check_enabled":{
                              "type":"boolean",
                              "description":"Let GitLab inform you when an update is available."
                           },
                           "email_author_in_body":{
                              "type":"boolean",
                              "description":"Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead."
                           },
                           "html_emails_enabled":{
                              "type":"boolean",
                              "description":"By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format."
                           },
                           "housekeeping_enabled":{
                              "type":"boolean",
                              "description":"Enable automatic repository housekeeping (git repack, git gc)"
                           },
                           "housekeeping_bitmaps_enabled":{
                              "type":"boolean",
                              "description":"Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance."
                           },
                           "housekeeping_incremental_repack_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which an incremental 'git repack' is run.",
                              "format":"int32"
                           },
                           "housekeeping_full_repack_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which a full 'git repack' is run.",
                              "format":"int32"
                           },
                           "housekeeping_gc_period":{
                              "type":"integer",
                              "description":"Number of Git pushes after which 'git gc' is run.",
                              "format":"int32"
                           }
                        }
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Modify application settings",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ApplicationSetting"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/sidekiq/queue_metrics":{
         "get":{
            "tags":[
               "sidekiq"
            ],
            "summary":"Get the Sidekiq queue metrics",
            "description":"Get the Sidekiq queue metrics",
            "operationId":"getV3SidekiqQueueMetrics",
            "responses":{
               "200":{
                  "description":"Get the Sidekiq queue metrics",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/sidekiq/process_metrics":{
         "get":{
            "tags":[
               "sidekiq"
            ],
            "summary":"Get the Sidekiq process metrics",
            "description":"Get the Sidekiq process metrics",
            "operationId":"getV3SidekiqProcessMetrics",
            "responses":{
               "200":{
                  "description":"Get the Sidekiq process metrics",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/sidekiq/job_stats":{
         "get":{
            "tags":[
               "sidekiq"
            ],
            "summary":"Get the Sidekiq job statistics",
            "description":"Get the Sidekiq job statistics",
            "operationId":"getV3SidekiqJobStats",
            "responses":{
               "200":{
                  "description":"Get the Sidekiq job statistics",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/sidekiq/compound_metrics":{
         "get":{
            "tags":[
               "sidekiq"
            ],
            "summary":"Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
            "description":"Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
            "operationId":"getV3SidekiqCompoundMetrics",
            "responses":{
               "200":{
                  "description":"Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
                  "content":{
                     
                  }
               }
            }
         }
      },
      "/v3/licenses":{
         "get":{
            "tags":[
               "licenses"
            ],
            "summary":"Get the list of the available license template",
            "description":"This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3Licenses",
            "parameters":[
               {
                  "name":"popular",
                  "in":"query",
                  "description":"If passed, returns only popular licenses",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the list of the available license template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoLicense"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/licenses/{name}":{
         "get":{
            "tags":[
               "licenses"
            ],
            "summary":"Get the text for a specific license",
            "description":"This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3LicensesName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific license",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoLicense"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/licenses":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the list of the available license template",
            "description":"This feature was introduced in GitLab 8.7.",
            "operationId":"getV3TemplatesLicenses",
            "parameters":[
               {
                  "name":"popular",
                  "in":"query",
                  "description":"If passed, returns only popular licenses",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the list of the available license template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoLicense"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/licenses/{name}":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the text for a specific license",
            "description":"This feature was introduced in GitLab 8.7.",
            "operationId":"getV3TemplatesLicensesName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific license",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RepoLicense"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/gitignores":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.8.",
            "operationId":"getV3TemplatesGitignores",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/gitignores/{name}":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.8.",
            "operationId":"getV3TemplatesGitignoresName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/gitlab_ci_ymls":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.9.",
            "operationId":"getV3TemplatesGitlabCiYmls",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/gitlab_ci_ymls/{name}":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.9.",
            "operationId":"getV3TemplatesGitlabCiYmlsName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/dockerfiles":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3TemplatesDockerfiles",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/templates/dockerfiles/{name}":{
         "get":{
            "tags":[
               "templates"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.15.",
            "operationId":"getV3TemplatesDockerfilesName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/gitignores":{
         "get":{
            "tags":[
               "gitignores"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3Gitignores",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/gitignores/{name}":{
         "get":{
            "tags":[
               "gitignores"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3GitignoresName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/gitlab_ci_ymls":{
         "get":{
            "tags":[
               "gitlab_ci_ymls"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3GitlabCiYmls",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/gitlab_ci_ymls/{name}":{
         "get":{
            "tags":[
               "gitlab_ci_ymls"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3GitlabCiYmlsName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/dockerfiles":{
         "get":{
            "tags":[
               "dockerfiles"
            ],
            "summary":"Get the list of the available template",
            "description":"This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3Dockerfiles",
            "responses":{
               "200":{
                  "description":"Get the list of the available template",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/TemplatesList"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/dockerfiles/{name}":{
         "get":{
            "tags":[
               "dockerfiles"
            ],
            "summary":"Get the text for a specific template present in local filesystem",
            "description":"This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
            "operationId":"getV3DockerfilesName",
            "parameters":[
               {
                  "name":"name",
                  "in":"path",
                  "description":"The name of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Get the text for a specific template present in local filesystem",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Template"
                        }
                     }
                  }
               }
            }
         }
      },
      "/v3/version":{
         "get":{
            "tags":[
               "version"
            ],
            "summary":"Get the version information of the GitLab instance.",
            "description":"This feature was introduced in GitLab 8.13.",
            "operationId":"getV3Version",
            "responses":{
               "200":{
                  "description":"Get the version information of the GitLab instance.",
                  "content":{
                     
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "AccessRequester":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "requested_at":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.11."
         },
         "Member":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "access_level":{
                  "type":"string"
               },
               "expires_at":{
                  "type":"string"
               }
            },
            "description":"Updates a member of a group or project."
         },
         "Group":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "visibility_level":{
                  "type":"string"
               },
               "lfs_enabled":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "request_access_enabled":{
                  "type":"string"
               },
               "statistics":{
                  "type":"string"
               }
            },
            "description":"Update a group. Available only for users who can administrate groups."
         },
         "GroupDetail":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "visibility_level":{
                  "type":"string"
               },
               "lfs_enabled":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "request_access_enabled":{
                  "type":"string"
               },
               "statistics":{
                  "type":"string"
               },
               "projects":{
                  "$ref":"#/components/schemas/Project"
               },
               "shared_projects":{
                  "$ref":"#/components/schemas/Project"
               }
            },
            "description":"Transfer a project to the group namespace. Available only for admin."
         },
         "Project":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "default_branch":{
                  "type":"string"
               },
               "tag_list":{
                  "type":"string"
               },
               "public":{
                  "type":"string"
               },
               "archived":{
                  "type":"string"
               },
               "visibility_level":{
                  "type":"string"
               },
               "ssh_url_to_repo":{
                  "type":"string"
               },
               "http_url_to_repo":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "owner":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "name":{
                  "type":"string"
               },
               "name_with_namespace":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "path_with_namespace":{
                  "type":"string"
               },
               "container_registry_enabled":{
                  "type":"string"
               },
               "issues_enabled":{
                  "type":"string"
               },
               "merge_requests_enabled":{
                  "type":"string"
               },
               "wiki_enabled":{
                  "type":"string"
               },
               "builds_enabled":{
                  "type":"string"
               },
               "snippets_enabled":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "last_activity_at":{
                  "type":"string"
               },
               "shared_runners_enabled":{
                  "type":"string"
               },
               "lfs_enabled":{
                  "type":"string"
               },
               "creator_id":{
                  "type":"string"
               },
               "namespace":{
                  "$ref":"#/components/schemas/Namespace"
               },
               "forked_from_project":{
                  "$ref":"#/components/schemas/BasicProjectDetails"
               },
               "avatar_url":{
                  "type":"string"
               },
               "star_count":{
                  "type":"string"
               },
               "forks_count":{
                  "type":"string"
               },
               "open_issues_count":{
                  "type":"string"
               },
               "runners_token":{
                  "type":"string"
               },
               "public_builds":{
                  "type":"string"
               },
               "shared_with_groups":{
                  "type":"string"
               },
               "only_allow_merge_if_build_succeeds":{
                  "type":"string"
               },
               "request_access_enabled":{
                  "type":"string"
               },
               "only_allow_merge_if_all_discussions_are_resolved":{
                  "type":"string"
               },
               "statistics":{
                  "$ref":"#/components/schemas/ProjectStatistics"
               }
            },
            "description":"Unstar a project"
         },
         "UserBasic":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               }
            },
            "description":"Get a single user"
         },
         "Namespace":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "kind":{
                  "type":"string"
               }
            },
            "description":"Get a namespaces list"
         },
         "BasicProjectDetails":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "http_url_to_repo":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "name_with_namespace":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "path_with_namespace":{
                  "type":"string"
               }
            },
            "description":"Get all projects for admin user"
         },
         "ProjectStatistics":{
            "type":"object",
            "properties":{
               "commit_count":{
                  "type":"string"
               },
               "storage_size":{
                  "type":"string"
               },
               "repository_size":{
                  "type":"string"
               },
               "lfs_objects_size":{
                  "type":"string"
               },
               "build_artifacts_size":{
                  "type":"string"
               }
            }
         },
         "Issue":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "iid":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "labels":{
                  "type":"string"
               },
               "milestone":{
                  "$ref":"#/components/schemas/Milestone"
               },
               "assignee":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "subscribed":{
                  "type":"string"
               },
               "user_notes_count":{
                  "type":"string"
               },
               "upvotes":{
                  "type":"string"
               },
               "downvotes":{
                  "type":"string"
               },
               "due_date":{
                  "type":"string"
               },
               "confidential":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               }
            },
            "description":"Get currently authenticated user's issues"
         },
         "Milestone":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "iid":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "due_date":{
                  "type":"string"
               },
               "start_date":{
                  "type":"string"
               }
            },
            "description":"Update an existing project milestone"
         },
         "NotificationSetting":{
            "type":"object",
            "properties":{
               "level":{
                  "type":"string"
               },
               "events":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.12"
         },
         "AwardEmoji":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "user":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "awardable_id":{
                  "type":"string"
               },
               "awardable_type":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in 8.9"
         },
         "Board":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "lists":{
                  "$ref":"#/components/schemas/List"
               }
            },
            "description":"This feature was introduced in 8.13"
         },
         "List":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "label":{
                  "$ref":"#/components/schemas/LabelBasic"
               },
               "position":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in 8.13"
         },
         "LabelBasic":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "color":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               }
            }
         },
         "RepoBranch":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "commit":{
                  "type":"string"
               },
               "merged":{
                  "type":"string"
               },
               "protected":{
                  "type":"string"
               },
               "developers_can_push":{
                  "type":"string"
               },
               "developers_can_merge":{
                  "type":"string"
               }
            },
            "description":"Create branch"
         },
         "Build":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "status":{
                  "type":"string"
               },
               "stage":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "ref":{
                  "type":"string"
               },
               "tag":{
                  "type":"string"
               },
               "coverage":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "started_at":{
                  "type":"string"
               },
               "finished_at":{
                  "type":"string"
               },
               "user":{
                  "$ref":"#/components/schemas/User"
               },
               "artifacts_file":{
                  "$ref":"#/components/schemas/BuildArtifactFile"
               },
               "commit":{
                  "$ref":"#/components/schemas/RepoCommit"
               },
               "runner":{
                  "$ref":"#/components/schemas/Runner"
               },
               "pipeline":{
                  "$ref":"#/components/schemas/PipelineBasic"
               }
            },
            "description":"This feature was added in GitLab 8.11"
         },
         "User":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "is_admin":{
                  "type":"string"
               },
               "bio":{
                  "type":"string"
               },
               "location":{
                  "type":"string"
               },
               "skype":{
                  "type":"string"
               },
               "linkedin":{
                  "type":"string"
               },
               "twitter":{
                  "type":"string"
               },
               "website_url":{
                  "type":"string"
               },
               "organization":{
                  "type":"string"
               }
            }
         },
         "BuildArtifactFile":{
            "type":"object",
            "properties":{
               "filename":{
                  "type":"string"
               },
               "size":{
                  "type":"string"
               }
            }
         },
         "RepoCommit":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "short_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "author_name":{
                  "type":"string"
               },
               "author_email":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "committer_name":{
                  "type":"string"
               },
               "committer_email":{
                  "type":"string"
               },
               "message":{
                  "type":"string"
               }
            },
            "description":"Get the commits of a merge request"
         },
         "Runner":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "active":{
                  "type":"string"
               },
               "is_shared":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               }
            },
            "description":"Remove a runner"
         },
         "PipelineBasic":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "ref":{
                  "type":"string"
               },
               "status":{
                  "type":"string"
               }
            }
         },
         "RepoCommitDetail":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "short_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "author_name":{
                  "type":"string"
               },
               "author_email":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "committer_name":{
                  "type":"string"
               },
               "committer_email":{
                  "type":"string"
               },
               "message":{
                  "type":"string"
               },
               "parent_ids":{
                  "type":"string"
               },
               "committed_date":{
                  "type":"string"
               },
               "authored_date":{
                  "type":"string"
               },
               "stats":{
                  "$ref":"#/components/schemas/RepoCommitStats"
               },
               "status":{
                  "type":"string"
               }
            },
            "description":"Get a specific commit of a project"
         },
         "RepoCommitStats":{
            "type":"object",
            "properties":{
               "additions":{
                  "type":"string"
               },
               "deletions":{
                  "type":"string"
               },
               "total":{
                  "type":"string"
               }
            }
         },
         "CommitNote":{
            "type":"object",
            "properties":{
               "note":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "line":{
                  "type":"string"
               },
               "line_type":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "created_at":{
                  "type":"string"
               }
            },
            "description":"Post comment to commit"
         },
         "CommitStatus":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "ref":{
                  "type":"string"
               },
               "status":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "target_url":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "started_at":{
                  "type":"string"
               },
               "finished_at":{
                  "type":"string"
               },
               "allow_failure":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               }
            },
            "description":"Post status to a commit"
         },
         "SSHKey":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "key":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "can_push":{
                  "type":"string"
               }
            },
            "description":"Delete an SSH key from the currently authenticated user"
         },
         "Deployment":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "iid":{
                  "type":"string"
               },
               "ref":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "user":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "environment":{
                  "$ref":"#/components/schemas/EnvironmentBasic"
               },
               "deployable":{
                  "$ref":"#/components/schemas/Build"
               }
            },
            "description":"This feature was introduced in GitLab 8.11."
         },
         "EnvironmentBasic":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "slug":{
                  "type":"string"
               },
               "external_url":{
                  "type":"string"
               }
            }
         },
         "Environment":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "slug":{
                  "type":"string"
               },
               "external_url":{
                  "type":"string"
               },
               "project":{
                  "$ref":"#/components/schemas/Project"
               }
            },
            "description":"This feature was introduced in GitLab 8.11."
         },
         "Label":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "color":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "open_issues_count":{
                  "type":"string"
               },
               "closed_issues_count":{
                  "type":"string"
               },
               "open_merge_requests_count":{
                  "type":"string"
               },
               "priority":{
                  "type":"string"
               },
               "subscribed":{
                  "type":"string"
               }
            },
            "description":"Unsubscribe from a resource"
         },
         "MergeRequestDiff":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "head_commit_sha":{
                  "type":"string"
               },
               "base_commit_sha":{
                  "type":"string"
               },
               "start_commit_sha":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "merge_request_id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "real_size":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.12."
         },
         "MergeRequestDiffFull":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "head_commit_sha":{
                  "type":"string"
               },
               "base_commit_sha":{
                  "type":"string"
               },
               "start_commit_sha":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "merge_request_id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "real_size":{
                  "type":"string"
               },
               "commits":{
                  "$ref":"#/components/schemas/RepoCommit"
               },
               "diffs":{
                  "$ref":"#/components/schemas/RepoDiff"
               }
            },
            "description":"This feature was introduced in GitLab 8.12."
         },
         "RepoDiff":{
            "type":"object",
            "properties":{
               "old_path":{
                  "type":"string"
               },
               "new_path":{
                  "type":"string"
               },
               "a_mode":{
                  "type":"string"
               },
               "b_mode":{
                  "type":"string"
               },
               "diff":{
                  "type":"string"
               },
               "new_file":{
                  "type":"string"
               },
               "renamed_file":{
                  "type":"string"
               },
               "deleted_file":{
                  "type":"string"
               }
            }
         },
         "MergeRequest":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "iid":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "target_branch":{
                  "type":"string"
               },
               "source_branch":{
                  "type":"string"
               },
               "upvotes":{
                  "type":"string"
               },
               "downvotes":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "assignee":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "source_project_id":{
                  "type":"string"
               },
               "target_project_id":{
                  "type":"string"
               },
               "labels":{
                  "type":"string"
               },
               "work_in_progress":{
                  "type":"string"
               },
               "milestone":{
                  "$ref":"#/components/schemas/Milestone"
               },
               "merge_when_build_succeeds":{
                  "type":"string"
               },
               "merge_status":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "merge_commit_sha":{
                  "type":"string"
               },
               "subscribed":{
                  "type":"string"
               },
               "user_notes_count":{
                  "type":"string"
               },
               "should_remove_source_branch":{
                  "type":"string"
               },
               "force_remove_source_branch":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               }
            },
            "description":"Unsubscribe from a resource"
         },
         "MergeRequestChanges":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "iid":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "target_branch":{
                  "type":"string"
               },
               "source_branch":{
                  "type":"string"
               },
               "upvotes":{
                  "type":"string"
               },
               "downvotes":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "assignee":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "source_project_id":{
                  "type":"string"
               },
               "target_project_id":{
                  "type":"string"
               },
               "labels":{
                  "type":"string"
               },
               "work_in_progress":{
                  "type":"string"
               },
               "milestone":{
                  "$ref":"#/components/schemas/Milestone"
               },
               "merge_when_build_succeeds":{
                  "type":"string"
               },
               "merge_status":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "merge_commit_sha":{
                  "type":"string"
               },
               "subscribed":{
                  "type":"string"
               },
               "user_notes_count":{
                  "type":"string"
               },
               "should_remove_source_branch":{
                  "type":"string"
               },
               "force_remove_source_branch":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "changes":{
                  "$ref":"#/components/schemas/RepoDiff"
               }
            },
            "description":"Show the merge request changes"
         },
         "MRNote":{
            "type":"object",
            "properties":{
               "note":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               }
            },
            "description":"List issues that will be closed on merge"
         },
         "Note":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "body":{
                  "type":"string"
               },
               "attachment":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "system":{
                  "type":"string"
               },
               "noteable_id":{
                  "type":"string"
               },
               "noteable_type":{
                  "type":"string"
               },
               "upvote?":{
                  "type":"string"
               },
               "downvote?":{
                  "type":"string"
               }
            },
            "description":"Delete a +noteable+ note"
         },
         "Pipeline":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "sha":{
                  "type":"string"
               },
               "ref":{
                  "type":"string"
               },
               "status":{
                  "type":"string"
               },
               "before_sha":{
                  "type":"string"
               },
               "tag":{
                  "type":"string"
               },
               "yaml_errors":{
                  "type":"string"
               },
               "user":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "started_at":{
                  "type":"string"
               },
               "finished_at":{
                  "type":"string"
               },
               "committed_at":{
                  "type":"string"
               },
               "duration":{
                  "type":"string"
               },
               "coverage":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.11."
         },
         "ProjectHook":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "url":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "push_events":{
                  "type":"string"
               },
               "tag_push_events":{
                  "type":"string"
               },
               "enable_ssl_verification":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "issues_events":{
                  "type":"string"
               },
               "merge_requests_events":{
                  "type":"string"
               },
               "note_events":{
                  "type":"string"
               },
               "build_events":{
                  "type":"string"
               },
               "pipeline_events":{
                  "type":"string"
               },
               "wiki_page_events":{
                  "type":"string"
               }
            },
            "description":"Deletes project hook"
         },
         "ProjectWithAccess":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "default_branch":{
                  "type":"string"
               },
               "tag_list":{
                  "type":"string"
               },
               "public":{
                  "type":"string"
               },
               "archived":{
                  "type":"string"
               },
               "visibility_level":{
                  "type":"string"
               },
               "ssh_url_to_repo":{
                  "type":"string"
               },
               "http_url_to_repo":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "owner":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "name":{
                  "type":"string"
               },
               "name_with_namespace":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "path_with_namespace":{
                  "type":"string"
               },
               "container_registry_enabled":{
                  "type":"string"
               },
               "issues_enabled":{
                  "type":"string"
               },
               "merge_requests_enabled":{
                  "type":"string"
               },
               "wiki_enabled":{
                  "type":"string"
               },
               "builds_enabled":{
                  "type":"string"
               },
               "snippets_enabled":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "last_activity_at":{
                  "type":"string"
               },
               "shared_runners_enabled":{
                  "type":"string"
               },
               "lfs_enabled":{
                  "type":"string"
               },
               "creator_id":{
                  "type":"string"
               },
               "namespace":{
                  "$ref":"#/components/schemas/Namespace"
               },
               "forked_from_project":{
                  "$ref":"#/components/schemas/BasicProjectDetails"
               },
               "avatar_url":{
                  "type":"string"
               },
               "star_count":{
                  "type":"string"
               },
               "forks_count":{
                  "type":"string"
               },
               "open_issues_count":{
                  "type":"string"
               },
               "runners_token":{
                  "type":"string"
               },
               "public_builds":{
                  "type":"string"
               },
               "shared_with_groups":{
                  "type":"string"
               },
               "only_allow_merge_if_build_succeeds":{
                  "type":"string"
               },
               "request_access_enabled":{
                  "type":"string"
               },
               "only_allow_merge_if_all_discussions_are_resolved":{
                  "type":"string"
               },
               "statistics":{
                  "$ref":"#/components/schemas/ProjectStatistics"
               },
               "permissions":{
                  "type":"string"
               }
            },
            "description":"Get a single project"
         },
         "Event":{
            "type":"object",
            "properties":{
               "title":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "action_name":{
                  "type":"string"
               },
               "target_id":{
                  "type":"string"
               },
               "target_type":{
                  "type":"string"
               },
               "author_id":{
                  "type":"string"
               },
               "data":{
                  "type":"string"
               },
               "target_title":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "note":{
                  "$ref":"#/components/schemas/Note"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "author_username":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.13."
         },
         "ProjectGroupLink":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "project_id":{
                  "type":"string"
               },
               "group_id":{
                  "type":"string"
               },
               "group_access":{
                  "type":"string"
               },
               "expires_at":{
                  "type":"string"
               }
            },
            "description":"Share the project with a group"
         },
         "ProjectSnippet":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "file_name":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "updated_at":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "expires_at":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               }
            },
            "description":"Update an existing project snippet"
         },
         "RepoTreeObject":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               },
               "path":{
                  "type":"string"
               },
               "mode":{
                  "type":"string"
               }
            },
            "description":"Get a project repository tree"
         },
         "Compare":{
            "type":"object",
            "properties":{
               "commit":{
                  "$ref":"#/components/schemas/RepoCommit"
               },
               "commits":{
                  "$ref":"#/components/schemas/RepoCommit"
               },
               "diffs":{
                  "$ref":"#/components/schemas/RepoDiff"
               },
               "compare_timeout":{
                  "type":"string"
               },
               "compare_same_ref":{
                  "type":"string"
               }
            },
            "description":"Compare two branches, tags, or commits"
         },
         "Contributor":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "commits":{
                  "type":"string"
               },
               "additions":{
                  "type":"string"
               },
               "deletions":{
                  "type":"string"
               }
            },
            "description":"Get repository contributors"
         },
         "ProjectService":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "active":{
                  "type":"string"
               },
               "push_events":{
                  "type":"string"
               },
               "issues_events":{
                  "type":"string"
               },
               "merge_requests_events":{
                  "type":"string"
               },
               "tag_push_events":{
                  "type":"string"
               },
               "note_events":{
                  "type":"string"
               },
               "build_events":{
                  "type":"string"
               },
               "pipeline_events":{
                  "type":"string"
               },
               "properties":{
                  "type":"string"
               }
            },
            "description":"Get the service settings for project"
         },
         "RepoTag":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "message":{
                  "type":"string"
               },
               "commit":{
                  "type":"string"
               },
               "release":{
                  "$ref":"#/components/schemas/Release"
               }
            },
            "description":"Create a new repository tag"
         },
         "Release":{
            "type":"object",
            "properties":{
               "tag_name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               }
            },
            "description":"Update a tag's release note"
         },
         "Todo":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "project":{
                  "$ref":"#/components/schemas/BasicProjectDetails"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "action_name":{
                  "type":"string"
               },
               "target_type":{
                  "type":"string"
               },
               "target":{
                  "type":"string"
               },
               "target_url":{
                  "type":"string"
               },
               "body":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               }
            },
            "description":"Mark a todo as done"
         },
         "TriggerRequest":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "variables":{
                  "type":"string"
               }
            },
            "description":"Trigger a GitLab project build"
         },
         "Trigger":{
            "type":"object",
            "properties":{
               "token":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "deleted_at":{
                  "type":"string"
               },
               "last_used":{
                  "type":"string"
               }
            },
            "description":"Delete a trigger"
         },
         "Variable":{
            "type":"object",
            "properties":{
               "key":{
                  "type":"string"
               },
               "value":{
                  "type":"string"
               }
            },
            "description":"Delete an existing variable from a project"
         },
         "SSHKeyWithUser":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "key":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "can_push":{
                  "type":"string"
               },
               "user":{
                  "$ref":"#/components/schemas/UserPublic"
               }
            },
            "description":"Get single ssh key by id. Only available to admin users"
         },
         "UserPublic":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "is_admin":{
                  "type":"string"
               },
               "bio":{
                  "type":"string"
               },
               "location":{
                  "type":"string"
               },
               "skype":{
                  "type":"string"
               },
               "linkedin":{
                  "type":"string"
               },
               "twitter":{
                  "type":"string"
               },
               "website_url":{
                  "type":"string"
               },
               "organization":{
                  "type":"string"
               },
               "last_sign_in_at":{
                  "type":"string"
               },
               "confirmed_at":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "theme_id":{
                  "type":"string"
               },
               "color_scheme_id":{
                  "type":"string"
               },
               "projects_limit":{
                  "type":"string"
               },
               "current_sign_in_at":{
                  "type":"string"
               },
               "identities":{
                  "$ref":"#/components/schemas/Identity"
               },
               "can_create_group":{
                  "type":"string"
               },
               "can_create_project":{
                  "type":"string"
               },
               "two_factor_enabled":{
                  "type":"string"
               },
               "external":{
                  "type":"string"
               }
            },
            "description":"Get the currently authenticated user"
         },
         "Identity":{
            "type":"object",
            "properties":{
               "provider":{
                  "type":"string"
               },
               "extern_uid":{
                  "type":"string"
               }
            }
         },
         "GlobalNotificationSetting":{
            "type":"object",
            "properties":{
               "level":{
                  "type":"string"
               },
               "events":{
                  "type":"string"
               },
               "notification_email":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.12"
         },
         "RunnerDetails":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "active":{
                  "type":"string"
               },
               "is_shared":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "tag_list":{
                  "type":"string"
               },
               "run_untagged":{
                  "type":"string"
               },
               "locked":{
                  "type":"string"
               },
               "version":{
                  "type":"string"
               },
               "revision":{
                  "type":"string"
               },
               "platform":{
                  "type":"string"
               },
               "architecture":{
                  "type":"string"
               },
               "contacted_at":{
                  "type":"string"
               },
               "token":{
                  "type":"string"
               },
               "projects":{
                  "$ref":"#/components/schemas/BasicProjectDetails"
               }
            },
            "description":"Update runner's details"
         },
         "PersonalSnippet":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "title":{
                  "type":"string"
               },
               "file_name":{
                  "type":"string"
               },
               "author":{
                  "$ref":"#/components/schemas/UserBasic"
               },
               "updated_at":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "raw_url":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.15."
         },
         "Hook":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "url":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "push_events":{
                  "type":"string"
               },
               "tag_push_events":{
                  "type":"string"
               },
               "enable_ssl_verification":{
                  "type":"string"
               }
            },
            "description":"Delete a hook"
         },
         "Email":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               }
            },
            "description":"Add new email address to the currently authenticated user"
         },
         "UserWithPrivateToken":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "avatar_url":{
                  "type":"string"
               },
               "web_url":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "is_admin":{
                  "type":"string"
               },
               "bio":{
                  "type":"string"
               },
               "location":{
                  "type":"string"
               },
               "skype":{
                  "type":"string"
               },
               "linkedin":{
                  "type":"string"
               },
               "twitter":{
                  "type":"string"
               },
               "website_url":{
                  "type":"string"
               },
               "organization":{
                  "type":"string"
               },
               "last_sign_in_at":{
                  "type":"string"
               },
               "confirmed_at":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "theme_id":{
                  "type":"string"
               },
               "color_scheme_id":{
                  "type":"string"
               },
               "projects_limit":{
                  "type":"string"
               },
               "current_sign_in_at":{
                  "type":"string"
               },
               "identities":{
                  "$ref":"#/components/schemas/Identity"
               },
               "can_create_group":{
                  "type":"string"
               },
               "can_create_project":{
                  "type":"string"
               },
               "two_factor_enabled":{
                  "type":"string"
               },
               "external":{
                  "type":"string"
               },
               "private_token":{
                  "type":"string"
               }
            },
            "description":"Login to get token"
         },
         "ApplicationSetting":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "default_projects_limit":{
                  "type":"string"
               },
               "signup_enabled":{
                  "type":"string"
               },
               "signin_enabled":{
                  "type":"string"
               },
               "gravatar_enabled":{
                  "type":"string"
               },
               "sign_in_text":{
                  "type":"string"
               },
               "after_sign_up_text":{
                  "type":"string"
               },
               "created_at":{
                  "type":"string"
               },
               "updated_at":{
                  "type":"string"
               },
               "home_page_url":{
                  "type":"string"
               },
               "default_branch_protection":{
                  "type":"string"
               },
               "restricted_visibility_levels":{
                  "type":"string"
               },
               "max_attachment_size":{
                  "type":"string"
               },
               "session_expire_delay":{
                  "type":"string"
               },
               "default_project_visibility":{
                  "type":"string"
               },
               "default_snippet_visibility":{
                  "type":"string"
               },
               "default_group_visibility":{
                  "type":"string"
               },
               "domain_whitelist":{
                  "type":"string"
               },
               "domain_blacklist_enabled":{
                  "type":"string"
               },
               "domain_blacklist":{
                  "type":"string"
               },
               "user_oauth_applications":{
                  "type":"string"
               },
               "after_sign_out_path":{
                  "type":"string"
               },
               "container_registry_token_expire_delay":{
                  "type":"string"
               },
               "repository_storage":{
                  "type":"string"
               },
               "repository_storages":{
                  "type":"string"
               },
               "koding_enabled":{
                  "type":"string"
               },
               "koding_url":{
                  "type":"string"
               },
               "plantuml_enabled":{
                  "type":"string"
               },
               "plantuml_url":{
                  "type":"string"
               }
            },
            "description":"Modify application settings"
         },
         "RepoLicense":{
            "type":"object",
            "properties":{
               "key":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "nickname":{
                  "type":"string"
               },
               "popular":{
                  "type":"string"
               },
               "html_url":{
                  "type":"string"
               },
               "source_url":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "conditions":{
                  "type":"string"
               },
               "permissions":{
                  "type":"string"
               },
               "limitations":{
                  "type":"string"
               },
               "content":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.7."
         },
         "TemplatesList":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
         },
         "Template":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "content":{
                  "type":"string"
               }
            },
            "description":"This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
         }
      }
   }
}