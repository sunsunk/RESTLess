import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2023-04-13T05:51:34.346751Z[Etc/UTC]
 * <br>
 * The generated test suite contains 778 tests
 * <br>
 * Covered targets: 1749
 * <br>
 * Used time: 0h 10m 0s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://10.0.24.1:81/api/v4";
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"should_remove_source_branch\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/ym/merge_requests/607/merge")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/TLaXnjMmKo/repository/files/aktQhx/blame?" + 
                    "ref=DLr&" + 
                    "range=dLaq5qIakpO0NUHU&" + 
                    "range%5Bstart%5D=400&" + 
                    "range%5Bend%5D=747")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Bad Request"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/eM9yyfLJ5OlGKSn/merge_requests/479/approval_state")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/yZp/repository/files/DN/blame?" + 
                    "ref=MY0u&" + 
                    "range=AwPyy6MeIv59bok&" + 
                    "range%5Bstart%5D=175&" + 
                    "range%5Bend%5D=157")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Bad Request"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/DIRe6YC_/merge_requests/248/approval_rules/936")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1GvSisn2R9TwM/deploy_tokens?active=I3UM_LjmrhRibJT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"oVW0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/N_A_nHksLTn9Y/protected_tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Qboy/repository/commits/9bcD2ti4X0/diff")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/FwDY3vWB/integrations/hangouts-chat")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"restrict_to_branch\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/9w7J_/integrations/pivotaltracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/950176339/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/user/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6cH5OtBqP3w8xng/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/broadcast_messages/179")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"o5jagoWJjQF\", " + 
                    " \"expires_at\": \"2077-08-22\", " + 
                    " \"scopes\": [ " + 
                    " \"_rANglZ\", " + 
                    " \"L9pTmoH\", " + 
                    " \"GhYvn500YHJ\", " + 
                    " \"3L6VYsT0yLmZUS\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/users/215480118/personal_access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ZyV0gRfLXOF/integrations/ewm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/937/followers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/FNrULb/integrations/mattermost-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/5zLlbs5/ldap_group_links?provider=1qBiMIQkDBphsD1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/GRQzDiH/pipeline_schedules/926/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"CE6DEfm4Cm\", " + 
                    " \"expires_at\": \"2003-02-12\", " + 
                    " \"scopes\": [ " + 
                    " \"oesTlk\", " + 
                    " \"BhvU9oWv5\", " + 
                    " \"JsQ3LOg_tixNekY\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/users/482/impersonation_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/LDVAVIthKexfmjK/integrations/slack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Xhvbt/merge_requests/882/versions/927")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/YkbfExmJ6oNaKer/issues/118/discussions/734/notes/-1981905431")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/6_fECuo/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"note_id\": 681, " + 
                    " \"body\": \"41\", " + 
                    " \"created_at\": \"L39yr52\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/4/commits/494/discussions/41/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/WvD_vVP1/debian_distributions/ISyoT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/R175_tmPg4xva5s/archive")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/UJOwyufPoUu0/badges?name=lf117")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"job_variables_attributes\": [ " + 
                    " \"W0crNLlpN\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/x1yHxZHOK6LJNQ/jobs/389/play")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/Uz9M795z/debian_distributions/960")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/LhebfI/merge_requests/101/cancel_merge_when_pipeline_succeeds")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/Nai1mHGAXkZ0/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"variable_type\": \"p0IP1HQ\", " + 
                    " \"value\": \"leOtT\", " + 
                    " \"environment_scope\": \"N1RvwG6Sopk8Ems\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/CJxyzxGX/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/FhCca0NEZuqm/merge_requests/1290024813/notes/4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QfTrFyX2bkDZ/repository/compare?" + 
                    "from=NP2CklI0&" + 
                    "to=SSLjh5u5a9N0_vyj&" + 
                    "from_project_id=388")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/markdown")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/kZRsXxrrZzY/registry/repositories")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/q6Ym_wCHvoH9uQG/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3MPIJfGr2eqd/deploy_tokens/478")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/E/fork/wL8E")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/26BAu/labels/IEmkrtvl9OvmUqyV/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/alD/debian_distributions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/15uITk69QBPEY/issues/489/resource_label_events/236")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/DjCtrGHljc/integrations/redmine")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/p0xY6rO6/share/56")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/6tc/merge_requests/426/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"ref\": \"Xu0Hat\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/7gn04OcB/pipeline")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/SYsxrF/milestones")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/McrUJp/repository/blobs/VhafTSAhaoT/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/379/reject")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/FmdlsmdzCQMDK/cluster_agents/YMOMWVOU/tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_53() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/0P1Bk2tntaXGmE/epics/mzhFt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_54() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/xtqA/commits/176/discussions/-425150067/notes/231")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_55() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/TxBjUN/members/all")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_56() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/5pgzP/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_57() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/LESU9Z5/protected_tags/jwh8SWlJjRy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_58() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/58PpJAtv/labels/Lw/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_59() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/R_ZEOdTpVwGf/merge_requests/136/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_60() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippet_repository_storage_moves/138467776")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_61() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/184/memberships")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_62() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HX_2lA/protected_branches/stHxCiF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_63() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/PIwO0hO9Fa9Fs/repository/branches?search=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_64() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/project_repository_storage_moves/600")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_65() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/Z/issues/325/move")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_66() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/qpQw7q34Zpaw/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_67() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/runners/422")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_68() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/keys/UUTeaFhqfE")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_69() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/user/emails/663")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_70() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/TwxEsi4is/pipeline_schedules/749/play")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_71() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/pages/domains")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_72() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/topics/518")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_73() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mIMhCrBkqC/badges/render?" + 
                    "link_url=P1Un&" + 
                    "image_url=lGWRAVOHlw91G")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_74() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/fRV/integrations/mattermost-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_75() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Dr6y2ux1IFWPdQ/debian_distributions/721/key.asc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_76() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/ci/lint")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_77() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .put(baseUrlOfSut + "/api/v4/projects/vx8zQ/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_78() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/661/files/yfOeeWTZb9x/wN5/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_79() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/nTD/integrations/custom-issue-tracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_80() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"email\": \"i6e\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/users/i6e/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_81() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/HPJEYAPafA/provisioned_users?" + 
                    "username=pZQ&" + 
                    "active=HGEi02")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_82() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/VswRG/pipeline_schedules/616/variables/Rjbyu")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_83() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/kcJ/badges/411")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_84() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/4sV/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_85() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/N7F/integrations/webex-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_86() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/user/keys/373")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_87() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/UBc/feature_flags_user_lists/8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_88() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/_9Hy5CZo_gED6Xds/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_89() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"UwhVv_g2rCMxxYlt\", " + 
                    " \"color\": \"uOAqbUMrjkea_\", " + 
                    " \"description\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/ap/labels")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_90() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/Hi03/issues/476/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_91() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/eTfwz/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_92() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/212/events?" + 
                    "action=PpAq&" + 
                    "before=v4V9P0Qe&" + 
                    "after=fC49pEV_b4M1&" + 
                    "sort=EerbaCQ&" + 
                    "page=953&" + 
                    "per_page=930")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_93() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/wsoefT/repository/changelog?" + 
                    "version=DI6Ah9Ir6&" + 
                    "date=Wq5AOHhxa_dV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_94() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/45iZ0MXPpO/ci/lint")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_95() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/IY/variables/6E")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_96() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/l7DRUKsTR/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_97() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/hIr/cluster_agents")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_98() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/myGMBlptUCqcJ/pipelines/309/bridges?scope=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_99() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/vz3/integrations/confluence")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_100() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Yt/issues/263/discussions/19")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_101() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/personal_access_tokens?user_id=kRJcY0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_102() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/19pRn8Mh7TRF/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_103() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/v_cS9x/protected_environments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_104() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/runners?token=o2DmANVrhhhBOjZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_105() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/groups/kZ/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_106() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/tkAIoq/clusters/user")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_107() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/job/allowed_agents")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_108() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users?two_factor=pETJF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_109() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/mp9m_sGs7h54ZQ/protected_environments/LVUuQThcM_uym")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_110() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/5AMwK0OeouO2J/hooks/29")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_111() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/3/issues/891/discussions/756/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_112() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Sx93/pending_members")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_113() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/issues_count?group_path=uez_VwQPZ5n9Yc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_114() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/mwZxrlwE/invitations?" + 
                    "per_page=130&" + 
                    "query=FNbClmt07k")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_115() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/R0npXD1/protected_tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_116() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/RPcT_WZSmM1Nw/invitations/QWWa")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_117() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/GPhk2WQdd/billable_members/989/memberships")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_118() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/B_YUEf8xX/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_119() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/4Rm74eBrC/variables/MwVVW3lY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_120() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/todos/105/mark_as_done")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_121() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/groups/mvLWeDvc2_P/epics/932307688/notes/908")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_122() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/16NbS4Y/integrations/datadog")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_123() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/rRWopucJFGG/mirror/pull")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_124() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/B36oHZWt6/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_125() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/LyEf60/repository/commits/FouccVS/refs?type=W3PDq8Sf9KEoq2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_126() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/wXC74pksGClp5q0/repository/merge_base?refs=wF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_127() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HZ76B/repository/commits/mLiXExyn1uZF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_128() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/w1ro/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_129() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/xNZ7RUHphuDoHGvY/billable_members/620")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_130() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mbgKgwgDC_4bmMx/issues/342/notes/537/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_131() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/ck2OEd/integrations/microsoft-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_132() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/rUu1/members/818?skip_subresources=j4D3a1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_133() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"destination_storage_name\": \"Hst\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/721/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_134() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mRXn/registry/repositories/955/tags/tbWOQk")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_135() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/d5DPURD_ZRvZ/debian_distributions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_136() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/personal_access_tokens/xnJNb_wgO")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_137() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/j/integrations/bugzilla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_138() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/T1inQGE3/deploy_keys/275")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_139() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/0cKf72/integrations/asana")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_140() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/kJBPyEzXoU4z/registry/repositories")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_141() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/LXgCA6AHcVemNIV/protected_branches?search=eaUPcCtR")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_142() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/OE4/labels?" + 
                    "include_descendant_groups=ghsxwJ&" + 
                    "only_group_labels=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_143() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/admin/clusters/add")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_144() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"new_name\": \"S3R1syvMQEq7\", " + 
                    " \"description\": \"bPYRp\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/YJFwbAD/labels/YCAhn5z6HAgTQv6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_145() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/o0n32o2EKS/integrations/jira")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_146() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/WNWIl/triggers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_147() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/625/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_148() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"google_iap_audience_client_id\": \"6UjzAwaL\", " + 
                    " \"google_iap_service_account_json\": \"BAIuzLJyY5ptls\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/o4xKCjNexp5/integrations/prometheus")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_149() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"issues_url\": \"YbjnX78\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/jqvFa1K87t_ld/integrations/ewm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_150() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/job_stats")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_151() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/NdG36/boards/51")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_152() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/emails/775")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_153() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/VbXdKP/repository/blobs/dzW2tUt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_154() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"codename\": \"CGDIBMpx7x8YvN6\", " + 
                    " \"label\": \"GrjFBj9ziJ5tgKGE\", " + 
                    " \"description\": \"JOuIKWRrtDabwXZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/e/debian_distributions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_155() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/topics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_156() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"kszpp94i1DYP\", " + 
                    " \"version\": \"K\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/AC21PXOYcg/feature_flags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_157() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"approval_status\": \"wCrdRVvoxTp\" " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v4/projects/AbILjiV/managed_licenses/vHvjxr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_158() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"mock_service_url\": \"cvEkINw_Q4mrG\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/EdFm5jbeiQkTk/integrations/mock-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_159() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/2dEiew5jVFJn/issues/229/metric_images/570")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_160() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/U270q9tNxgQqK71g/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_161() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/Un8OEaOCK4tW/unarchive")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_162() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/events?" + 
                    "before=3rwpJRckYbNNS&" + 
                    "after=CL3QCEAKf7W&" + 
                    "sort=oHJ76wRA5IlBWxx")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_163() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/KPhMcIdai8IWU9/feature_flags_user_lists?search=95Gj2KKLf")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_164() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"add_labels\": \"OPWa1J6z\", " + 
                    " \"assignee_ids\": [ " + 
                    " 863, " + 
                    " 808, " + 
                    " 779, " + 
                    " 235 " + 
                    " ], " + 
                    " \"confidential\": true, " + 
                    " \"due_date\": \"iFR5Z\", " + 
                    " \"issue_type\": \"h\", " + 
                    " \"labels\": \"b\", " + 
                    " \"milestone_id\": 704, " + 
                    " \"remove_labels\": \"RiCI_gk5H3X2o\", " + 
                    " \"updated_at\": \"pJ75JzxUtvx\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/h6aK7ow7oddDY61/issues/864")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_165() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/3Zt/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_166() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/security/vulnerability_exports/_qbK6IGqgMY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_167() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/C62UevkRs36WIBi/integrations/jenkins")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_168() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/69O1/integrations/pivotaltracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_169() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/wdJB_rlU9/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_170() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/projects/g7L1CB2/integrations/redmine")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_171() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ck907nNIBTxel5H/integrations/slack-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_172() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ITDFmQI5z9/issues/100/notes/19/award_emoji/271")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_173() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"description\": \"xeCKpjOQf7Zf_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/AJR4dGvuzn0X/triggers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_174() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"auto_ssl_enabled\": true, " + 
                    " \"certificate\": \"Rxz4CPrDkFUjHT\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/Ffv/pages/domains/Osfy2yKBBkp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_175() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/u/epics/336/epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_176() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/7VK/triggers/787")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_177() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/95")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_178() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/XsZRPb4nmXDXW29o/freeze_periods/M6twg3cBIFM6gb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_179() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/3/boards/53")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_180() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/w/repository/branches/Fn6LPXyrVbS3ra1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_181() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/XtjRvEmT/hooks/195")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_182() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/622/gpg_keys/398")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_183() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/projects/T9SEPJX3Ha5Z/merge_requests/954/discussions/962")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_184() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Yr3EkcSbK4Qu/pipelines/873/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_185() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/oVrivlnd_tDw/jobs/252/erase")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_186() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/O4k/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_187() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pfhV2_xov/integrations/youtrack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_188() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_189() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/gTxYeCDmFKJMk/integrations/campfire")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_190() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/ioGHmY5qHQFbAvE/clusters/980")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_191() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/tW5Xz7/integrations/ewm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_192() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"default_branch_protection\": 635, " + 
                    " \"description\": \"jSKqDUVsR9\", " + 
                    " \"emails_disabled\": true, " + 
                    " \"lfs_enabled\": true, " + 
                    " \"mentions_disabled\": true, " + 
                    " \"project_creation_level\": \"zwK6q\", " + 
                    " \"share_with_group_lock\": true, " + 
                    " \"visibility\": \"caDe4T6\", " + 
                    " \"extra_shared_runners_minutes_limit\": 439993471, " + 
                    " \"file_template_project_id\": 845, " + 
                    " \"prevent_forking_outside_group\": true, " + 
                    " \"shared_runners_minutes_limit\": 193 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/265")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_193() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/00iD1Gfi55pXx/releases/Rg")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_194() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/onMp7On8AMD/merge_requests/496?include_rebase_in_progress=sg")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_195() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/lSi9E84Z7HPe/epics/456/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_196() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/VsIQNUKwlwvnpHn/approvals")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_197() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/Weh7IMl1iOred5/invitations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_198() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/features/nheFsDnQL7YuUe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_199() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/OmSQo0Wgto0zVSdo/snippets/32")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_200() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HCiUQlt2FxlUYW9/pipelines/292/jobs?" + 
                    "scope=bgf_&" + 
                    "include_retried=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_201() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"133\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/t_VfifwoL6eprFgM/snippets/133/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_202() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/x89IEXq/starrers?search=n_JaLeuWf12rmq1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_203() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/NmoK9zryydD/merge_requests/710/approval_rules/801")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_204() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/hooks/320")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_205() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/admin/ci/variables/V")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_206() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/issues/448")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_207() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/330/keys/178")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_208() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/iRKkUMlfYe1C3/merge_requests/254/commits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_209() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"enable_ssl_verification\": true, " + 
                    " \"username\": \"ztzuBC6Fvpe\", " + 
                    " \"push_events\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/yIBDDOFrAbh/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_210() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/kCAH/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_211() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pFeLfNqhhv/badges/116")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_212() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/user/207")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_213() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ykwUAS0Qtg7Ld/merge_requests/377/participants")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_214() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .post(baseUrlOfSut + "/api/v4/todos/mark_as_done")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_215() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/users")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_216() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/7dOzn/releases/raEG6GBxZ/assets/links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_217() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/sntmkw0vw_Afp91/merge_requests/605/unapprove")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_218() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/w9Fk20/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_219() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Sq66/protected_branches/Dt9FTM88")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_220() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/kc/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_221() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/YAtVL/merge_requests/181/resource_label_events/21")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_222() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/XHMyVF2/merge_requests/947/approvals")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_223() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/queue_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_224() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/application/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_225() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/zq2nY5/integrations/youtrack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_226() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/AZ8FBcZrpTWSBoU3/milestones/342/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_227() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/s8hu9WE4fiuhHt9/statuses/D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_228() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"add_labels\": \"ISQ\", " + 
                    " \"confidential\": false, " + 
                    " \"description\": \"Y\", " + 
                    " \"labels\": \"Ur9C8GOXS\", " + 
                    " \"parent_id\": \"AojKEch1CzGYhFvg\", " + 
                    " \"remove_labels\": \"Vml2696Kd\", " + 
                    " \"start_date_fixed\": \"ln5N6w\", " + 
                    " \"title\": \"Ap1roAx5OfV\", " + 
                    " \"updated_at\": \"4_GmyO\", " + 
                    " \"color\": \"Vr9elBUz4N\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/9nkfmZ6rxCTJlzV/epics/PCK3ndaNTXc5Dqpy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_229() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/qzJ9K259RMeo/labels/OKNCiMaiy/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_230() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/pjjFvKFgr/epics/998/todo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_231() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/namespaces/3akP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_232() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/41gWtZLiF7XxGN4X/labels/WSX2N4Npt1lns?include_descendant_groups=vQMSP0hirJiEGglH")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_233() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/DD8iu8c/ldap_group_links/TSkatICpkT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_234() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/D8/milestones")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_235() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/eMdKjc25L357P20E/deploy_tokens/235")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_236() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ymw9q4qIh_XN/members?query=fxRtFHLSEp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_237() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/vH9MJ/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_238() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7vuwfV1vq2Rt6YoI/vulnerabilities")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_239() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Mu/ldap_group_links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_240() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"approvals_required\": 404, " + 
                    " \"group_ids\": [ " + 
                    " \"fXyi\", " + 
                    " \"3RIdanF8\", " + 
                    " \"lulYylnV3AxK0Rf\", " + 
                    " \"Ess\", " + 
                    " \"y_6xNbe\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/EsSodbq6R/merge_requests/126/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_241() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"\", " + 
                    " \"file_name\": \"J1o0SvqS1Ej\", " + 
                    " \"content\": \"nS\", " + 
                    " \"files:action\": \"EurwTXTBw47jAq_\", " + 
                    " \"files:previous_path\": \"yltDO6uh\", " + 
                    " \"files:content\": \"ZOxAoyk\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/bwnhO/snippets/627")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_242() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/GmLKnMYW2/events?" + 
                    "target_type=kpMGhZcRk&" + 
                    "before=j2dqMDj")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_243() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/j9XzP81nXwi/epics/291/epics/148")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_244() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/fgscBlfAgUckxj/merge_requests/-1511027527/reset_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_245() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/2n05NDvUP2GuNz/releases/oxcva5pmqegeq3p/assets/links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_246() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"notification_email\": \"7wYWAf5qpHR\", " + 
                    " \"reassign_issue\": false, " + 
                    " \"reopen_merge_request\": true, " + 
                    " \"failed_pipeline\": true, " + 
                    " \"success_pipeline\": true, " + 
                    " \"moved_project\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/notification_settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_247() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/4Z2PbWMv11/jobs?scope=L5m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_248() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branch_name_regex\": \"kfRYnlYEC\", " + 
                    " \"commit_message_negative_regex\": \"BzJNRX0DA8l\", " + 
                    " \"file_name_regex\": \"R9kJybT\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/aTKyiOK67/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_249() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/5hQ9t2vB/integrations/hangouts-chat")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_250() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/212/user_agent_detail")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_251() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/Vbl6E163Za/members/approve_all")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_252() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/58QBJmq2wuWcN/avatar")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_253() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/features")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_254() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/696/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_255() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/8Q/search?" + 
                    "scope=qY5zaqbH&" + 
                    "search=lS")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_256() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/1787483916/keys/1804401688")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_257() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/keys/898")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_258() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/zw1d4jC/integrations/jira")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_259() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/projects/BoO8KZMk4sDjuKCc/releases/EV6JLZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_260() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/5cEN/badges/184")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_261() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/UJ8ZcgrPEVc1iU/forks?" + 
                    "archived=Gw&" + 
                    "membership=_3o__2w6&" + 
                    "order_by=s6367LvrJKLyiSzQ&" + 
                    "owned=4nENK&" + 
                    "search=2zK1yBhS&" + 
                    "sort=YlD&" + 
                    "statistics=_lAB3IxFQL1lnI&" + 
                    "with_issues_enabled=X_1_uEfqhmWuLN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_262() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/job")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_263() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/project_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_264() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/wWaBUMnm1flYKu3q/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_265() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ZeBSob3gFvE/wikis")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_266() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/V/descendant_groups?" + 
                    "skip_groups=qdJ5QWhxX6A_1M7&" + 
                    "all_available=ZR_&" + 
                    "order_by=f&" + 
                    "sort=M3z&" + 
                    "owned=QlfuK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_267() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pokokdqVsp/environments/review_apps?limit=243")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_268() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/pxbA/integrations/emails-on-push")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_269() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1msqp6ZKBUdb/debian_distributions/766")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_270() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/b2PhRw/issues/-1102557512/notes/96/award_emoji/935")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_271() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/NMGHb/repository/commits/RvbBSp3f/statuses?" + 
                    "stage=Xn3qlvTWL&" + 
                    "all=QbjrG7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_272() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/FEr/restore")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_273() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"assignee_id\": 412, " + 
                    " \"confidential\": true, " + 
                    " \"created_at\": \"dTbr\", " + 
                    " \"epic_id\": 289, " + 
                    " \"iid\": \"hzuPytkQnJ7tjoRL\", " + 
                    " \"issue_type\": \"\", " + 
                    " \"milestone_id\": 228, " + 
                    " \"title\": \"C9q9UPpj\", " + 
                    " \"weight\": 658 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/5fwYn16dv/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_274() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/_5kU4rDRdnH/milestones/547")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_275() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/2mXL7m7s/repository/tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_276() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/todos?" + 
                    "action=EaShyLi&" + 
                    "author_id=792&" + 
                    "state=elhf8B5gdLt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_277() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/MPaZCqrJU4FC/integrations/drone-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_278() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/gfh1eH/star")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_279() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/3mLPvETbVlb/labels/Pmv")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_280() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys/27")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_281() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Kf/managed_licenses")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_282() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/LKw9305fgVJH1b/housekeeping")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_283() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/dMkk7xzAW9ng/members/310/override")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_284() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/OKhfKeRBx9C/registry/repositories/-1899882419")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_285() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/features/definitions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_286() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/TFDv/epics?" + 
                    "author_id=519&" + 
                    "author_username=ePqTegBLWbMDGF&" + 
                    "labels=r7fYtUyihYLlW5b&" + 
                    "order_by=RQlg&" + 
                    "sort=VlcC36xohxU3mdP&" + 
                    "search=gzxk7t&" + 
                    "created_after=YwLJ&" + 
                    "include_ancestor_groups=LCtMRUd1SW5&" + 
                    "include_descendant_groups=R94wtIsxq1s_&" + 
                    "not=C8jr1jJ524OMSMV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_287() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/2dB3cQ68/epics/131/resource_label_events/432")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_288() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/application/plan_limits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_289() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/v2/_catalog")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_290() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/970/custom_attributes/gJd0HSU8r")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_291() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Bely5put6Gfngz9/epics/457/related_epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_292() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/443/jobs?" + 
                    "order_by=amQHPDrh&" + 
                    "sort=MVo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_293() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"avatar\": \"74fvwK\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/LZoW7v")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_294() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/bkrb/access_tokens/k0HGQg1tgAW")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_295() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/NO4jBcvPc9Oi/snippets/940/notes/1691296962")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_296() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/AX/packages/276")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_297() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/227")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_298() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"cU8Qo4OqWLQR5h_V\", " + 
                    " \"path\": \"g9ZvgxUY\", " + 
                    " \"auto_devops_enabled\": true, " + 
                    " \"default_branch_protection\": -1468929044, " + 
                    " \"description\": \"mPCGbi\", " + 
                    " \"parent_id\": 436, " + 
                    " \"project_creation_level\": \"JgtizATcel\", " + 
                    " \"request_access_enabled\": false, " + 
                    " \"share_with_group_lock\": true, " + 
                    " \"two_factor_grace_period\": 231, " + 
                    " \"visibility\": \"OZsjWASNL31hpG\", " + 
                    " \"membership_lock\": false, " + 
                    " \"extra_shared_runners_minutes_limit\": 711236102 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_299() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/o6iOIU2Mwd4TQSm/deploy_keys/447")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_300() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/X3/access_tokens/nWjBZQpOgQ6HmiSm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_301() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"deny_delete_tag\": false, " + 
                    " \"prevent_secrets\": false, " + 
                    " \"commit_message_negative_regex\": \"v8sN1JVJyh4\", " + 
                    " \"branch_name_regex\": \"J1\", " + 
                    " \"author_email_regex\": \"2gAdpoSM8kU0Tmy\", " + 
                    " \"file_name_regex\": \"HenZV_ell4Bn\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/tZbPJxcLBb1vPzs3/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_302() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"new_issue_url\": \"Gkaa7E\", " + 
                    " \"issues_url\": \"1rh2jq\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/dn0y/integrations/bugzilla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_303() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/GXWfhZYSmOK5yzx/error_tracking/client_keys/570168912")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_304() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"0bZB_JjEheY\", " + 
                    " \"color\": \"g8ICCj\", " + 
                    " \"confidential\": true, " + 
                    " \"start_date_is_fixed\": true, " + 
                    " \"due_date_is_fixed\": true, " + 
                    " \"due_date_fixed\": \"52\", " + 
                    " \"parent_id\": \"TpbiCFOHE\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/vS2j9AHWlAT_42/epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_305() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/5gwmN/packages?" + 
                    "order_by=fnTLEXvNFGFvb&" + 
                    "package_type=j3Hv&" + 
                    "package_name=Tx7J&" + 
                    "include_versionless=V4cWV49w&" + 
                    "status=SKhwN2hBeUE")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_306() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/598/identities/Ruf0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_307() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/PJVatH/issues/577/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_308() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HFXnbti/snippets/N8oqwkNvhM/user_agent_detail")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_309() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/oiqKJKQEdeyw/integrations/microsoft-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_310() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"status\": \"_Md\", " + 
                    " \"comment\": \"0bULz3Ox\", " + 
                    " \"represented_as\": \"xZxUMl097APYT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/lJlHtn_4/deployments/616/approval")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_311() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/fu4ZI4IYyV/integrations/custom-issue-tracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_312() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/import")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_313() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/J1pe/boards/846/lists/50")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_314() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/group_repository_storage_moves/51")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_315() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"issues_url\": \"0gFjgeOv\", " + 
                    " \"project_url\": \"IpIl4LaBeWAe5l\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/QgAFoVdhbtC/integrations/youtrack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_316() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ZAOqAxUn/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_317() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/D7O/merge_requests/894/discussions/246/notes/639")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_318() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_319() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/U6e9vqpr2fb4ZQv/integrations/datadog")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_320() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/dTGTp37Z/epics/991/resource_label_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_321() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/yhuIspeDrkYYFB5f/snippets/744/files/GEQ/3own73NMlCVCTU/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_322() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/vRnQ7ugJcfMm7D98/cluster_agents/841")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_323() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"mSm9p\": \"O3VC29W\", " + 
                    " \"EZvvTS7O3CmiR\": \"Om1xBhTKnF79GZNv\", " + 
                    " \"z0UvUJPmKX5cM\": \"Jnengv\", " + 
                    " \"LRz\": \"bYGd\", " + 
                    " \"Si4kjE5Jqz2v\": \"dBV\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/user/preferences")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_324() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .post(baseUrlOfSut + "/api/v4/groups/7Kc/projects/m1rcYqKMRdBeg")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_325() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/admin/clusters/450")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_326() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"416\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/xMn/merge_requests/728/discussions/702/notes/416")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_327() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/TQLTr/milestones?" + 
                    "iids%5B%5D=VA&" + 
                    "state=DvR_v&" + 
                    "include_parent_milestones=mnI9oLP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_328() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/W/integrations/webex-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_329() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QMMN2pOcS/export/download")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_330() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/l3D5OU/remote_mirrors/AurtGwiByUuvm4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_331() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/group_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_332() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/bB/export")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_333() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/VCCksikQGRvnh0zC/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_334() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/sMqFu/merge_requests?" + 
                    "order_by=rnAdYodLUmDEny&" + 
                    "sort=et&" + 
                    "milestone=odwpaIcsSU&" + 
                    "view=XMSpPJic_UCN&" + 
                    "with_labels_details=JGZWIuGWkDoMOiS4&" + 
                    "with_merge_status_recheck=ma0AhDSCic2qtG&" + 
                    "updated_after=rkJVVs0DmAx4QtSU&" + 
                    "updated_before=wmYJ5oNnqwsFe&" + 
                    "assignee_id=185&" + 
                    "approved_by_ids=SOZGvlks&" + 
                    "target_branch=2OMfKgoU4VY7P&" + 
                    "search=KvUvFRjHWWC2E&" + 
                    "non_archived=&" + 
                    "not=pEEjCYi6GsIIhjFB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_335() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_336() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/issues?" + 
                    "author_id=15&" + 
                    "author_username=OB_mkhgtTqNlr&" + 
                    "confidential=W09Vs&" + 
                    "created_after=&" + 
                    "created_before=&" + 
                    "due_date=PDMvbH9mogzX&" + 
                    "in=cLLbj7&" + 
                    "labels=Gcbv&" + 
                    "milestone=Kor3xa0p2s9R&" + 
                    "non_archived=xP&" + 
                    "not=t&" + 
                    "scope=Vrm4&" + 
                    "sort=Pq2h11wLVsi567&" + 
                    "state=Pri2yGIS2xMFM&" + 
                    "updated_after=vN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_337() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/438/impersonation_tokens/636")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_338() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/vulnerabilities/W7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_339() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/9ZV0/integrations/pushover")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_340() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"758\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/w_Z7tL_Lgt/issues/758/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_341() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/lNx6ceKHgX/issues/764/award_emoji/807")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_342() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/LWp/labels/kaiBWPs2ED1M6V/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_343() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"SX3r5ofTXvo0p3\", " + 
                    " \"push_access_level\": 394, " + 
                    " \"allowed_to_push\": [], " + 
                    " \"allowed_to_unprotect\": [ " + 
                    " \"_2CF93bPexM03\" " + 
                    " ], " + 
                    " \"code_owner_approval_required\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/W8Iw_uAd/protected_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_344() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/users/238/custom_attributes/ckCpw6hK7V76IY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_345() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/849/emails/676")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/projects/qFnGZ648ypBJBkT/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_346() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/cWlagtCxAunn/starred_projects?" + 
                    "search=pe&" + 
                    "simple=_YfQSNo&" + 
                    "sort=oU7sBtW5Jc7g&" + 
                    "starred=yf9uG7&" + 
                    "statistics=Q0vhqr0_ZUPxHf&" + 
                    "visibility=tG9ELxs0SaMHggW3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/ebiS/restore")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_347() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"destination_storage_name\": \"fX6Fl\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/snippets/237/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/application/statistics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_348() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/uPBLQvM7dFXOa/epics/tPkYs3mQ00q/issues/9oubR2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/lFz7mk6ogSC/cluster_agents/971/tokens/855")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_349() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/promMAiRnb/repository/contributors?sort=ivgpqSx6CvQGT2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/V/variables/ixJBmC")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_350() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/M1821bM3nDXJkxwx/repository/archive%5B.format%5D?sha=Jmme_WiDBb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/GvY/pipelines/230/cancel")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_351() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/PmRviiS/mirror/pull")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/76WrO/runners/reset_registration_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_352() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"approvals_required\": 685 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/l0C03N4be/merge_requests/889/approvals")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/eoGkc/issues?" + 
                    "assignee_username=r5oh37D&" + 
                    "author_id=970&" + 
                    "author_username=XnA1QrbAOBz&" + 
                    "confidential=5itAFRVDz2k&" + 
                    "created_before=1V9O9z&" + 
                    "epic_id=622&" + 
                    "issue_type=&" + 
                    "my_reaction_emoji=MaEjEwHbvltY0&" + 
                    "not=eUq1aCP_djVPz1&" + 
                    "order_by=tXSyK_8VkbjRo_B&" + 
                    "search=WzZpToXfl&" + 
                    "weight=46&" + 
                    "with_labels_details=vu8FCXLe5l")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_353() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/0b9uSJqmWbvcnQ7/integrations/bamboo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"value\": \"z\", " + 
                    " \"namespace\": \"N2pLL3vJph\", " + 
                    " \"project\": \"5NGqc5xxQL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/features/t16jL9tTZH")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_354() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/rMsbGgnHWaqf/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/kRFVOo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_355() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Tsx915wOs9fQ/templates/k")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_356() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/lbdqgbS2/pages/domains/VD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/uiGb6u2yRzvYjnL/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_357() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/nClqou/merge_requests/507/time_stats")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/GOjXb/epics/8/issues/JCvPlJR8vyMwP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_358() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/yj/integrations/ewm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/merge_requests?" + 
                    "state=k3NyFljyMTrs&" + 
                    "sort=5&" + 
                    "with_merge_status_recheck=qCBIBEKf&" + 
                    "created_before=&" + 
                    "updated_after=&" + 
                    "author_id=766&" + 
                    "assignee_id=664&" + 
                    "approver_ids=Kb70vHI&" + 
                    "my_reaction_emoji=1vnUzVN&" + 
                    "search=k2CKa_TbwvcWrn&" + 
                    "wip=4Ucg8FencL&" + 
                    "environment=ZLhZx&" + 
                    "deployed_before=7mVpg&" + 
                    "deployed_after=O")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_359() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/628/unblock")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/usage_data/queries")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_360() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"destination_storage_name\": \"YR\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/823/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/r/jobs")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_361() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Rt/freeze_periods")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/445/followers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_362() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/G4mhnYxmV/milestones/927/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/SJs/integrations/jenkins")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_363() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/gtubxc5QjaxM0T8T/integrations/unify-circuit")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/hgpaSGpu9PLCPom/epics/427/discussions/54/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_364() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/O5SpjxabnIa/approvals")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/PHu/merge_requests/25/approval_rules/4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_365() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/760/reject")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/DY/metrics/user_starred_dashboards?dashboard_path=1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_366() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/52Ziy/repository/commits/Wbk4lqCxomk5qoy7/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/DJV9c4_KjHn/repository/commits/Kc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_367() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branch\": \"AJgXmNE\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/sdsVXEHOvnIw/repository/commits/vXNPLPP1h_I0MnnR/cherry_pick")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/9L/epics/EbW/issues/kWij1uERewrz7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_368() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Ju6pkBWDKP/milestones/357")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6dDjzBx/repository/commits/w8ccwsLI2FYJv8i/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_369() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/5/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/rb3GZVb/remote_mirrors/x_eVB4vjE9uIAT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_370() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/sfM7JiscAD/wikis/EEYmO9Zix8LO3mF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/PNYeIxaKw2cK/snippets/285/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_371() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/i_WYfbY4wx3UW6N/storage")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/hooks/668")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_372() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"P3fee\", " + 
                    " \"color\": \"z\", " + 
                    " \"description\": \"kSoFLsedNRd\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/aY4UfV7SCCUyawo/labels")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .post(baseUrlOfSut + "/api/v4/groups/NU/members/approve_all")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_373() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/giu5miJKYp/export/download")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/G8L65/repository/files/Saaai/raw?ref=9s3GABUyh")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_374() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/1p8CjLClQbu/ldap_group_links/ST3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"1n\", " + 
                    " \"approvals_required\": 226, " + 
                    " \"group_ids\": [] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/hV8q0rG9NA/merge_requests/167/approval_rules/175")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_375() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/runners/reset_registration_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v4/groups/585/transfer")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_376() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/545/keys/511")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"MlW0kpSDIo3n\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/MxrsJGjpGhla/integrations/github")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_377() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/i3/registry/repositories/1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/i3EIOwyd/resolve")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_378() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/R_ary7oy/boards/552")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/3c/milestones/27")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_379() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/bVx/epics/2077624217/epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/4/debian_distributions/398")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_380() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/JF0Yt9nYqU/milestones/2064249107")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/hR72H4IIu/epics/618/resource_label_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_381() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/RNKRlVBRyw/merge_requests/792/notes/980")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/geo_nodes/803")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_382() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/all?" + 
                    "scope=isc20MWYDyndU6H4&" + 
                    "status=&" + 
                    "paused=KP0R0ZB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/issues?" + 
                    "assignee_id=731&" + 
                    "author_username=cC1qM_1LuAT0x8P&" + 
                    "created_after=Rug53noKWJ8BxwyS&" + 
                    "created_before=9m5n0O74ET_j6&" + 
                    "in=YcAU3AaNF&" + 
                    "issue_type=wcTIamiYhxRqOEj&" + 
                    "iteration_id=512&" + 
                    "milestone=q&" + 
                    "milestone_id=9e&" + 
                    "my_reaction_emoji=UpJb39cWd8CaYmN&" + 
                    "updated_after=PjzWYdhL&" + 
                    "updated_before=ump7D8OSCdG2EJV&" + 
                    "with_labels_details=mskLonyMDcP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_383() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/cVK96WjyBpFhpaEe/packages?" + 
                    "exclude_subgroups=sX&" + 
                    "order_by=SyWqs&" + 
                    "sort=6BaaX_C714MC")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/CJ55hCQ/ldap_group_links/mXidA4I638obA3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_384() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/C/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/GN6kwPU/billable_members?" + 
                    "search=E8UDklPF&" + 
                    "sort=KBeUXAqZ4y")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_385() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/users/Q1W1VyEsBzG")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/wcgQx/dismiss")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_386() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/zPQm2jXMar/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/Ma6V7xkDfi/integrations/irker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_387() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .put(baseUrlOfSut + "/api/v4/projects/bJOad2Hk3mpciD/labels/VOSIZKgA9/promote")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/svr4ZR3086w2sky/epics/J1t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_388() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/EboMDqsxEYIFJxS/repository/contributors")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Yh96i7ATU42j/labels?" + 
                    "with_counts=vt7D&" + 
                    "include_ancestor_groups=Sd")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_389() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/users/804/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/tIxcxenyFhV5p_/integrations/mattermost-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_390() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/iN08DLPvzZ_2IUh/feature_flags?scope=tW9N6yxAyGJAZ0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/NjA5wpsAM/integrations/bamboo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_391() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/B9ZGNKnKdspK/integrations/youtrack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/z5/jobs/413/trace")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_392() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/dslpzLP9/boards/466")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ZhkNag2q/invitations?per_page=959")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_393() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/3/labels/5/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners?" + 
                    "scope=6tk3hiuhl_FLAj&" + 
                    "type=p&" + 
                    "status=X&" + 
                    "paused=Jy_iw12&" + 
                    "tag_list=a1gNOd8La")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_394() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1HK/repository/tags/2Y_GP7PZ693CJsi3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/GXW1TuW/repository/commits/B/comments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_395() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/vswx4fISNa/snippets/377/discussions/918/notes/466")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/maKZT/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_396() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/9/merge_requests/758/discussions/141/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"937\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/kmGU/epics/47/discussions/711/notes/937")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_397() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/j8Q0HSZUX/snippets/819")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user?sudo=518")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_398() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/license")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/BQRV/issues/689/closed_by")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_399() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"finding_id\": \"XAKln1f8xQvaFyDi\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/hw8bZ/vulnerabilities")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/environments/9n_ZqAI/metrics_dashboard/annotations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_400() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/runners/-2124647112")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HFpZGf4dMXvegqd1/dependencies?package_manager=fFb9xO")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_401() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/aM1hmfD_iJ/repository/branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/SOeSoSk/issues_statistics?" + 
                    "milestone=K&" + 
                    "scope=yI8&" + 
                    "author_id=369&" + 
                    "assignee_username=mucfn2ukw&" + 
                    "created_after=900c4pIueMRpb3zt&" + 
                    "updated_before=fGEdCsDng3&" + 
                    "confidential=TzY9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_402() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/namespaces/d_VflEZax2r/exists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/i8GXFx0vyHu9e0r/repository/commits/AQtYKWm/comments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_403() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/1D5mY_JPo3d/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/syx_7YHoI3/repository/commits/Mqm6U6wNnE/signature")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_404() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/hFIhb2h7ausYfFbl/boards/215/lists/749")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/ee4I4RC6cSKe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_405() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/NmwB/releases?sort=Is")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/ojdq/merge_requests/919/discussions/704/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_406() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/HYwd/feature_flags/GvFzQkce7svAgr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/5fAlmDAwC_/merge_requests/561/pipelines")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_407() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/broadcast_messages/167")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/YzKdnCcNDc/integrations/pivotaltracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_408() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/sCk7w/issues/585/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"267\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/TVMTihTb/epics/267/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_409() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QI/boards/898")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/L4mJB1UqWZ8BeUvw/issues/627/award_emoji/126")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_410() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Nn3D/integrations/campfire")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/0vxx/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_411() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"emoji\": \"kEdQK5s\", " + 
                    " \"message\": \"MQ2\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/user/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/NRbG/boards/474/lists/984")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_412() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/6SgW/remote_mirrors/Z")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/611/custom_attributes/ciHX2j")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_413() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/0C9vDiv/feature_flags_user_lists/5AsYBPtRZRaIG")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6u_cEq5Cwg9bsp/repository/compare?" + 
                    "from=j_LQ&" + 
                    "to=fnTrMBLIv2Ufv6&" + 
                    "from_project_id=702")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_414() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/_jTN/badges/render?" + 
                    "link_url=Z0py&" + 
                    "image_url=pZ7Og_j")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/UmF4ZoVD/feature_flags/zncXdIiQmQyvkvr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_415() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/RwUHM12lBBs/debian_distributions/711/key.asc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/geo_nodes/988")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_416() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/qzg6/integrations/pushover")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/LbfqfA4VE5UfNA/billable_members/450")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_417() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/hooks/855")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/8/packages/280/package_files/358")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_418() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/H/feature_flags_user_lists/cu")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/process_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_419() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v4/groups/yfIx5_tmS9vlzv9/epics/864/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/9li4FoiS_/epics/ARxs8Boba/issues/2JBn_09_zeG")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_420() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/qjpl/merge_requests?" + 
                    "state=2YO&" + 
                    "milestone=rQk8&" + 
                    "view=AY&" + 
                    "labels=C5iYrspLFQMsD&" + 
                    "with_labels_details=f8&" + 
                    "with_merge_status_recheck=77njxSI&" + 
                    "created_after=F&" + 
                    "author_id=130&" + 
                    "assignee_id=312&" + 
                    "reviewer_id=638&" + 
                    "reviewer_username=tr_B5B_HghoC9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/ijjTbCkJ58YNaKLI/labels/CfXZe/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_421() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/eaBd7SH4KrTE_4tT/projects?" + 
                    "id_after=964&" + 
                    "id_before=753&" + 
                    "membership=gLAl8kYJ&" + 
                    "min_access_level=321&" + 
                    "owned=GfvW6PMv3_&" + 
                    "starred=fHkUjjM&" + 
                    "statistics=6REWUBNTeX4&" + 
                    "visibility=94C0YyBYM5BBn2&" + 
                    "with_issues_enabled=K0vnKSl")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/d8z056jALSHw3L/members/467/state")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_422() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/gWz5TEgPLwUsgmo/restore")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/vvdEPlRO8gW7wT00/merge_requests/692/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_423() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/iDmA/wikis/XTY3vk99TkGc?render_html=n_fk0kOTRYjyTEP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/qtnKblHm3xvKEU/members/985/override")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_424() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/hnavj/badges?name=iQRlhpDXcRdB0bn")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/IyWeX9WFcCWHx/integrations/custom-issue-tracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_425() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/WS10FcIbX0MgRtCU/releases/ApyuRz/evidence")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/V1FV/epics/446/epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_426() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ieAH/issues/363/notes?" + 
                    "sort=tltSZM&" + 
                    "order_by=lCytZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/xUqNA94hxB9zpv6l/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_427() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/5B/repository/commits/mg7IcSJb/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Lc0DzNCDJ/issues/663")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_428() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/NkP4D3EBdV/packages/322/package_files/-1887398388")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/iow0wY/approval_rules/160")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_429() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/PL1wrh4g3/repository/files/sifaONZLaDyWf?ref=qXh4gI8yO6WA5I")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/activities?from=QY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_430() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Gf3D/projects/shared?" + 
                    "sort=VX7FQ_C&" + 
                    "with_issues_enabled=Bfxc6tHaj_L&" + 
                    "min_access_level=160")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/2RPVHwsj/labels/NLM_la/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_431() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/VYZTt9R/milestones/377")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/rOsXW8Q92uT7peK/snippets/659")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_432() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"suite\": \"jkTrcTFlF8mQx\", " + 
                    " \"description\": \"N\", " + 
                    " \"valid_time_duration_seconds\": 157 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/8urrshE2rTSg7/debian_distributions/iBT33UVx2uE9pk")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_433() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"597\", " + 
                    " \"position[base_sha]\": \"U1GBt14q\", " + 
                    " \"position[start_sha]\": \"HyUvW7KBuD\", " + 
                    " \"position[head_sha]\": \"t0f\", " + 
                    " \"position[position_type]\": \"UyP71whwUiYm6\", " + 
                    " \"position[new_path]\": \"E9GlfB6UKxWZcR\", " + 
                    " \"position[old_path]\": \"9v_XPONjOi\", " + 
                    " \"position[old_line]\": 1500293767, " + 
                    " \"position[width]\": 774, " + 
                    " \"position[x]\": 448, " + 
                    " \"position[y]\": 335 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/FZH/merge_requests/597/visual_review_discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ZmOTWwarND7C/packages?" + 
                    "exclude_subgroups=fjaOIOQqPsld3&" + 
                    "status=Muq")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_434() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/vHJ13n2gezx3/hooks/150")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/namespaces")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_435() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/lB/merge_requests/641/discussions/576")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/application/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_436() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/B/merge_requests/563/pipelines")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7/search?" + 
                    "scope=P68cDJjiAMboE_y&" + 
                    "search=75qSHPy&" + 
                    "ref=aE&" + 
                    "state=3G&" + 
                    "sort=LVdOW")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_437() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/projects/BSOrI/issues/101/notes/653")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/rKMFAYRNc/merge_requests/0/cancel_merge_when_pipeline_succeeds")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_438() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/a/badges/97")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/ci/lint")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_439() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/lMYDTfX6f3OGH30/labels/MP4RW0r_y6NZgS16")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/Mor5iW5blS0vATTx/jobs/244/cancel")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_440() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/8a/labels/U")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/GoFHX6Y9LBwB57/merge_requests/503/unapprove")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_441() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/aOQi/pipelines/840/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_442() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/j35oxh35SmUZHL/integrations/datadog")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/P_7IpswxNJAWKK5j/milestones/700/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_443() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/KsikPUF_/star")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .post(baseUrlOfSut + "/api/v4/projects/muGKN3VroG_/merge_requests/551/reset_time_estimate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_444() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .put(baseUrlOfSut + "/api/v4/groups/75jRlWXHC/members/665/approve")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"JUH4ahR\", " + 
                    " \"description\": \"rz3dpJ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/pj7dJ7/cluster_agents/595/tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_445() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/JvEXNb6bmzeXHtv/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/hO5yM5G7qEFj8Sq/merge_requests/527/approval_rules/404")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_446() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/process_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/i8PwK/integrations/pushover")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_447() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/311nm79la/merge_requests/15/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Czzn6/merge_requests/435")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_448() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"CWcKL7CKrJ6pGs\", " + 
                    " \"key\": \"130\", " + 
                    " \"expires_at\": \"MjfgYW\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/users/130/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/all?" + 
                    "status=TfTEVD6gwe4&" + 
                    "paused=06p1t62kzcSQ55&" + 
                    "tag_list=we69EHnw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_449() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/yxxF4TVHn/deploy_tokens/59")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/qJFNI94y/export")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_450() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ym2lvn/vulnerability_findings?" + 
                    "severity=WXY3tLecpfPP&" + 
                    "pipeline_id=CIVf7EbguvH9SQ6b")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/lUQZ/fork")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_451() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/iL3vfeh9qzcU/merge_requests/412/todo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/dVorEf2nK3eeJDs/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_452() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/CXwEbXEK/issues/607/reset_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MtE0Hvo/ci/lint?" + 
                    "dry_run=tO1sZGX24MkR&" + 
                    "include_jobs=o&" + 
                    "ref=JdCsycB3_rLWBo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_453() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/fUzCTm/merge_requests/660/merge_ref")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/dpY7TTFhA/integrations/drone-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_454() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/license")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/dwE/fork")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_455() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/S/pipeline_schedules/855")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/M/merge_requests/771/approve")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_456() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/M2aYbMkCZoY0/merge_requests/273/approvals")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/467/repository_storage_moves/684")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_457() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/pG6OgSzp8vE/members/660/override")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"XsGJGttCXGPFru\", " + 
                    " \"approval_status\": \"COxOZiQiT7kxxq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/MpTAnm6ig3PJLHY/managed_licenses")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_458() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/8/snippets/203/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/749/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_459() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/notification_settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/k6FetJW/epics/IUZGrhvTPQhMtHzR/issues/OthKbQfzy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_460() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/aIunT4TwI4RZolP/integrations/slack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/tC")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_461() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/YBrkSe5X2TMt/clusters/278")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7/integrations/jenkins")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_462() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Ay8igrvr4MKylp2L/error_tracking/client_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"commit_message\": \"T\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/suggestions/fcJH3mMBL/apply")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_463() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/hs49vAfn/issues/166/time_stats")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/Y/unstar")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_464() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/69/user_agent_detail")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/L9eSv6L/integrations/github")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_465() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/79/deactivate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MC/merge_requests/615/commits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_466() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/HAfpcFGPxR/cluster_agents")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/sOEFT78e1UwpTMhj/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_467() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/application/plan_limits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/kS0/issues/954/metric_images/893")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_468() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/3bSg/hooks/976")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippet_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_469() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/J6Jhl4noyI/share/611")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/Wrp7BVmz/ldap_group_links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_470() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/BL0ope/issues/905/add_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Xo7/issues/945/metric_images")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_471() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/mGpQUpWSj3/environments/523/stop")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/AieEaR3CFaQSx7l/integrations/jira")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_472() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/oTJh2zUYO/merge_requests/819/time_estimate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/xWOIdDm/integrations/youtrack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_473() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/RAlQNLv8vE/deploy_tokens/202")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/issues_count?group_path=HNi8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_474() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/uw9R/error_tracking/client_keys/846")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/j/protected_environments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_475() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/543/impersonation_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/OSZcz9Xy/variables/8triu60Jf641GXqe?filter=kHIq6D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_476() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/inLw/approval_rules/811")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/2i/wikis/hf19Iy9J")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_477() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/-1629156743/unban")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/snippets/188/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_478() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/version")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/ZwlpNxi6/merge_requests/810/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_479() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"BBxTd6tp\", " + 
                    " \"user_xids\": \"_ae9M4K3aJ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/ShaH6_7/feature_flags_user_lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"to_project_id\": 674, " + 
                    " \"with_notes\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/K8llv/issues/842/clone")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_480() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/sidekiq/compound_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/topics/670")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_481() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/d8L3/merge_requests/490/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/1IE2RWyHo/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_482() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/eFmP2Rz8/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/users/120/custom_attributes/QC018m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_483() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/VMA/pipelines/267")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/RiY1xoPDqjNXfEm/subgroups?" + 
                    "skip_groups=z2ff&" + 
                    "order_by=kHial4K&" + 
                    "sort=b56Wsb_snx&" + 
                    "statistics=YgXRD2_a2&" + 
                    "with_custom_attributes=1q&" + 
                    "min_access_level=998")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_484() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/OI2g5/variables/3ckn5DE0c")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/GY/merge_requests/46/todo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_485() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/IQOX2/labels/OJ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branch_name_regex\": \"lFw5HHtfWFT\", " + 
                    " \"author_email_regex\": \"Glwim\", " + 
                    " \"file_name_regex\": \"OwkCWOyXDUQ\", " + 
                    " \"commit_committer_check\": false, " + 
                    " \"reject_unsigned_commits\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/5Q/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_486() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/user/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Pjpsowk7shjvQmE/boards/304/lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_487() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/issues_count?group_path=5AudvqGozKij")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/TQiNnwj/epics/1/notes/618")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_488() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/hooks/747")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Z2xDR_yKRO/templates/XGO1ilCoSu0m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_489() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/P/iterations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/342/keys/172")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_490() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/admin/clusters/430")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/sDgZ8xKYSB/cluster_agents/271/tokens/667")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_491() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/issues_statistics?" + 
                    "milestone=gdNfC&" + 
                    "assignee_id=445&" + 
                    "assignee_username=itnv6BE27ovjBJNI&" + 
                    "my_reaction_emoji=Nk3cEtWP&" + 
                    "iids%5B%5D=9isdwKI&" + 
                    "created_before=G")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/security/vulnerability_exports/BQFxT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_492() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"issue_iid\": 454, " + 
                    " \"name\": \"pMvEgYrL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/x/issues/454/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/-357223409")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_493() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"version\": \"fSIF1XR\", " + 
                    " \"to\": \"YBhzoVuUv\", " + 
                    " \"file\": \"pnYRpNLU\", " + 
                    " \"message\": \"eWEmdHxcZ3H\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/YBhzoVuUv/repository/changelog")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/rlIkDWTZFubiqFlW")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_494() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/keys/591")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/fAbqmpq/issues/302/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_495() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .put(baseUrlOfSut + "/api/v4/application/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .post(baseUrlOfSut + "/api/v4/projects/uwNV/pipelines/912/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_496() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/IYIDU0YC7xeQu9/boards/129/lists/820")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/0LdmzJr/integrations/irker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_497() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/566")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/broadcast_messages")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_498() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/9W/badges")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/topics?page=495")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_499() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/topics/830")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"status\": \"7mZS\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/i2OLNsKO94fUC/deployments/65")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/25R/epics/LER_ZlWYnVg/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"color\": \"YBTGNdpY\", " + 
                    " \"description\": \"e60YR9bxRan8I\", " + 
                    " \"priority\": 691 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/2FU_3rlC_/labels/2uSOAf")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_501() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/I6SU3y/epics/521/notes/426")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"description\": \"KFcM1o4gzAW\", " + 
                    " \"namespace\": \"vNJTyt\", " + 
                    " \"visibility\": \"AGh\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/CE4pSa9393A/fork")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_502() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"6rR9s9zwfjMy1\", " + 
                    " \"content\": \"UkmV\", " + 
                    " \"files:file_path\": \"sUflXYgwmL4BAjHI\", " + 
                    " \"files:content\": \"jYO\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/dfTvXssc/snippets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/8/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_503() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/HvA/environments/review_apps?limit=166")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pICYFJB8g/merge_requests/146")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_504() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/whdQoAwfwJjam/invitations/sEBzTRSK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/E1NA/merge_requests/805/pipelines")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_505() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/import")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"access_level\": 739, " + 
                    " \"expires_at\": \"_tiUDwZ2IVnpHBzI\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/pu9/members/127")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_506() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ivXUmVFj/issues/168/related_merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/506885325/custom_attributes/TDGr7n0V2AMjO")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_507() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branch\": \"id6YfrUOMdey\", " + 
                    " \"content\": \"WYrpdGU\", " + 
                    " \"commit_message\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/R0p9TmttnzwJqzkt/repository/files/X0VDqfqYVm91Wd")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys/871")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_508() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/7mPT7Rjr5xySsra_/boards/436/lists/573")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_509() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"label_id\": 880 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/q/boards/169/lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/LgV7mNxsuFXM/epics/936/epics/703")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_510() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"codename\": \"hEMu02\", " + 
                    " \"label\": \"Er23fWa\", " + 
                    " \"version\": \"4byN0s41aTBk21Lw\", " + 
                    " \"description\": \"qiIQbDD14Dsur_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/K1xspteeDra4/debian_distributions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/B7PmdIUVPSHyyd/registry/repositories/644/tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_511() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"license\": \"JAkAbqQpSpZtV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/license")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/snippets/634")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_512() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/tk/starrers?search=AsLNlRqJlM")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/uHfy/pipeline_schedules/738/take_ownership")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_513() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/6u/environments/830")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/vrKkMpHdtOHa6w/snippets/456")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_514() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"882\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/gSA5Y3R4yeP8xPi/snippets/882/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/403/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_515() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/0FyeOB/archive")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QgJoKaz/debian_distributions/757/key.asc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_516() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"notify_only_broken_pipelines\": true, " + 
                    " \"notify_only_default_branch\": true, " + 
                    " \"branches_to_be_notified\": \"2Qx7ekC2hU9\", " + 
                    " \"push_events\": true, " + 
                    " \"issues_events\": false, " + 
                    " \"merge_requests_events\": true, " + 
                    " \"tag_push_events\": true, " + 
                    " \"confidential_note_events\": true, " + 
                    " \"pipeline_events\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/y/integrations/hangouts-chat")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/fTyR7H4M06Z/integrations/pivotaltracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_517() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/107/gpg_keys/242")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/Yf68PznI8V/share")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_518() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/DeWqqx/cluster_agents/941")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MItexphame7/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_519() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/CgVec/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Ao4xE0ZIjNq1zxMo/issues/554/notes/897")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_520() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/JtxDg9D/environments?" + 
                    "name=BdPbrq&" + 
                    "states=FkiXTjyaQUPfB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_521() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/542/impersonation_tokens/41")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/ZHIRNj8Qoe3bZI/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_522() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/XUavn/integrations/asana")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/l7K_UehlIs0WYvE/triggers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_523() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/fknId12vJak6z/integrations/bugzilla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/5s6mZn/integrations/redmine")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_524() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/SKM13YvtyR/managed_licenses/_SmO8n26DWCj58Rw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user_counts?" + 
                    "assigned_merge_requests=8h4_pnfuGRt&" + 
                    "review_requested_merge_requests=Ilrm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_525() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/current/failures?" + 
                    "type=8JGmlz3cAx&" + 
                    "failure_type=J9htte")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/o9vkD6HYyvt1L/hooks/932")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_526() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/application/plan_limits?plan_name=vgZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/w3bFMENws/releases?simple=lLIVS6x")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_527() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/XU9LPIgo9ukM/billable_members/923")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/TOT2xyfQQ/pipelines/388/test_report_summary")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_528() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/C/pipeline_schedules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/6mxZVL8QVILD5ne/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_529() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/OKkWtgnK8cFgLi/merge_requests/1/unapprove")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_530() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/dbHoGHc/merge_requests/601/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/kUoj_pYdA/epics/401/discussions/59/notes/347")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_531() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/MGYF4126HsM/share")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/BJ06/users")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_532() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/tGI72xnMQVUO5fAI/epics/959/discussions/917")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/103/memberships?type=gcHMvp7p3C0r5")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_533() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/clusters/125")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"duration\": \"kn\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/aFgdg56motLISrG8/issues/-1400616707/time_estimate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_534() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/0mqQSFv0s7ua9Q/releases/XaRuj1jw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/8BVPIw/environments/review_apps")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_535() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/OsrGh3CJa/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/826/gpg_keys/846")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_536() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/6iGTlCnTzv2/billable_members/760/memberships")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/AV/pipelines/920/test_report")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_537() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pU_NxUFtHsw/pages/domains/Bm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/queue_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_538() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/PX4uZL2wWGl/pipelines/193/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/DA/registry/repositories/47/tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_539() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/q9o0a95e3A")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/mupzQ/members")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_540() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/O25sa5TJ6a3/issues/876/add_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/YWuGqBOL/merge_requests/785/versions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_541() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/new_members_count?group_path=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/0iJ0UOTcd/pipelines/629/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_542() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/bby5U/pipelines?" + 
                    "scope=tL&" + 
                    "username=oAFRxDItqDsLZZTx&" + 
                    "order_by=&" + 
                    "sort=5qWzA")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/Vqxw9dV/epics/47VL7dNThTWacew")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_543() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/SCSxTtfsnwaML/protected_tags/Kcrkv7YUvDP7C")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/teHMINVhiH/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_544() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"o6yef\", " + 
                    " \"content\": \"1UxYSt\", " + 
                    " \"description\": \"QX2bW\", " + 
                    " \"visibility\": \"574boMCEXvfr7\", " + 
                    " \"files\": [ " + 
                    " \"WSnvFy\", " + 
                    " \"K\", " + 
                    " \"H6ITBeK98PC7A2T\" " + 
                    " ], " + 
                    " \"files:file_path\": \"S8\", " + 
                    " \"files:content\": \"xiPlHo\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/m8wVGDgW_lK9mZm/snippets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/799/repository_storage_moves/889")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_545() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/ZCbdy0l1_e8z4/snippets/238/discussions/394/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/qEdAyZJrkiTVY/triggers/153")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_546() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/cPIOb7L/error_tracking/client_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"8FYW0C7mX0yO0W\", " + 
                    " \"content\": \"y97VG\", " + 
                    " \"visibility\": \"v\", " + 
                    " \"files\": [ " + 
                    " \"VDK\", " + 
                    " \"bdOqOS5E\", " + 
                    " \"w\", " + 
                    " \"Qar_4AHolJBia\" " + 
                    " ], " + 
                    " \"files:action\": \"TrWqpC3UaDelhl\", " + 
                    " \"files:file_path\": \"QOeyn_wr5m6_Ev\", " + 
                    " \"files:previous_path\": \"H7IxAg8ciMsoQY\", " + 
                    " \"files:content\": \"N8P\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/_tFLwi6uT_fBH7h/snippets/478")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_547() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/1393910386")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"file\": \"9pXKRTk\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/V9hnrCIwv/uploads")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_548() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/BWzLP6NBY/releases/kNnM93yLl7WR5l/assets/links/1331709818")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"with_notes\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/bAqS2cTJETcyO/issues/477/clone")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_549() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"384\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/1rTEovXCC/snippets/85/notes/384")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/jUQ4W?" + 
                    "license=npGp_cHW4U5&" + 
                    "statistics=2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_550() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Dq3cJCNUY3KJALY/integrations/mattermost-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"Jrd\", " + 
                    " \"labels\": \"1lNAe2WPFG\", " + 
                    " \"description\": \"Rc9Ok527\", " + 
                    " \"color\": \"6R5DltgunpwG164V\", " + 
                    " \"due_date_is_fixed\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/3yCRkA/epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_551() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"move_after_id\": 725 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/19cHqJ0TjhDR/issues/403/reorder")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/_HcqvMr0/repository/files/GzbJAe0Tm2Hx?ref=xJpj6kD8_BD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_552() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/group_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/W6a/access_tokens/Y57iKnJFkOUYwb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_553() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/iF3L_Pf/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/b5/epics/L07swbHzl9Ox/issues/8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_554() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"value\": \"C2M0a9go_\", " + 
                    " \"masked\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/admin/ci/variables/1Qg6YdjEc3t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/oF2Zdx0ed_Arz6y/share")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_555() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/tVwtOuFZCutPgYQ/runners?" + 
                    "paused=k8u&" + 
                    "tag_list=dwTbcY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/PTTmS/cluster_agents/787/tokens/299")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_556() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/111/identities/XpzbIbGKIAQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/topics/851")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_557() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/UckH/merge_requests/839/unapprove")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/OeFnK/repository/branches/607M1dL0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_558() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .put(baseUrlOfSut + "/api/v4/projects/Sluzp2/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/projects/ar/snippets/253/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_559() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/qc/managed_licenses/YwutI9H")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Hzzoj58os/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_560() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/L/epics/152/notes/388")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/todos/mark_as_done")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_561() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/todos?" + 
                    "action=nAB2CaiUJbCICL&" + 
                    "type=e_1IHWiiH9ifjOAy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/tXjMiyQsYwUw9b00/feature_flags/MIEapk8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_562() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/EkS09Fw/environments/946")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"link_url\": \"upk3XgBlwYYk\", " + 
                    " \"image_url\": \"gIumKf2qwh\", " + 
                    " \"name\": \"DZuDM7fhb\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/fCk/badges/981")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_563() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/MN5a7FWtk/boards/452")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Yr9q0/protected_tags/q")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_564() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/environments/nVQmmgTdqnR6oO/metrics_dashboard/annotations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mZEjA5Q/issues/814/notes/280")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_565() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/hL39FMhsF29iql/commits/84/discussions/772")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/3S5o1h08h00tKvPk/epics/537/epics/491")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_566() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/UkePg/epics/476/related_epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"enabled\": true, " + 
                    " \"name\": \"BEZw3NMh\", " + 
                    " \"url\": \"Fg9NkS1\", " + 
                    " \"internal_url\": \"VaQ1KFdxioCi30\", " + 
                    " \"container_repositories_max_capacity\": 705, " + 
                    " \"sync_object_storage\": false, " + 
                    " \"selective_sync_type\": \"hmisNCXD2a\", " + 
                    " \"selective_sync_shards\": [ " + 
                    " \"lvPPXQ\", " + 
                    " \"keGKspbfyCDDj\", " + 
                    " \"w27qf\", " + 
                    " \"VpclG9lU\" " + 
                    " ], " + 
                    " \"selective_sync_namespace_ids\": [], " + 
                    " \"minimum_reverification_interval\": 592 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/geo_nodes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_567() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/lDgZVcTYfUPC/integrations/external-wiki")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys/303")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_568() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/CHJRIYvQ9oI/integrations/asana")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/personal_access_tokens/self")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_569() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/y/issues/343/user_agent_detail")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/oQqtj/deployments?" + 
                    "order_by=i0x5sJuHm96&" + 
                    "updated_after=_SZ1v&" + 
                    "updated_before=yzqsUdGrc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_570() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MqENmwI7B5S_o/integrations/pivotaltracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/Ll6fs86yVF8GWz/issues/137/participants")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_571() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/security/vulnerability_exports")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/qg39/epics/817/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_572() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/merge_requests_count?group_path=5e2EP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/woQXQE/epics/149/epics/352")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_573() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/492/error_tracking/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/swOwv/milestones/398/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_574() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/9CzCk1Sh/repository/tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/LK5I5pzy/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_575() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/zFg5gh/integrations/irker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/7p_?" + 
                    "with_custom_attributes=9lWD&" + 
                    "with_projects=Du")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_576() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/runners")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/GpHUQ8L/merge_requests/448/approval_rules/932")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_577() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/nFR5a/merge_trains?sort=g")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/6Xp6cmirFD2Gc/issues/862/todo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_578() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/zfUHHEv9E/protected_tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ynF6H629EzL/milestones/196/burndown_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_579() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/r2qUeo/merge_requests/435/todo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/LdxtYLjCNa/issues/531/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_580() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/B/labels/xg2FGhJDH49edj")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"XAfjfldqjf\", " + 
                    " \"confidential\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/XAfjfldqjf/epics/461/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_581() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/4/merge_requests/1321323898/pipelines")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/cC/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_582() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/1ciCaJ9oXmQApb/issues/468/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_583() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/runners/reset_authentication_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/security/groups/CtFhBFY5xlnz6drf/vulnerability_exports")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_584() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/clusters/-615496164")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/pml2OHQ3SQZCRF7/integrations/microsoft-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_585() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ltMiWcKpDGQ/iterations?" + 
                    "state=orYybvmnw0IXG2&" + 
                    "search=H")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/UYKQi3kQbCorW67/error_tracking/client_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_586() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/Nu/billable_members/742")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/712/ban")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_587() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/tVKTRECC/freeze_periods/IN")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"L1pRDA4M4m7\", " + 
                    " \"url\": \"zbKKeEb\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/DqDYd/releases/L1pRDA4M4m7/assets/links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_588() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Sw65w4WTC/integrations/campfire")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/broadcast_messages/439")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_589() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"freeze_start\": \"EKQhylBu\", " + 
                    " \"freeze_end\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/kO8/freeze_periods")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/xc5SUId8dcTi/deploy_tokens?active=iymHDWIW5Ag0u")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_590() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/qPLCNttHY0XdeNkI/feature_flags_user_lists/MXIp9p8jtzor")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6riWTyW/jobs/351/trace")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_591() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"domain\": \"WDkQVMsL5\", " + 
                    " \"key\": \"t9h456p\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/WDkQVMsL5/pages/domains")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/broadcast_messages")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_592() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/694/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Ixnjc/milestones/455411373/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_593() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/t9X1rkJl_r8g/deployments/1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/KJ2/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_594() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/pDvsn/cluster_agents/531/tokens/36")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/haW1JYxI3D/issues/944/reset_time_estimate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_595() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/B/freeze_periods/589wEgQdzTZPHdy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/6Xy/environments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_596() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/5q/repository/merged_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mUoAhR2pEl/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_597() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/HJ_V98ymoOi1V/packages/636")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"XrdMg8\", " + 
                    " \"enable_ssl_verification\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/wfKmLf8iHB14UPYK/integrations/drone-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_598() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/user/emails/766")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/U2_UQcoPb9K9MW2/snippets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_599() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/runners/505")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/runners")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_600() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/OOxxxZyu/epics/452/epics/682")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"source_storage_name\": \"CJ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/snippet_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_601() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/project_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/NeGqTTJ0Eox9/merge_requests/690/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_602() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/user/emails/636")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/7HAyb/variables/Sl")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_603() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/f6F/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/429/runners?" + 
                    "type=JxFq&" + 
                    "paused=upF&" + 
                    "tag_list=VVoGFDS")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_604() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/Eq2MjQqIzb/repository/commits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/0cba8hJS5joarB/deploy_keys/84")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_605() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/w29Tfx2EX/pipeline_schedules?scope=KbMjz73gYDYJxZ2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/WzvOx_a/fork")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_606() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/1Cdroq_V5W_0t/epics/508/notes?sort=KXM_7fGicYF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/S610Dgd/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_607() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6k2s1FatjpW3jcm/milestones/594/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/m/milestones/812/promote")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_608() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/mCtt4yQVNr0L/integrations/emails-on-push")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/wQc9rv35F/provisioned_users?" + 
                    "search=8LScraCy&" + 
                    "blocked=4&" + 
                    "created_before=oVVtG")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_609() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/6S1Id3u86wz/integrations/confluence")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/Hl/epics/wYpwHcqQ3Yt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_610() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/iBt1ZzJm/languages")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/AtZ5Xv64wlP/feature_flags/K8feyGP2G6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_611() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/e98OP/integrations/microsoft-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/kot/clusters/504")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_612() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"mock_service_url\": \"yO4PJ\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/SiJ3wEi/integrations/mock-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/N/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_613() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Nn/hooks/94")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"namespace\": \"\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/YUMHZve6ZE__i/transfer")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_614() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/2H9jtRx8z/integrations/webex-teams")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"target_group_id\": \"Q9NxC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/Cg0/epics/394/related_epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_615() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/user/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/oZUft_ijRQyVy/merge_requests/21/time_stats")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_616() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"bamboo_url\": \"vQ\", " + 
                    " \"enable_ssl_verification\": true, " + 
                    " \"build_key\": \"XQbvMbFRKnT7klf\", " + 
                    " \"username\": \"h\", " + 
                    " \"password\": \"uClrNtd\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/2CKpU/integrations/bamboo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/d0Bq_/issues/140")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_617() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/iCV/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/M3b0GPhA/registry/repositories?tags=91g")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_618() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/817/repository/branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/issues/22")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_619() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/JLRiViVNVK0/jobs/196/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/5DqRW/repository/contributors?order_by=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_620() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/940/keys/466")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3rT/integrations/unify-circuit")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_621() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/UN0yTiYRxV/releases/Pi7RYrB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"title\": \"TTXsuUpFtzISGwM\", " + 
                    " \"content\": \"H2GNwTlkU\", " + 
                    " \"files:action\": \"q3Attmh9vzR3DHn\", " + 
                    " \"files:file_path\": \"_ft3k\", " + 
                    " \"files:previous_path\": \"woSvip4IhnRMVC\", " + 
                    " \"files:content\": \"t0aREYArJuj\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/snippets/612")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_622() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/preferences")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Qao\", " + 
                    " \"user_xids\": \"7acQxjGKAkTitQ\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/z2wAbcDUVsymtn/feature_flags_user_lists/cXghtMW2")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_623() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/8bwa2NAnwnP9N/issues/979/discussions/525")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/nQRs/issues/101/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_624() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/projects/U")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/re/repository/archive%5B.format%5D?" + 
                    "sha=PG&" + 
                    "path=fxS3YhovNS")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_625() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/keys/h74DtdpKSa2BUHMP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/vNqbSqvoB9TS3P/integrations/prometheus")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_626() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branches_to_be_notified\": \"MtheKUdIs\", " + 
                    " \"push_events\": true, " + 
                    " \"tag_push_events\": false, " + 
                    " \"note_events\": false, " + 
                    " \"pipeline_events\": false, " + 
                    " \"wiki_page_events\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/Xs8rAkm8x/integrations/unify-circuit")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/personal_access_tokens/UuAXZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_627() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"url\": \"50QNBZjExZgXPnZ\", " + 
                    " \"only_protected_branches\": true, " + 
                    " \"keep_divergent_refs\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/PG7dOzB/remote_mirrors")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/wHUsWdT5m/debian_distributions/89")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_628() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/dIvB64l9TH9g/merge_requests/916/participants")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7IraDimGEZ4ID0w/clusters")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_629() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ueU4WTuGt5/ci/lint?" + 
                    "dry_run=Fw2xzOVa7eyA&" + 
                    "ref=fvBTT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"xfzMh\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/hIhxzBINErBZBQix/integrations/slack-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_630() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/1XLrH/pipeline_schedules/768/variables/170okAT3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/users/797/emails")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_631() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/554/custom_attributes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"new_issue_url\": \"M\", " + 
                    " \"project_url\": \"\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/v_5usS/integrations/bugzilla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_632() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/84FQRAYziD/revert")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/9fv4rBHhKDxy/issues/222/notes?" + 
                    "sort=6ef8mOO9CM&" + 
                    "order_by=qV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_633() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/361/files/ZdDtMgHYXqv/ATP3jssF/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/oQV/deploy_keys/559")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_634() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/registry/repositories/mvpmz?" + 
                    "tags=fk7XH4P7jnHq&" + 
                    "tags_count=Xo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Yr_B/releases")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_635() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/M3MqY/remote_mirrors")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MtcmqI0/pipelines/584/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_636() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7hpsobdar/integrations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/search?" + 
                    "scope=EXsjz7q9NgTTiY&" + 
                    "search=7toPer9VH7qXvCc&" + 
                    "state=quu_MH&" + 
                    "order_by=jwNaM3yN8xAj&" + 
                    "sort=p_imymdRQ4BF66")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_637() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/rYgJnK/merge_requests/46481092/reset_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/uuOMqVZFkx35bf_j/repository/tags/fj34RdTPBPlqKJCZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_638() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/jXWURNZUWnZT/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Gc2rPf2a4am9q/integrations/asana")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_639() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/search?" + 
                    "scope=9qrWQkGXBP&" + 
                    "search=oXETgGAiQ5wzN&" + 
                    "state=F7HBe299hf2DzV7A&" + 
                    "order_by=MMZK4TNY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/0AcZc2F5YRRggsT/hooks/921")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_640() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"YNDvMNusfB\", " + 
                    " \"variable_type\": \"o9os_8OUBii7K\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/eH8LhpODw/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/K3A39niMm/issues_statistics?" + 
                    "iids%5B%5D=6kbmLpr48SYNZO&" + 
                    "milestone=A&" + 
                    "my_reaction_emoji=A&" + 
                    "search=HetnXlgM0i&" + 
                    "created_after=Gt&" + 
                    "created_before=kfu&" + 
                    "updated_after=8GAqn6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_641() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/7D9i1Hxx1H1W/merge_requests/991/time_estimate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/419/block")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_642() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Kk4arp1llKQY5hT/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/6K/merge_requests/363/unapprove")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/rKrtl2S4tZn/protected_environments/oWmqLaXGKM")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_643() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/282/deactivate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/y9ruvCTtQpgprJmp/integrations/flowdock")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"confidential_issues_events\": true, " + 
                    " \"deployment_events\": true, " + 
                    " \"job_events\": true, " + 
                    " \"merge_requests_events\": true, " + 
                    " \"note_events\": false, " + 
                    " \"push_events_branch_filter\": \"w42dDuC\", " + 
                    " \"tag_push_events\": false, " + 
                    " \"token\": \"Dz04r\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/H5MI/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_644() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MFFlx/templates/A")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/y_Qri8MfIl4D/pages/domains/6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .post(baseUrlOfSut + "/api/v4/users/33/approve")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_645() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"J1Y5iNTFaPsg7MH\", " + 
                    " \"url\": \"sZ_hkvf\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/EdZrV/releases/J1Y5iNTFaPsg7MH/assets/links/922")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"username\": \"WndilVgzikRRm\", " + 
                    " \"token\": \"Ohi7y\", " + 
                    " \"push_events\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/rAiIt/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"upload\": { " + 
                    " \"5fN\": \"igvvjQ\", " + 
                    " \"Ads7I_yz\": \"WYi\", " + 
                    " \"O\": \"FcA\", " + 
                    " \"1KqeUD8gHTDXvj\": \"pLzkk3\" " + 
                    " }, " + 
                    " \"upload[url]\": \"G7y\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/_sz/export")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_646() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Gurbxx8/snippets/112/discussions/784892136/notes/230")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v4/projects/PicGNP9ORWSB3FS/integrations/redmine")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/cvRs7381CVK/triggers/134")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_647() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/a8hA4POvHk/epics/616/related_epics/J26XQr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Uw9iuBmAx4HJk6i7/issues/490/notes/438/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/X2LygzTgGb/runners")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_648() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/aKqLF/debian_distributions/2071589480")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/d5QU6c97mMV9/jobs/326/trace")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/vqfQCQ0NA/deploy_keys/874")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_649() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippet_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/import/github")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"6q\", " + 
                    " \"approvals_required\": 388, " + 
                    " \"user_ids\": [ " + 
                    " \"NuvqjCB\", " + 
                    " \"Nr1YLG\", " + 
                    " \"2Eah\" " + 
                    " ], " + 
                    " \"protected_branch_ids\": [ " + 
                    " \"BhhWvQmuyPa\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/S5PGOUKu7NAJI6I1/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_650() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/XUK5F3/integrations/buildkite")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/P5Ya6/runners/481")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/g2El9P35arE/merge_requests/322/discussions/18/notes/183")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_651() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/R_/integrations/bamboo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/PCimv9P/boards/694/lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/runners/verify")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_652() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/YJ4IM2pp0S/runners/146")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"recipients\": \"t1PEmLwik\", " + 
                    " \"add_pusher\": false, " + 
                    " \"branches_to_be_notified\": \"KcG7TRq4cHL\", " + 
                    " \"notify_only_default_branch\": true, " + 
                    " \"pipeline_events\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/STs6MKLU6l/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/WQL7KnZAaO/confirm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_653() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"move_before_id\": 163, " + 
                    " \"move_after_id\": 557 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/dnzrdvAhY8PUxf6/epics/23/epics/2142082542")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7QLbM_iLnF/snippets/775/notes?order_by=Fktn_KepTL")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_654() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/nPgHgwrPIIbDIa/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/G3HDmxL1Qm/merge_requests/412/approval_rules/592")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/TjZpY/integrations/mock-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_655() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/tgz/packages/698/package_files")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/484/identities/qf")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/CI_00s/commits/VMrkfC23Arsm/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_656() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6um5QyYu_SdvibZb/repository/files/99cB/blame?" + 
                    "ref=l40SK&" + 
                    "range%5Bstart%5D=130&" + 
                    "range%5Bend%5D=594")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v4/projects/984/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/xUqh5N0JccV/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_657() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/XA5dhO1dGQn/freeze_periods/gnSbNQIy4IkF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"content\": \"lE4MJRXfyNI6\", " + 
                    " \"title\": \"XT\", " + 
                    " \"format\": \"hiwSgColy0bZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/eP9HuDB6QqonY29/wikis")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/pp65N5ZNeiRm/repository/changelog?" + 
                    "version=49VicL6dsh&" + 
                    "date=KUXVF9&" + 
                    "trailer=O16Sd9RMDUpXfKyF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_658() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/features")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"dashboard_path\": \"uTkFCUij9bWlYhM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/RltalxT5Vlt5vd8/metrics/user_starred_dashboards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/job")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_659() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"webhook\": \"W6QUxVvEG\", " + 
                    " \"username\": \"xpNE5PHZ\", " + 
                    " \"channel\": \"8s\", " + 
                    " \"commit_events\": true, " + 
                    " \"confidential_issues_events\": true, " + 
                    " \"confidential_note_channel\": \"JFPeAG33LwbwiZ\", " + 
                    " \"confidential_note_events\": false, " + 
                    " \"deployment_events\": false, " + 
                    " \"issue_channel\": \"3E2I\", " + 
                    " \"merge_request_channel\": \"TS38Rg82\", " + 
                    " \"merge_requests_events\": true, " + 
                    " \"note_events\": true, " + 
                    " \"pipeline_channel\": \"WP1\", " + 
                    " \"push_channel\": \"ukn\", " + 
                    " \"push_events\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/CDA0Y9A/integrations/slack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/kUoIw2xypS/merge_requests/235/resource_label_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"url\": \"Nv71oPtixGeajMhf\", " + 
                    " \"repository_update_events\": true, " + 
                    " \"enable_ssl_verification\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_660() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/nT/issues/847/notes/766/award_emoji/140")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/103/activate")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"p0ejunx\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/runners/verify")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_661() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/3t/milestones/77/promote")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/license")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/runners/reset_authentication_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_662() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/projects/L4SKyOH2ea/repository/commits/HETP/signature")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/RXI4C6Q/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/2_92Dv7BGkcT/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_663() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/job/allowed_agents?CI_JOB_TOKEN=QbBsCKq")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/VdPkk1qBG6iYV/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Q2edke04NzMIX/snapshot")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_664() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/DjTBVZq/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/naZx_5U3W/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/JL/remote_mirrors/oRB6I0dC")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_665() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/vUn1k0SnHMr/repository/tree?" + 
                    "path=oy_s_yUID&" + 
                    "ref=5EM&" + 
                    "per_page=871&" + 
                    "page_token=6abrrpYxFgS")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/JSImT2wTURJG/merge_requests/798/reset_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"position\": 618 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/9/boards/104/lists/333")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_666() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/35oxq8/deploy_tokens/831")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/v/integrations/prometheus")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"author_email_regex\": \"yStOYhxVXqUf\", " + 
                    " \"commit_message_regex\": \"dn3eM\", " + 
                    " \"deny_delete_tag\": true, " + 
                    " \"prevent_secrets\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/zJOX/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_667() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .post(baseUrlOfSut + "/api/v4/projects/tGty9IlUTGm/pipelines/879/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/LML0mf2b0/hooks/617")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/3t0xIogARHS/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_668() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/users/936/emails/890")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/Rug2R8PEjVmF4HJ/epics/4aGfWgGzI/issues/zPkL7HkfUp5_8X39")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/0cNZ4euA/debian_distributions/70/key.asc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_669() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/V2DdS7lCx9cEx/wikis/GezkovcWjj?render_html=GvY0P_BsMP2Wc")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/0VTHeeoqmDL2/integrations/emails-on-push")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"description\": \"mbyVdpRn\", " + 
                    " \"name\": \"4dPcxFWgyXr\", " + 
                    " \"strategies:scopes:environment_scope\": \"r6jaRKSzkoz_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/4WmUqku/feature_flags/4dPcxFWgyXr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_670() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/W3X5g7/integrations/slack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QxV2lGfB/protected_environments/Obt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"colorize_messages\": false " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/4xH1tmdYtEpac/integrations/irker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_671() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/hooks/608")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/2OZXtsT9hMQ/integrations/jira")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/c0A/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_672() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Jf1gjBX/merge_requests/487/closes_issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"note_id\": 702, " + 
                    " \"body\": \"54\", " + 
                    " \"created_at\": \"sBq0_ujP6eGXoo9\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/ZimZ2pSJmSbLew/merge_requests/419/discussions/54/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/zg/pipeline")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_673() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"recipients\": \"IeoAi42\", " + 
                    " \"add_pusher\": false, " + 
                    " \"pipeline_events\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/vv/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/EibNKbbUw4I/variables/FM")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1/approval_rules/869")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_674() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"variable_type\": \"9rB3H_gw\", " + 
                    " \"protected\": false, " + 
                    " \"masked\": false, " + 
                    " \"environment_scope\": \"a43P5w\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/socOOC_SR/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"source_storage_name\": \"jhOJL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/group_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/GKG/share/899")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_675() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"xpb\", " + 
                    " \"approvals_required\": 630 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/f6E5T5E4iCyHMy/merge_requests/663/approval_rules/496")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Grul9V/releases/A8N/assets/links/567")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/44/followers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_676() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/Y/deploy_tokens/79")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/projects/SLxvmTqiSh5Rl1/integrations/github")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/VXxgCj/wikis/39surJqY?version=D4W96tEn9mu")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_677() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/remote-import")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippet_repository_storage_moves/-2121026071")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/import/bitbucket_server")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_678() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/398/error_tracking/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Enn36t6ss8B/import")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/tNw/billable_members?sort=8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_679() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/mF/invitations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/dP/integrations/slack-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/zDtAXMbGBFP3Q/snippets/863/notes/278")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_680() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/uInX9ls5apNdhC/jobs/508/cancel")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/admin/ci/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/274/repository_storage_moves/790")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_681() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/ohPy95PAMBkD/integrations/slack-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/4/projects/shared?" + 
                    "visibility=06ZVAxneJONO&" + 
                    "order_by=9f3qID5gI9wgoi&" + 
                    "sort=8mNX9GWwy7u1YTH&" + 
                    "search=hp_rGxL_aVXGaj&" + 
                    "starred=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/mU9psz/issues?" + 
                    "author_id=334&" + 
                    "author_username=TXcMn39N&" + 
                    "created_before=xIf&" + 
                    "issue_type=WneC1v64T&" + 
                    "labels=nFkkM65IDH&" + 
                    "my_reaction_emoji=qKhXhgVkFsQ6To0&" + 
                    "not=AucvMl3O&" + 
                    "scope=zxG_ink&" + 
                    "sort=CPXHxDGTpwpRL5G&" + 
                    "state=Q__yuoHD2oILZh&" + 
                    "weight=210&" + 
                    "with_labels_details=LKo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_682() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/bBUyHZ4thT_ynz/integrations/packagist")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/4Xa/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/lw_zwXR_HTjZIMi/projects?" + 
                    "visibility=hEsM&" + 
                    "order_by=UQQBKIFp7D&" + 
                    "sort=9BbYQUQCE3Hn&" + 
                    "search=J7l9zsEAz&" + 
                    "simple=6o4gXPTyqQc&" + 
                    "starred=03vcO0g&" + 
                    "with_issues_enabled=wOkOTMYc&" + 
                    "with_merge_requests_enabled=LdNOnh7DWtANftQo&" + 
                    "with_custom_attributes=J&" + 
                    "with_security_reports=enDi_2Uhq")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_683() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/f_D5BDJdxI/merge_requests/190/versions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/2Vitl/registry/repositories/1336288505/tags/cwZSrkFZpuZs")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/groups/k/wikis/HZcbFNr0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_684() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/OR7m_foPmpN7gu/merge_requests/926/subscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/BOPoMoof08/environments/277")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/project_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_685() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/0rxtDNnZjiNk/integrations/slack")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/aiOZFKBjL/vulnerability_findings?" + 
                    "scope=878m423svaYqtBl&" + 
                    "severity=QYY18JqXw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_686() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/h3gp2KTCtIC9y/epics/571/related_epics/3jGDm3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/NDvj5sgxphxMQcr/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_687() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1NLRqImapcOxlUo/merge_requests/129/changes?access_raw_diffs=b9Tu3VpKrD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/dxxg/deploy_keys/116")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/tXJAG_AuMYXvj/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_688() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/t/issues/129193689/notes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/765107110")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/F/starred_projects?" + 
                    "archived=2&" + 
                    "owned=r9ja8K6&" + 
                    "starred=JRCmZn6QbZBLw4c9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_689() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .delete(baseUrlOfSut + "/api/v4/projects/m/releases/DIDvVTrx5Y")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"enabled\": false, " + 
                    " \"only_protected_branches\": true, " + 
                    " \"keep_divergent_refs\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/QefHPPK0J2nEgF/remote_mirrors/y20WHlY5F6VWaGK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"mN\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/QMUL84sZhfdA/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_690() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/dtADFLKdD8O/releases?" + 
                    "sort=UPS3f&" + 
                    "include_html_description=TdHxMLhjf03Cy")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/xA/jobs/698/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/457/follow")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_691() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/N5xdV_/remote_mirrors/DjCud1GD")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/groups/6T2CI/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/gHyx/repository/merged_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_692() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/GD8ZhP/projects/XPv4lGEDkAsRkBKh")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"branch\": \"cOKJkRNqO6e\", " + 
                    " \"dry_run\": false, " + 
                    " \"message\": \"5NbOma_O4\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/tIfe7GIy8B2dn4EL/repository/commits/oFSwlcSlm/cherry_pick")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/msu/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_693() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/mNL39/registry/repositories")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Z598j7hAd/protected_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/gtYcMi/notification_settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_694() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/licenses")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3RCR1mXZRZVBt/issues/150/notes?sort=_fXJZlt3GB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Q82uqHatF/deployments?" + 
                    "order_by=&" + 
                    "sort=uhuEiVJaHMzSr&" + 
                    "environment=ARTrxeQK8&" + 
                    "status=e")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_695() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/cw/merge_requests/658/notes/304")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6zpAohqauXjtG/repository/files/Q/raw?ref=2r_z6PDxVCp010kz")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ZJb9Wm76O3qBM/merge_requests/321/commits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_696() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/9/integrations/ewm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/b2PZyEP/releases")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/job_stats")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_697() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/public?page=462")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/MiWNbbW1iXwr7/repository/commits?" + 
                    "ref_name=K1XokYrL&" + 
                    "with_stats=xP_lmk33ln7CK&" + 
                    "first_parent=jf3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/security/vulnerability_exports/NP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_698() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/y7zAvO/snippets/606/notes/946")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/broadcast_messages")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/z9CXSGk2lNjve/access_tokens/UgdF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_699() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/K1DWpqL82q8cJ0l_/variables/9m?filter=vp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/BC/integrations/flowdock")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/project_repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_700() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/679/repository/branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/8KdVuD/pipeline_schedules/602")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/hooks/-1228751621")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_701() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Bd/integrations/flowdock")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/u/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/issues_statistics?" + 
                    "milestone=gAhzYxskz6&" + 
                    "scope=7tx_T&" + 
                    "author_username=V5sNWoIR0qf&" + 
                    "my_reaction_emoji=53knN6MS3WbhOv&" + 
                    "iids%5B%5D=vlU4ygA9F&" + 
                    "in=i7&" + 
                    "created_after=2oh3E_0Pzv67Y&" + 
                    "updated_before=7E&" + 
                    "confidential=WqCPbCw0")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_702() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"token\": \"2pajjpXL8XFI\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/RyEcL5KJO/integrations/slack-slash-commands")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/w")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/ZzmrEAb/milestones?" + 
                    "state=0jXV6u24Txc04nt&" + 
                    "search=IBYsxVTj&" + 
                    "include_parent_milestones=XwIwF1i")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_703() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6bBgi4H/groups?" + 
                    "shared_visible_only=l&" + 
                    "with_shared=YamWVJ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/P36vqA4hmpw2e/issues/124/discussions/377")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_704() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"link_url\": \"7HGnQgbHSFYBs\", " + 
                    " \"image_url\": \"RKMAe_5Vr\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/Z/badges/583")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/9aRiS02D48IEY/milestones/668/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"message\": \"840\", " + 
                    " \"font\": \"yx3P\", " + 
                    " \"target_access_levels\": [ " + 
                    " 289, " + 
                    " 109, " + 
                    " 537, " + 
                    " 440 " + 
                    " ], " + 
                    " \"broadcast_type\": \"WdpW9_G\", " + 
                    " \"dismissable\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/broadcast_messages/840")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_705() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/hKr5jWDc/members/1298235317")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Otu49nBe8/milestones/64")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"access_level\": 821, " + 
                    " \"expires_at\": \"sLlJ07pr\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/wtyJXYyVbvBYj/invitations/OfG4ZAUXVlj1Ez")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_706() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/user/gpg_keys/613")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/hT7FhXdZUbLc7rq/invitations?per_page=589")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/x4x23U9ChsosM/access_tokens/i9EXjn8GAEb_SY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_707() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/UAUc_7VO7/issues/61/notes/732/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/djh9Sma/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/UuqnP_a1f17K/members/all/-1886574727")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_708() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/uc9ezkk5xU23/managed_licenses/paPlgXRfoGXw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/E/protected_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"confluence_url\": \"4hviROfYBZNDc8k\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/t5VRbstF3NqE0Uwh/integrations/confluence")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_709() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/clusters")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/uU3/labels/liT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/Rm1c5SM5GJ91zI9/pipelines/745/cancel")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_710() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/gtUO6vFVw6BO7Mb2/deployments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Fy3hLYz7/fork")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"confidential\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/C25/issues/511/notes/841")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_711() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/LBSTTzF2f8cdmf/issues/918/notes/34")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/u/boards/1703109163/lists/950")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/B/issues/67/resource_label_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_712() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/keys?fingerprint=pOSqt")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/issues_count?group_path=yq6JZbB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QlL6iY_V2Xf6dxw/repository/contributors?order_by=bkB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_713() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/broadcast_messages/649")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/DR7b/repository/branches/5aRteb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/OcsU/milestones/259/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_714() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/topics/583")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"label_id\": 738 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/yvs/boards/339/lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/oGxOsqyhw/environments/663")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_715() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/rPzUhTTwBh6fi4u/repository/commits?" + 
                    "until=&" + 
                    "path=FNEro&" + 
                    "first_parent=1s&" + 
                    "order=x4zDNdMRJihtx&" + 
                    "trailers=7OaiCRn")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/B0CJbORQMOmeP75/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/q2mG/repository/files/I")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_716() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Oq6kL/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/rLDTMlqqMV/releases/t4FyDiNdC96")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/7WffJTE5gXyMK/merge_requests/743/notes?sort=JGqlqVH")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_717() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/UBnHv/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/P52FfHzCSStk/epics/927/related_epics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Zci4LFsZrE36tmjc/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_718() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/r/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/x2g4ri/wikis/attachments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/d07lYmFiveucUT/integrations/hangouts-chat")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_719() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/frijHe4EQC/cluster_agents/541")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/JIIhPtsiR/ldap_sync")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/wds1kzr9yh/merge_requests/391/unsubscribe")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_720() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"5cw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/Dgs5KRxSfH/issues/289/notes/741/award_emoji")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/MzUm5WpcAZMo9r4_/milestones/62")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"7Tos\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/sr0mZ6tKgKWAC/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_721() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6poAnJ8fe/groups?shared_min_access_level=848")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/deploy_tokens?active=V2o0BStY8Oyw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/JkXOPcpzU/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_722() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/240K/import_project_members/Wo7a")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"active\": true, " + 
                    " \"integrated\": false " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v4/projects/424/error_tracking/settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_723() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/LyckKCoPc1Y/milestones/-1998258613/burndown_events")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/675/repository_storage_moves/143")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/yRSl00HH/share")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_724() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/X/registry/repositories/844/tags/LJc3z")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"domain\": \"Ed\", " + 
                    " \"certificate\": \"Q7Rj5j\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/Ed/pages/domains")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"679\", " + 
                    " \"created_at\": \"6A71SEj8G\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/6jjCSv9W/snippets/679/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_725() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/usage_data/metric_definitions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/LsmL5U747i6J_c/debian_distributions/776")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"7a4Bo\", " + 
                    " \"merge_access_level\": 564 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/72RF/protected_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_726() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/hooks/913")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/geo_nodes/o3Sp2YAJ/repair")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/hUYke/boards/994")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_727() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/ekpN/repository/submodules/mpV7Ma6xtO5hPhV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/sidekiq/process_metrics")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/TJpBxuv/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_728() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/v0ukKa9Ut/milestones/432")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ObOe9o/access_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/br5bWuMPvD/hooks/519")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_729() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/ci/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/lw/epics/OMT8/issues")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/i3P4HplEQNDXPQ/merge_requests/839/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_730() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/sf7I8AAgH3O5x1a/debian_distributions/TcpP9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/uUp4vYG6lAfhfvc/feature_flags_user_lists")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"author_email_regex\": \"d9YcoHx\", " + 
                    " \"commit_committer_check\": true, " + 
                    " \"commit_message_negative_regex\": \"yVKOnI6WXuffe1i\", " + 
                    " \"deny_delete_tag\": true, " + 
                    " \"file_name_regex\": \"PwsbeW3IcPx\", " + 
                    " \"member_check\": false, " + 
                    " \"prevent_secrets\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/34DxVlPje/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_731() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/ldPmk/epics/179/discussions/984/notes/308")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/runners/191/reset_authentication_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/OsU/integrations/pushover")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_732() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/DkLVUUvVjoD4iV8S/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/X1C4KOpHKiK6wQ5/approval_rules/274")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/581/issues/947/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_733() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Rfm8P1KngKh5O/repository/branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/fhA5FdBWQh/merge_requests/120/cancel_merge_when_pipeline_succeeds")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Bny/repository/commits/l10Hj7/comments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_734() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/todos/mark_as_done")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/UFFRQjgaCm9MJMy/debian_distributions/629")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/Rp_ar5/deploy_tokens/514")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_735() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"deny_delete_tag\": false, " + 
                    " \"prevent_secrets\": false, " + 
                    " \"commit_message_regex\": \"j3ZJGissYRnpAJ\", " + 
                    " \"commit_message_negative_regex\": \"qxmjna\", " + 
                    " \"author_email_regex\": \"FiKFxtBdG\", " + 
                    " \"file_name_regex\": \"u\", " + 
                    " \"commit_committer_check\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/8m3u22zNk/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"primary\": true, " + 
                    " \"enabled\": false, " + 
                    " \"name\": \"QTvm\", " + 
                    " \"url\": \"BPyW0T8i8YujnM\", " + 
                    " \"internal_url\": \"P5m\", " + 
                    " \"files_max_capacity\": 704, " + 
                    " \"container_repositories_max_capacity\": 764, " + 
                    " \"sync_object_storage\": false, " + 
                    " \"selective_sync_shards\": [ " + 
                    " \"hCI0Hy\", " + 
                    " \"SABriz\" " + 
                    " ], " + 
                    " \"selective_sync_namespace_ids\": [ " + 
                    " \"iwz_md2Ip1x96r3\", " + 
                    " \"\", " + 
                    " \"yf5KGdHAf3o\", " + 
                    " \"NRKK6x5\", " + 
                    " \"NwSOFXXR\" " + 
                    " ], " + 
                    " \"minimum_reverification_interval\": 901 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/geo_nodes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Tuaz8/integrations/external-wiki")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_736() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v4/projects/Tr3Vsqkj73/protected_branches/lcSFhrdu5b3Eu")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/a/dismiss")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/DyoKIo/milestones?" + 
                    "iids%5B%5D=HWrxwyKKb5mVAFD&" + 
                    "state=&" + 
                    "search=tjZQU&" + 
                    "include_parent_milestones=V4ndQ5Qv")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_737() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/ponDp38JpZpu/boards/454")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/emails/191")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/s/jobs/568")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_738() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/topics/27")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"finding_id\": \"rwel2p\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/8MpZgSoXK/vulnerabilities")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Z6ebbNZSX0VL/issues/72/discussions/379/notes/907")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_739() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/KzOepfjgrb/pipelines/521")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/827/repository_storage_moves")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/xt/repository/files/pbRG5aRP4y3aVXh")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_740() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/ci/variables/e")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/personal_access_tokens/6ZB3aNi10e")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/IIa/repository/merged_branches")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_741() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/zHhkYy/pipelines/922/retry")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/tOnCPe/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"cFW\", " + 
                    " \"expires_at\": \"2090-13-25T19:50:42\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/uW/deploy_tokens")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_742() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/user/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/merge_requests?" + 
                    "state=emxZ9wb2ID9YMXi&" + 
                    "order_by=7_aIskQz0JVd&" + 
                    "sort=6i&" + 
                    "milestone=SZw7I&" + 
                    "view=hZketgcq&" + 
                    "with_labels_details=p8iBcKF7VvW&" + 
                    "updated_after=C0WNKr0Rwt4&" + 
                    "updated_before=TnvyLSbltcg&" + 
                    "approved_by_ids=7QWWH9UHubq7V0w&" + 
                    "reviewer_id=713&" + 
                    "my_reaction_emoji=ucQP2NJHzuRac6PG&" + 
                    "source_branch=wc&" + 
                    "not=3u&" + 
                    "environment=nZJWUMVXf&" + 
                    "deployed_before=CphfbZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/WElLIoQtEq/deployments/-1120544545/merge_requests")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_743() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"639\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/ABc/epics/639/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/E/registry/repositories?tags=MOZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/P2A/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_744() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"url\": \"N1ZSjwB959_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/_6g_60ZCbsuJdXr/issues/718/metric_images/643")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/yl_id/integrations/discord")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/hKlnB0o/repository/commits/zzUlp7iiSFsn/revert")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_745() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/f/pipelines/315")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/955/followers")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/geo_nodes/-297930516")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_746() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/eEv124p/epics/27/related_epics/w32JwteqMRE6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/snippets/845/raw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/QHTpX5CejDxC/boards")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_747() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/deploy_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/sXRWugq9N5eRQkd/snippets/970/notes?order_by=e6ZcR_gs9uMty")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"description\": \"mFlA_RVzo\", " + 
                    " \"upload[url]\": \"NeVEHcLQdCIGBM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/azSNwse5kRFp/export")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_748() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/3mmaQ3SYqmU8M2c/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3/snippets/625/discussions/1398947080")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/users/170/keys/151")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_749() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"body\": \"323\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/5UwmDLQP2MGIVFKV/commits/884/discussions/868/notes/323")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/users/456/keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/9oyEnxkz1MVfs/badges?name=F5")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_750() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/runners/all?" + 
                    "type=HRbyNaA8&" + 
                    "status=86ET5WADrfnEW&" + 
                    "paused=L19OAPbC4&" + 
                    "tag_list=ajIIWhJaMWXTbW5m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/4l3NQ23/repository/tags?sort=B6M2jr")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/8i1A/releases?sort=caTFo8Hke")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_751() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"file\": \"\", " + 
                    " \"url_text\": \"EEdUfLla39Ekg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/stXdi8Ix/issues/82/metric_images")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ex7/repository/contributors?order_by=h0BSU_lSQpu_yuRi")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/kxjx_1PL/epics/-1630221098/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_752() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/abKbBAQFWn/integrations/mattermost")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/czSV8JxSZPLmb/releases")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/QNvNIv5U/resolve")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/QwS_/integrations/prometheus")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_753() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/0eY/registry/repositories/759/tags?" + 
                    "name_regex=IVUjBl&" + 
                    "name_regex_delete=h3msY15D&" + 
                    "keep_n=849&" + 
                    "older_than=JVc5GIFUGVJvtu")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/zEQ/protected_branches/D")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/CRZ0Td2zr/milestones/918")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/O1H0FJ5W4OheXSEK/hooks")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_754() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .get(baseUrlOfSut + "/api/v4/user/gpg_keys/649")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/q7LRe2QHmx1ga/boards/683")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/security/groups/lwp/vulnerability_exports")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/h3DEdT9fwEmz/debian_distributions?suite=dfoU")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_755() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/ci/lint")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/oszCo2370UZDD/repository/commits/T43vg/signature")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .put(baseUrlOfSut + "/api/v4/projects/FNstNcc_JES/integrations/jenkins-deprecated")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ezGOnnEtLj6rE/commits/724/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_756() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/JF2kNuCXSK/search?" + 
                    "scope=seyf4s&" + 
                    "search=0ITS5Dpwl5shcPS&" + 
                    "confidential=xN_y5xv37")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/TKRzZNTZ4k/epics/717/discussions/680/notes/255")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/LxFirnPjgPsxQ/push_rule")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/nxZyTg/repository/files/aJyum?" + 
                    "branch=j8k&" + 
                    "start_branch=wLZg2lWnc&" + 
                    "author_name=AT_Yi&" + 
                    "commit_message=StiZ9SW7h3cVEIWi&" + 
                    "last_commit_id=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_757() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/gLDXj/deployments?" + 
                    "sort=W2UR2Rbn_zGW_&" + 
                    "updated_before=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"state\": \"saS9gv\", " + 
                    " \"ref\": \"YPj5sUu7ff\", " + 
                    " \"description\": \"CtmW7J8_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/6ggVip5vADtGZ/statuses/RZ0u")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"external_wiki_url\": \"d5l7n8aeLWMtq\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/Wk8dVHP7/integrations/external-wiki")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/nQ/ldap_group_links")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_758() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/UPftS76eHwdZ/packages/926")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/26vL9prgiw/ldap_sync")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/geo_nodes/jxRu0jJ8jixcN9zB/repair")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/qb/milestones/709")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_759() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/BQ84m0_ozyj9/pipeline_schedules/467")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3/pipeline_schedules/690")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/application/plan_limits")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/ci/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_760() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/1vioY/commits/171/discussions")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/cDiQG1kqd50f/issues/383/participants")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"link_url\": \"MBrjA4E0_eY67\", " + 
                    " \"image_url\": \"0Q80\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/groups/MwMo2/badges")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/hpmQa8BjZ/merge_requests/538/resource_label_events/690")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_761() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"9dBf2hlnKBDMQg\", " + 
                    " \"domain\": \"7M908R\", " + 
                    " \"managed\": true, " + 
                    " \"platform_kubernetes_attributes[api_url]\": \"71Z4YJm9w4whSHh_\", " + 
                    " \"platform_kubernetes_attributes[namespace]\": \"\", " + 
                    " \"environment_scope\": \"9UyFG5wp\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/PmK29MBjKqg/clusters/221")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/MGDbjOY/integrations/jenkins")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/security/vulnerability_exports/cq/download")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/380/transfer")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_762() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/IU/runners/reset_registration_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v4/projects/2M2d96uv4Wy1auG/integrations/assembla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/remote-import-s3")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_763() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"tag_name\": \"zA\", " + 
                    " \"ref\": \"V1aMGxyQ6x9Thqg\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/t49A89KZx/repository/tags")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/analytics/group_activity/issues_count?group_path=01c0o8uaW")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/XjqO/integrations/jira")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3nlHgfXv/variables")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_764() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/cy/templates/iLDNe559sKJb74DL/XsE?project=BKiDZt8fYQUh")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Imye5DnFrojOWMir/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/n_ihDerBRMV882/merge_requests?" + 
                    "sort=3NknBhej&" + 
                    "milestone=nTra2rERvKmmnX&" + 
                    "labels=OEbgBuQNz3G&" + 
                    "with_labels_details=&" + 
                    "with_merge_status_recheck=5fgLjHyxrXyLI2H&" + 
                    "created_before=3jmnt&" + 
                    "author_id=-651233217&" + 
                    "author_username=X5hgZePAb6&" + 
                    "assignee_id=337&" + 
                    "approver_ids=tjJs5pATU&" + 
                    "approved_by_ids=cg")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"wc\", " + 
                    " \"url\": \"m7W_9OoU8a\", " + 
                    " \"internal_url\": \"sky\", " + 
                    " \"repos_max_capacity\": 897, " + 
                    " \"verification_max_capacity\": 966, " + 
                    " \"sync_object_storage\": false, " + 
                    " \"selective_sync_shards\": [ " + 
                    " \"hrAQpOE_J_\" " + 
                    " ], " + 
                    " \"minimum_reverification_interval\": 618 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/geo_nodes/629")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_765() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"confidential\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/j4OW/issues/306/notes/347")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/53/gpg_keys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/UK/pending_members")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/4mOgkve9JuNCbxJC/triggers/477")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_766() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/users/141/ban")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/gFtyjCV6SX7ZHSG/boards/1712276930")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/groups/saTi/labels/14JSx7J2Rh")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/groups/dfmY12N/notification_settings")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_767() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"skip_ci\": true " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/9/merge_requests/671/rebase")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/ocQAg?with_custom_attributes=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/h_uw8T5akJRN/approval_rules")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/F98uv/integrations")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_768() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/3fLCNsJc39oOyDA/integrations/custom-issue-tracker")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"due_date\": \"d2EyeYQpNtL\", " + 
                    " \"start_date\": \"YtvcPe\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/projects/MQ2MjhVpKqX/milestones/133")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/R/pipeline_schedules/109/take_ownership")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/lfcdi6vIvojEL/integrations/bugzilla")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_769() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/snippets")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/j0OA_wOSfGOM/users?search=0Kmn56egy39F")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/HqVEgb3ctxgfUoVS/merge_trains?" + 
                    "scope=PI&" + 
                    "sort=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/G7y4k/deploy_tokens/781")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_770() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"duration\": \"KdI\", " + 
                    " \"summary\": \"x8TZ8rydzjblm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/irkP3XLv/merge_requests/187/add_spent_time")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/groups/9AK/epics/PE9pZdBGWgkMgtZ/issues/Hwy5LsWPWhNVgs5")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/S8e_H9HZ/protected_environments/YbHf4M")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/uU_5R6eqbIscmC/access_tokens/v")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_771() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/M5Gcg2hAxA2QjX/repository/files/ODo")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/projects/_CecFEq1/jobs/761/cancel")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/license/981")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" { " + 
                    " \"ref\": \"BMRlVGTKgoGQUd1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v4/projects/h1Pjhu77/pipeline")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_772() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/754")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/geo_nodes/status")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/features/my_user_feature")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v4/projects/Yjq8QYWFen/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_773() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/302")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/6Z/variables/YypY4?filter=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/projects/b85/cluster_agents")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/XuXWem9/integrations/teamcity")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_774() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/admin/clusters/560")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/vBwbruP9nv5O/environments/review_apps?limit=670")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/security/projects/GM3CzejgavIWUX/vulnerability_exports")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .post(baseUrlOfSut + "/api/v4/vulnerabilities/Yy0/confirm")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_775() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/users/833/custom_attributes")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/GMKZpSzI/packages?" + 
                    "exclude_subgroups=nYo6yS3afKk2dgXs&" + 
                    "order_by=PKN&" + 
                    "package_name=z1gzYV0&" + 
                    "status=vtkVk")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/R1w8b/clusters")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .post(baseUrlOfSut + "/api/v4/projects/y8/runners/reset_registration_token")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_776() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"content\": \"feBsuDxlGso\", " + 
                    " \"title\": \"z2Lo\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v4/groups/KdojcgIoxzce3K/wikis/66906sALXBRcR8_8")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/jlU2LBYmrJHDO7/integrations/pipelines-email")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/group_repository_storage_moves/860")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .delete(baseUrlOfSut + "/api/v4/projects/Ot0m/integrations/mock-ci")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_777() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/sI0x/pages/domains")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v4/groups/aRRd8lH/wikis/attachments")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/v4/groups/qC70iA0R3z4yP/milestones/585")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/projects/Xj/repository/merge_base?refs=z6")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "Bearer Bearer glpat-Dp_JE9mrhGcvxmpfoddL") // Fixed Headers
                .get(baseUrlOfSut + "/api/v4/groups/t8Dt1D_92bi8/wikis/fK?version=9DyJEuK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("404 Not Found"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
    }


}
