""" THIS IS AN AUTOMATICALLY GENERATED FILE!"""
from __future__ import print_function
import json
from engine import primitives
from engine.core import requests
from engine.errors import ResponseParsingException
from engine import dependencies

_projects__id__issues__issue_iid__award_emoji_post_id = dependencies.DynamicVariable("_projects__id__issues__issue_iid__award_emoji_post_id")

_projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id = dependencies.DynamicVariable("_projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id")

_projects__id__boards_post_id = dependencies.DynamicVariable("_projects__id__boards_post_id")

_projects__id__boards__board_id__lists_post_id = dependencies.DynamicVariable("_projects__id__boards__board_id__lists_post_id")

_broadcast_messages_post_id = dependencies.DynamicVariable("_broadcast_messages_post_id")

_projects__id__cluster_agents_post_id = dependencies.DynamicVariable("_projects__id__cluster_agents_post_id")

_projects__id__cluster_agents__agent_id__tokens_post_id = dependencies.DynamicVariable("_projects__id__cluster_agents__agent_id__tokens_post_id")

_projects__id__put_id = dependencies.DynamicVariable("_projects__id__put_id")

_users__id__custom_attributes__key__put_key = dependencies.DynamicVariable("_users__id__custom_attributes__key__put_key")

_projects__id__deploy_keys_post_id = dependencies.DynamicVariable("_projects__id__deploy_keys_post_id")

_projects__id__deploy_tokens_post_id = dependencies.DynamicVariable("_projects__id__deploy_tokens_post_id")

_groups__id__deploy_tokens_post_id = dependencies.DynamicVariable("_groups__id__deploy_tokens_post_id")

_projects__id__deployments_post_id = dependencies.DynamicVariable("_projects__id__deployments_post_id")

_projects__id__environments_post_id = dependencies.DynamicVariable("_projects__id__environments_post_id")

_groups__id__epics__epic_iid__issues__epic_issue_id__put_0_id = dependencies.DynamicVariable("_groups__id__epics__epic_iid__issues__epic_issue_id__put_0_id")

_groups__id__epics__epic_iid__epics_post_id = dependencies.DynamicVariable("_groups__id__epics__epic_iid__epics_post_id")

_groups__id__epics_post_id = dependencies.DynamicVariable("_groups__id__epics_post_id")

_groups__id__epics_post_iid = dependencies.DynamicVariable("_groups__id__epics_post_iid")

_projects__id__error_tracking_client_keys_post_id = dependencies.DynamicVariable("_projects__id__error_tracking_client_keys_post_id")

_projects__id__feature_flags_user_lists_post_iid = dependencies.DynamicVariable("_projects__id__feature_flags_user_lists_post_iid")

_projects__id__feature_flags_post_name = dependencies.DynamicVariable("_projects__id__feature_flags_post_name")

_projects__id__freeze_periods_post_id = dependencies.DynamicVariable("_projects__id__freeze_periods_post_id")

_geo_nodes_post_id = dependencies.DynamicVariable("_geo_nodes_post_id")

_groups__id__access_tokens_post_id = dependencies.DynamicVariable("_groups__id__access_tokens_post_id")

_groups__id__badges_post_id = dependencies.DynamicVariable("_groups__id__badges_post_id")

_groups__id__boards_post_id = dependencies.DynamicVariable("_groups__id__boards_post_id")

_groups__id__boards__board_id__lists_post_id = dependencies.DynamicVariable("_groups__id__boards__board_id__lists_post_id")

_groups__id__labels_post_id = dependencies.DynamicVariable("_groups__id__labels_post_id")

_groups__id__variables_post_key = dependencies.DynamicVariable("_groups__id__variables_post_key")

_groups__group_id__repository_storage_moves_post_id = dependencies.DynamicVariable("_groups__group_id__repository_storage_moves_post_id")

_groups__id__wikis__slug__put_slug = dependencies.DynamicVariable("_groups__id__wikis__slug__put_slug")

_groups__id__put_id = dependencies.DynamicVariable("_groups__id__put_id")

_groups__id__put_projects_0_id = dependencies.DynamicVariable("_groups__id__put_projects_0_id")

_groups__id__push_rule_post_author_email_regex = dependencies.DynamicVariable("_groups__id__push_rule_post_author_email_regex")

_groups__id__push_rule_post_branch_name_regex = dependencies.DynamicVariable("_groups__id__push_rule_post_branch_name_regex")

_groups__id__push_rule_post_commit_message_negative_regex = dependencies.DynamicVariable("_groups__id__push_rule_post_commit_message_negative_regex")

_groups__id__push_rule_post_commit_message_regex = dependencies.DynamicVariable("_groups__id__push_rule_post_commit_message_regex")

_groups__id__push_rule_post_deny_delete_tag = dependencies.DynamicVariable("_groups__id__push_rule_post_deny_delete_tag")

_groups__id__push_rule_post_file_name_regex = dependencies.DynamicVariable("_groups__id__push_rule_post_file_name_regex")

_groups__id__push_rule_post_max_file_size = dependencies.DynamicVariable("_groups__id__push_rule_post_max_file_size")

_groups__id__push_rule_post_member_check = dependencies.DynamicVariable("_groups__id__push_rule_post_member_check")

_groups__id__push_rule_post_prevent_secrets = dependencies.DynamicVariable("_groups__id__push_rule_post_prevent_secrets")

_admin_clusters__cluster_id__put_id = dependencies.DynamicVariable("_admin_clusters__cluster_id__put_id")

_admin_ci_variables_post_key = dependencies.DynamicVariable("_admin_ci_variables_post_key")

_groups__id__invitations_post_email = dependencies.DynamicVariable("_groups__id__invitations_post_email")

_projects__id__issues_post_epic_iid = dependencies.DynamicVariable("_projects__id__issues_post_epic_iid")

_projects__id__issues_post_type = dependencies.DynamicVariable("_projects__id__issues_post_type")

_projects__id__issues__issue_iid__metric_images_post_id = dependencies.DynamicVariable("_projects__id__issues__issue_iid__metric_images_post_id")

_projects__id__labels_post_id = dependencies.DynamicVariable("_projects__id__labels_post_id")

_license_post_id = dependencies.DynamicVariable("_license_post_id")

_groups__id__epics__epic_iid__related_epics_post_source_epic_id = dependencies.DynamicVariable("_groups__id__epics__epic_iid__related_epics_post_source_epic_id")

_projects__id__managed_licenses_post_approval_status = dependencies.DynamicVariable("_projects__id__managed_licenses_post_approval_status")

_projects__id__managed_licenses_post_id = dependencies.DynamicVariable("_projects__id__managed_licenses_post_id")

_groups__id__members_post_id = dependencies.DynamicVariable("_groups__id__members_post_id")

_projects__id__approval_rules_post_id = dependencies.DynamicVariable("_projects__id__approval_rules_post_id")

_projects__id__merge_requests__merge_request_iid__approval_rules_post_id = dependencies.DynamicVariable("_projects__id__merge_requests__merge_request_iid__approval_rules_post_id")

_projects__id__merge_requests_post_iid = dependencies.DynamicVariable("_projects__id__merge_requests_post_iid")

_groups__id__debian_distributions_post_codename = dependencies.DynamicVariable("_groups__id__debian_distributions_post_codename")

_projects__id__debian_distributions_post_codename = dependencies.DynamicVariable("_projects__id__debian_distributions_post_codename")

_projects__id__pages_domains_post_auto_ssl_enabled = dependencies.DynamicVariable("_projects__id__pages_domains_post_auto_ssl_enabled")

_projects__id__pages_domains_post_domain = dependencies.DynamicVariable("_projects__id__pages_domains_post_domain")

_projects__id__pipeline_schedules_post_id = dependencies.DynamicVariable("_projects__id__pipeline_schedules_post_id")

_projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key = dependencies.DynamicVariable("_projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key")

_projects__id__triggers_post_id = dependencies.DynamicVariable("_projects__id__triggers_post_id")

_projects__id__access_tokens_post_id = dependencies.DynamicVariable("_projects__id__access_tokens_post_id")

_projects__id__badges_post_id = dependencies.DynamicVariable("_projects__id__badges_post_id")

_projects__id__clusters__cluster_id__put_id = dependencies.DynamicVariable("_projects__id__clusters__cluster_id__put_id")

_projects__id__clusters_user_post_enabled = dependencies.DynamicVariable("_projects__id__clusters_user_post_enabled")

_projects__id__clusters_user_post_id = dependencies.DynamicVariable("_projects__id__clusters_user_post_id")

_projects__id__clusters_user_post_name = dependencies.DynamicVariable("_projects__id__clusters_user_post_name")

_projects__id__variables_post_key = dependencies.DynamicVariable("_projects__id__variables_post_key")

_projects__project_id__repository_storage_moves_post_id = dependencies.DynamicVariable("_projects__project_id__repository_storage_moves_post_id")

_projects__id__snippets_post_id = dependencies.DynamicVariable("_projects__id__snippets_post_id")

_projects__id__put_id = dependencies.DynamicVariable("_projects__id__put_id")

_projects__id__protected_branches_post_code_owner_approval_required = dependencies.DynamicVariable("_projects__id__protected_branches_post_code_owner_approval_required")

_projects__id__protected_branches_post_name = dependencies.DynamicVariable("_projects__id__protected_branches_post_name")

_projects__id__protected_environments_post_name = dependencies.DynamicVariable("_projects__id__protected_environments_post_name")

_projects__id__protected_tags_post_name = dependencies.DynamicVariable("_projects__id__protected_tags_post_name")

_projects__id__releases_post_name = dependencies.DynamicVariable("_projects__id__releases_post_name")

_projects__id__releases__tag_name__assets_links_post_id = dependencies.DynamicVariable("_projects__id__releases__tag_name__assets_links_post_id")

_projects__id__remote_mirrors_post_id = dependencies.DynamicVariable("_projects__id__remote_mirrors_post_id")

_projects__id__repository_files__file_path__post_branch = dependencies.DynamicVariable("_projects__id__repository_files__file_path__post_branch")

_projects__id__repository_files__file_path__put_file_path = dependencies.DynamicVariable("_projects__id__repository_files__file_path__put_file_path")

_runners_post_id = dependencies.DynamicVariable("_runners_post_id")

_projects__id__runners_post_id = dependencies.DynamicVariable("_projects__id__runners_post_id")

_snippets__snippet_id__repository_storage_moves_post_id = dependencies.DynamicVariable("_snippets__snippet_id__repository_storage_moves_post_id")

_snippets_post_id = dependencies.DynamicVariable("_snippets_post_id")

_hooks_post_0_enable_ssl_verification = dependencies.DynamicVariable("_hooks_post_0_enable_ssl_verification")

_hooks_post_0_id = dependencies.DynamicVariable("_hooks_post_0_id")

_hooks_post_0_merge_requests_events = dependencies.DynamicVariable("_hooks_post_0_merge_requests_events")

_hooks_post_0_push_events = dependencies.DynamicVariable("_hooks_post_0_push_events")

_hooks_post_0_tag_push_events = dependencies.DynamicVariable("_hooks_post_0_tag_push_events")

_hooks_post_0_url = dependencies.DynamicVariable("_hooks_post_0_url")

_projects__id__repository_tags_post_name = dependencies.DynamicVariable("_projects__id__repository_tags_post_name")

_topics_post_id = dependencies.DynamicVariable("_topics_post_id")

_user_keys_post_expires_at = dependencies.DynamicVariable("_user_keys_post_expires_at")

_user_keys_post_key = dependencies.DynamicVariable("_user_keys_post_key")

_user_keys_post_title = dependencies.DynamicVariable("_user_keys_post_title")

_user_gpg_keys_post_0_id = dependencies.DynamicVariable("_user_gpg_keys_post_0_id")

_users__id__gpg_keys_post_0_id = dependencies.DynamicVariable("_users__id__gpg_keys_post_0_id")

_user_emails_post_email = dependencies.DynamicVariable("_user_emails_post_email")

_user_emails_post_id = dependencies.DynamicVariable("_user_emails_post_id")

_users__user_id__impersonation_tokens_post_id = dependencies.DynamicVariable("_users__user_id__impersonation_tokens_post_id")

_security_vulnerability_exports_post_id = dependencies.DynamicVariable("_security_vulnerability_exports_post_id")

def parse_projectsidissuesissue_iidaward_emojipost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7262 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7262 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7262):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7262:
        dependencies.set_variable("_projects__id__issues__issue_iid__award_emoji_post_id", temp_7262)


def parse_projectsidissuesissue_iidnotesnote_idaward_emojipost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8173 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8173 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8173):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8173:
        dependencies.set_variable("_projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id", temp_8173)


def parse_projectsidboardspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7680 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7680 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7680):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7680:
        dependencies.set_variable("_projects__id__boards_post_id", temp_7680)


def parse_projectsidboardsboard_idlistspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_5581 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_5581 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_5581):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_5581:
        dependencies.set_variable("_projects__id__boards__board_id__lists_post_id", temp_5581)


def parse_broadcast_messagespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2060 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2060 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2060):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2060:
        dependencies.set_variable("_broadcast_messages_post_id", temp_2060)


def parse_projectsidcluster_agentspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_5588 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_5588 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_5588):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_5588:
        dependencies.set_variable("_projects__id__cluster_agents_post_id", temp_5588)


def parse_projectsidcluster_agentsagent_idtokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9060 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9060 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9060):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9060:
        dependencies.set_variable("_projects__id__cluster_agents__agent_id__tokens_post_id", temp_9060)


def parse_projectsidput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4421 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4421 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4421):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4421:
        dependencies.set_variable("_projects__id__put_id", temp_4421)


def parse_usersidcustom_attributeskeyput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9775 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9775 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9775):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9775:
        dependencies.set_variable("_users__id__custom_attributes__key__put_key", temp_9775)


def parse_projectsiddeploy_keyspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2737 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2737 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2737):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2737:
        dependencies.set_variable("_projects__id__deploy_keys_post_id", temp_2737)


def parse_projectsiddeploy_tokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2919 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2919 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2919):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2919:
        dependencies.set_variable("_projects__id__deploy_tokens_post_id", temp_2919)


def parse_groupsiddeploy_tokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4673 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4673 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4673):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4673:
        dependencies.set_variable("_groups__id__deploy_tokens_post_id", temp_4673)


def parse_projectsiddeploymentspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6326 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6326 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6326):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6326:
        dependencies.set_variable("_projects__id__deployments_post_id", temp_6326)


def parse_projectsidenvironmentspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4695 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4695 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4695):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4695:
        dependencies.set_variable("_projects__id__environments_post_id", temp_4695)


def parse_groupsidepicsepic_iidissuesepic_issue_idput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9821 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9821 = str(data[0]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9821):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9821:
        dependencies.set_variable("_groups__id__epics__epic_iid__issues__epic_issue_id__put_0_id", temp_9821)


def parse_groupsidepicsepic_iidepicspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_303 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_303 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_303):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_303:
        dependencies.set_variable("_groups__id__epics__epic_iid__epics_post_id", temp_303)


def parse_groupsidepicspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8623 = None
    temp_9953 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8623 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_9953 = str(data["iid"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8623 or temp_9953):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8623:
        dependencies.set_variable("_groups__id__epics_post_id", temp_8623)
    if temp_9953:
        dependencies.set_variable("_groups__id__epics_post_iid", temp_9953)


def parse_projectsiderror_trackingclient_keyspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6771 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6771 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6771):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6771:
        dependencies.set_variable("_projects__id__error_tracking_client_keys_post_id", temp_6771)


def parse_projectsidfeature_flags_user_listspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_3145 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_3145 = str(data["iid"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_3145):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_3145:
        dependencies.set_variable("_projects__id__feature_flags_user_lists_post_iid", temp_3145)


def parse_projectsidfeature_flagspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8169 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8169 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8169):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8169:
        dependencies.set_variable("_projects__id__feature_flags_post_name", temp_8169)


def parse_projectsidfreeze_periodspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8480 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8480 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8480):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8480:
        dependencies.set_variable("_projects__id__freeze_periods_post_id", temp_8480)


def parse_geo_nodespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9919 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9919 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9919):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9919:
        dependencies.set_variable("_geo_nodes_post_id", temp_9919)


def parse_groupsidaccess_tokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_326 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_326 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_326):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_326:
        dependencies.set_variable("_groups__id__access_tokens_post_id", temp_326)


def parse_groupsidbadgespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6999 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6999 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6999):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6999:
        dependencies.set_variable("_groups__id__badges_post_id", temp_6999)


def parse_groupsidboardspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_5262 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_5262 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_5262):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_5262:
        dependencies.set_variable("_groups__id__boards_post_id", temp_5262)


def parse_groupsidboardsboard_idlistspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9340 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9340 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9340):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9340:
        dependencies.set_variable("_groups__id__boards__board_id__lists_post_id", temp_9340)


def parse_groupsidlabelspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6876 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6876 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6876):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6876:
        dependencies.set_variable("_groups__id__labels_post_id", temp_6876)


def parse_groupsidvariablespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_5468 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_5468 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_5468):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_5468:
        dependencies.set_variable("_groups__id__variables_post_key", temp_5468)


def parse_groupsgroup_idrepository_storage_movespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_811 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_811 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_811):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_811:
        dependencies.set_variable("_groups__group_id__repository_storage_moves_post_id", temp_811)


def parse_groupsidwikisslugput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1871 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1871 = str(data["slug"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1871):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1871:
        dependencies.set_variable("_groups__id__wikis__slug__put_slug", temp_1871)


def parse_groupsidput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4533 = None
    temp_2971 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4533 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_2971 = str(data["projects"][0]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4533 or temp_2971):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4533:
        dependencies.set_variable("_groups__id__put_id", temp_4533)
    if temp_2971:
        dependencies.set_variable("_groups__id__put_projects_0_id", temp_2971)


def parse_groupsidpush_rulepost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9885 = None
    temp_6426 = None
    temp_7629 = None
    temp_303 = None
    temp_3810 = None
    temp_3431 = None
    temp_9574 = None
    temp_5051 = None
    temp_7159 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9885 = str(data["author_email_regex"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_6426 = str(data["branch_name_regex"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_7629 = str(data["commit_message_negative_regex"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_303 = str(data["commit_message_regex"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_3810 = str(data["deny_delete_tag"])
            temp_3810 = temp_3810.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_3431 = str(data["file_name_regex"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_9574 = str(data["max_file_size"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_5051 = str(data["member_check"])
            temp_5051 = temp_5051.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_7159 = str(data["prevent_secrets"])
            temp_7159 = temp_7159.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9885 or temp_6426 or temp_7629 or temp_303 or temp_3810 or temp_3431 or temp_9574 or temp_5051 or temp_7159):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9885:
        dependencies.set_variable("_groups__id__push_rule_post_author_email_regex", temp_9885)
    if temp_6426:
        dependencies.set_variable("_groups__id__push_rule_post_branch_name_regex", temp_6426)
    if temp_7629:
        dependencies.set_variable("_groups__id__push_rule_post_commit_message_negative_regex", temp_7629)
    if temp_303:
        dependencies.set_variable("_groups__id__push_rule_post_commit_message_regex", temp_303)
    if temp_3810:
        dependencies.set_variable("_groups__id__push_rule_post_deny_delete_tag", temp_3810)
    if temp_3431:
        dependencies.set_variable("_groups__id__push_rule_post_file_name_regex", temp_3431)
    if temp_9574:
        dependencies.set_variable("_groups__id__push_rule_post_max_file_size", temp_9574)
    if temp_5051:
        dependencies.set_variable("_groups__id__push_rule_post_member_check", temp_5051)
    if temp_7159:
        dependencies.set_variable("_groups__id__push_rule_post_prevent_secrets", temp_7159)


def parse_adminclusterscluster_idput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1189 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1189 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1189):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1189:
        dependencies.set_variable("_admin_clusters__cluster_id__put_id", temp_1189)


def parse_admincivariablespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2734 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2734 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2734):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2734:
        dependencies.set_variable("_admin_ci_variables_post_key", temp_2734)


def parse_groupsidinvitationspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9070 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9070 = str(data["email"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9070):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9070:
        dependencies.set_variable("_groups__id__invitations_post_email", temp_9070)


def parse_projectsidissuespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7947 = None
    temp_3371 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7947 = str(data["epic"]["iid"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_3371 = str(data["type"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7947 or temp_3371):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7947:
        dependencies.set_variable("_projects__id__issues_post_epic_iid", temp_7947)
    if temp_3371:
        dependencies.set_variable("_projects__id__issues_post_type", temp_3371)


def parse_projectsidissuesissue_iidmetric_imagespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4572 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4572 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4572):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4572:
        dependencies.set_variable("_projects__id__issues__issue_iid__metric_images_post_id", temp_4572)


def parse_projectsidlabelspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1468 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1468 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1468):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1468:
        dependencies.set_variable("_projects__id__labels_post_id", temp_1468)


def parse_licensepost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2213 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2213 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2213):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2213:
        dependencies.set_variable("_license_post_id", temp_2213)


def parse_groupsidepicsepic_iidrelated_epicspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4100 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4100 = str(data["source_epic"]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4100):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4100:
        dependencies.set_variable("_groups__id__epics__epic_iid__related_epics_post_source_epic_id", temp_4100)


def parse_projectsidmanaged_licensespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7187 = None
    temp_6198 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7187 = str(data["approval_status"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_6198 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7187 or temp_6198):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7187:
        dependencies.set_variable("_projects__id__managed_licenses_post_approval_status", temp_7187)
    if temp_6198:
        dependencies.set_variable("_projects__id__managed_licenses_post_id", temp_6198)


def parse_groupsidmemberspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4879 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4879 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4879):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4879:
        dependencies.set_variable("_groups__id__members_post_id", temp_4879)


def parse_projectsidapproval_rulespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1949 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1949 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1949):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1949:
        dependencies.set_variable("_projects__id__approval_rules_post_id", temp_1949)


def parse_projectsidmerge_requestsmerge_request_iidapproval_rulespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8781 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8781 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8781):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8781:
        dependencies.set_variable("_projects__id__merge_requests__merge_request_iid__approval_rules_post_id", temp_8781)


def parse_projectsidmerge_requestspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8254 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8254 = str(data["iid"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8254):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8254:
        dependencies.set_variable("_projects__id__merge_requests_post_iid", temp_8254)


def parse_groupsiddebian_distributionspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7353 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7353 = str(data["codename"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7353):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7353:
        dependencies.set_variable("_groups__id__debian_distributions_post_codename", temp_7353)


def parse_projectsiddebian_distributionspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8582 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8582 = str(data["codename"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8582):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8582:
        dependencies.set_variable("_projects__id__debian_distributions_post_codename", temp_8582)


def parse_projectsidpagesdomainspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6797 = None
    temp_6248 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6797 = str(data["auto_ssl_enabled"])
            temp_6797 = temp_6797.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_6248 = str(data["domain"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6797 or temp_6248):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6797:
        dependencies.set_variable("_projects__id__pages_domains_post_auto_ssl_enabled", temp_6797)
    if temp_6248:
        dependencies.set_variable("_projects__id__pages_domains_post_domain", temp_6248)


def parse_projectsidpipeline_schedulespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2184 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2184 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2184):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2184:
        dependencies.set_variable("_projects__id__pipeline_schedules_post_id", temp_2184)


def parse_projectsidpipeline_schedulespipeline_schedule_idvariablespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8953 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8953 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8953):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8953:
        dependencies.set_variable("_projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key", temp_8953)


def parse_projectsidtriggerspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8964 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8964 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8964):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8964:
        dependencies.set_variable("_projects__id__triggers_post_id", temp_8964)


def parse_projectsidaccess_tokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_865 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_865 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_865):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_865:
        dependencies.set_variable("_projects__id__access_tokens_post_id", temp_865)


def parse_projectsidbadgespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8385 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8385 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8385):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8385:
        dependencies.set_variable("_projects__id__badges_post_id", temp_8385)


def parse_projectsidclusterscluster_idput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1701 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1701 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1701):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1701:
        dependencies.set_variable("_projects__id__clusters__cluster_id__put_id", temp_1701)


def parse_projectsidclustersuserpost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6441 = None
    temp_8268 = None
    temp_2191 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6441 = str(data["enabled"])
            temp_6441 = temp_6441.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_8268 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_2191 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6441 or temp_8268 or temp_2191):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6441:
        dependencies.set_variable("_projects__id__clusters_user_post_enabled", temp_6441)
    if temp_8268:
        dependencies.set_variable("_projects__id__clusters_user_post_id", temp_8268)
    if temp_2191:
        dependencies.set_variable("_projects__id__clusters_user_post_name", temp_2191)


def parse_projectsidvariablespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9999 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9999 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9999):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9999:
        dependencies.set_variable("_projects__id__variables_post_key", temp_9999)


def parse_projectsproject_idrepository_storage_movespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4813 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4813 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4813):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4813:
        dependencies.set_variable("_projects__project_id__repository_storage_moves_post_id", temp_4813)


def parse_projectsidsnippetspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6522 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6522 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6522):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6522:
        dependencies.set_variable("_projects__id__snippets_post_id", temp_6522)


def parse_projectsidput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7197 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7197 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7197):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7197:
        dependencies.set_variable("_projects__id__put_id", temp_7197)


def parse_projectsidprotected_branchespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8094 = None
    temp_1009 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8094 = str(data["code_owner_approval_required"])
            temp_8094 = temp_8094.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_1009 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8094 or temp_1009):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8094:
        dependencies.set_variable("_projects__id__protected_branches_post_code_owner_approval_required", temp_8094)
    if temp_1009:
        dependencies.set_variable("_projects__id__protected_branches_post_name", temp_1009)


def parse_projectsidprotected_environmentspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7290 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7290 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7290):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7290:
        dependencies.set_variable("_projects__id__protected_environments_post_name", temp_7290)


def parse_projectsidprotected_tagspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_7184 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_7184 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_7184):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_7184:
        dependencies.set_variable("_projects__id__protected_tags_post_name", temp_7184)


def parse_projectsidreleasespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1255 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1255 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1255):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1255:
        dependencies.set_variable("_projects__id__releases_post_name", temp_1255)


def parse_projectsidreleasestag_nameassetslinkspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9051 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9051 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9051):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9051:
        dependencies.set_variable("_projects__id__releases__tag_name__assets_links_post_id", temp_9051)


def parse_projectsidremote_mirrorspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1891 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1891 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1891):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1891:
        dependencies.set_variable("_projects__id__remote_mirrors_post_id", temp_1891)


def parse_projectsidrepositoryfilesfile_pathpost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4768 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4768 = str(data["branch"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4768):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4768:
        dependencies.set_variable("_projects__id__repository_files__file_path__post_branch", temp_4768)


def parse_projectsidrepositoryfilesfile_pathput(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_5407 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_5407 = str(data["file_path"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_5407):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_5407:
        dependencies.set_variable("_projects__id__repository_files__file_path__put_file_path", temp_5407)


def parse_runnerspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_3255 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_3255 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_3255):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_3255:
        dependencies.set_variable("_runners_post_id", temp_3255)


def parse_projectsidrunnerspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6710 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6710 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6710):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6710:
        dependencies.set_variable("_projects__id__runners_post_id", temp_6710)


def parse_snippetssnippet_idrepository_storage_movespost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_4683 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_4683 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_4683):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_4683:
        dependencies.set_variable("_snippets__snippet_id__repository_storage_moves_post_id", temp_4683)


def parse_snippetspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8334 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8334 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8334):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8334:
        dependencies.set_variable("_snippets_post_id", temp_8334)


def parse_hookspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_8092 = None
    temp_7936 = None
    temp_7645 = None
    temp_9375 = None
    temp_2949 = None
    temp_5227 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_8092 = str(data[0]["enable_ssl_verification"])
            temp_8092 = temp_8092.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_7936 = str(data[0]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_7645 = str(data[0]["merge_requests_events"])
            temp_7645 = temp_7645.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_9375 = str(data[0]["push_events"])
            temp_9375 = temp_9375.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_2949 = str(data[0]["tag_push_events"])
            temp_2949 = temp_2949.lower()
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_5227 = str(data[0]["url"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_8092 or temp_7936 or temp_7645 or temp_9375 or temp_2949 or temp_5227):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_8092:
        dependencies.set_variable("_hooks_post_0_enable_ssl_verification", temp_8092)
    if temp_7936:
        dependencies.set_variable("_hooks_post_0_id", temp_7936)
    if temp_7645:
        dependencies.set_variable("_hooks_post_0_merge_requests_events", temp_7645)
    if temp_9375:
        dependencies.set_variable("_hooks_post_0_push_events", temp_9375)
    if temp_2949:
        dependencies.set_variable("_hooks_post_0_tag_push_events", temp_2949)
    if temp_5227:
        dependencies.set_variable("_hooks_post_0_url", temp_5227)


def parse_projectsidrepositorytagspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6633 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6633 = str(data["name"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6633):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6633:
        dependencies.set_variable("_projects__id__repository_tags_post_name", temp_6633)


def parse_topicspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_3325 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_3325 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_3325):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_3325:
        dependencies.set_variable("_topics_post_id", temp_3325)


def parse_userkeyspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_2867 = None
    temp_8206 = None
    temp_2225 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_2867 = str(data["expires_at"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_8206 = str(data["key"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_2225 = str(data["title"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_2867 or temp_8206 or temp_2225):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_2867:
        dependencies.set_variable("_user_keys_post_expires_at", temp_2867)
    if temp_8206:
        dependencies.set_variable("_user_keys_post_key", temp_8206)
    if temp_2225:
        dependencies.set_variable("_user_keys_post_title", temp_2225)


def parse_usergpg_keyspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_1868 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_1868 = str(data[0]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_1868):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_1868:
        dependencies.set_variable("_user_gpg_keys_post_0_id", temp_1868)


def parse_usersidgpg_keyspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_685 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_685 = str(data[0]["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_685):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_685:
        dependencies.set_variable("_users__id__gpg_keys_post_0_id", temp_685)


def parse_useremailspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6246 = None
    temp_6930 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6246 = str(data["email"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass


        try:
            temp_6930 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6246 or temp_6930):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6246:
        dependencies.set_variable("_user_emails_post_email", temp_6246)
    if temp_6930:
        dependencies.set_variable("_user_emails_post_id", temp_6930)


def parse_usersuser_idimpersonation_tokenspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_6303 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_6303 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_6303):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_6303:
        dependencies.set_variable("_users__user_id__impersonation_tokens_post_id", temp_6303)


def parse_securityvulnerability_exportspost(data, **kwargs):
    """ Automatically generated response parser """
    # Declare response variables
    temp_9276 = None

    if 'headers' in kwargs:
        headers = kwargs['headers']


    # Parse body if needed
    if data:

        try:
            data = json.loads(data)
        except Exception as error:
            raise ResponseParsingException("Exception parsing response, data was not valid json: {}".format(error))
        pass

    # Try to extract each dynamic object

        try:
            temp_9276 = str(data["id"])
            
        except Exception as error:
            # This is not an error, since some properties are not always returned
            pass



    # If no dynamic objects were extracted, throw.
    if not (temp_9276):
        raise ResponseParsingException("Error: all of the expected dynamic objects were not present in the response.")

    # Set dynamic variables
    if temp_9276:
        dependencies.set_variable("_security_vulnerability_exports_post_id", temp_9276)

req_collection = requests.RequestCollection([])
# Endpoint: /projects/{id}/issues/{issue_iid}/award_emoji, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/award_emoji"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/award_emoji, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "issue_iid":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidissuesissue_iidaward_emojipost,
            'dependencies':
            [
                _projects__id__issues__issue_iid__award_emoji_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/issues/{issue_iid}/award_emoji"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/award_emoji/{award_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__award_emoji_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/award_emoji/{award_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/award_emoji/{award_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__award_emoji_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/award_emoji/{award_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidissuesissue_iidnotesnote_idaward_emojipost,
            'dependencies':
            [
                _projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji/{award_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji/{award_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji/{award_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("award_emoji"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__notes__note_id__award_emoji_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji/{award_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidboardspost,
            'dependencies':
            [
                _projects__id__boards_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/boards"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "weight":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}/lists, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}/lists"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}/lists, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "label_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidboardsboard_idlistspost,
            'dependencies':
            [
                _projects__id__boards__board_id__lists_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/boards/{board_id}/lists"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}/lists/{list_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}/lists/{list_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "position":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/boards/{board_id}/lists/{list_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/branches, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("branches"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/branches"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/branches, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("branches"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/branches"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/branches/{branch}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("branches"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/branches/{branch}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/branches/{branch}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("branches"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/branches/{branch}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/merged_branches, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merged_branches"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/merged_branches"
)
req_collection.add_request(request)

# Endpoint: /broadcast_messages, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("broadcast_messages"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/broadcast_messages"
)
req_collection.add_request(request)

# Endpoint: /broadcast_messages, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("broadcast_messages"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "starts_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "ends_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "font":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_access_levels":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "target_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "broadcast_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "dismissable":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_broadcast_messagespost,
            'dependencies':
            [
                _broadcast_messages_post_id.writer()
            ]
        }

    },

],
requestId="/broadcast_messages"
)
req_collection.add_request(request)

# Endpoint: /broadcast_messages/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("broadcast_messages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_broadcast_messages_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/broadcast_messages/{id}"
)
req_collection.add_request(request)

# Endpoint: /broadcast_messages/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("broadcast_messages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_broadcast_messages_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "starts_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "ends_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "font":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_access_levels":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "target_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "broadcast_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "dismissable":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/broadcast_messages/{id}"
)
req_collection.add_request(request)

# Endpoint: /broadcast_messages/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("broadcast_messages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_broadcast_messages_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/broadcast_messages/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidcluster_agentspost,
            'dependencies':
            [
                _projects__id__cluster_agents_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/cluster_agents"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents/{agent_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents/{agent_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}/tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents/{agent_id}/tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}/tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidcluster_agentsagent_idtokenspost,
            'dependencies':
            [
                _projects__id__cluster_agents__agent_id__tokens_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/cluster_agents/{agent_id}/tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents__agent_id__tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cluster_agents"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__cluster_agents__agent_id__tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("ref_name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("since="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("until="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("all="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_stats="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("first_parent="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("trailers="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_project":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "actions[]":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "author_email":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "stats":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "force":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("stats="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/refs, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("refs"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/refs"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/cherry_pick, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cherry_pick"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "dry_run":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/cherry_pick"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/revert, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("revert"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "dry_run":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/revert"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/diff, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("diff"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/diff"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/comments, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("comments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/comments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/comments, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("comments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "line":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "line_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/comments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/statuses, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("statuses"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("stage="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("all="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/statuses"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/statuses/{sha}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("statuses"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "state":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "name or context":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "coverage":"""),
    primitives.restler_fuzzable_number("1.23"),
    primitives.restler_static_string(""",
    "pipeline_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/statuses/{sha}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/commits/{sha}/signature, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("signature"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/commits/{sha}/signature"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "container_registry_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidput,
            'dependencies':
            [
                _projects__id__put_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("tags="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tags_count="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/registry/repositories, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/registry/repositories"
)
req_collection.add_request(request)

# Endpoint: /registry/repositories/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("tags="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tags_count="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("size="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/registry/repositories/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories/{repository_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories/{repository_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories/{repository_id}/tags, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories/{repository_id}/tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories/{repository_id}/tags, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("name_regex="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name_regex_delete="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("name_regex_keep="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("keep_n="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("older_than="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories/{repository_id}/tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("registry"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repositories"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /v2/_catalog, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("v2"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("_catalog"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/v2/_catalog"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/custom_attributes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom_attributes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/custom_attributes"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/custom_attributes/{key}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom_attributes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__id__custom_attributes__key__put_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/custom_attributes/{key}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/custom_attributes/{key}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom_attributes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("key", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_usersidcustom_attributeskeyput,
            'dependencies':
            [
                _users__id__custom_attributes__key__put_key.writer()
            ]
        }

    },

],
requestId="/users/{id}/custom_attributes/{key}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/custom_attributes/{key}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom_attributes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__id__custom_attributes__key__put_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/custom_attributes/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/dependencies, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("dependencies"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("package_manager="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/dependencies"
)
req_collection.add_request(request)

# Endpoint: /deploy_keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("public="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/deploy_keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "can_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsiddeploy_keyspost,
            'dependencies':
            [
                _projects__id__deploy_keys_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/deploy_keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_keys/{key_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deploy_keys_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_keys/{key_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deploy_keys_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "can_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deploy_keys_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /deploy_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("active="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/deploy_tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("active="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsiddeploy_tokenspost,
            'dependencies':
            [
                _projects__id__deploy_tokens_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/deploy_tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_tokens/{token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deploy_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deploy_tokens/{token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deploy_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deploy_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/deploy_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("active="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/deploy_tokens"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/deploy_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsiddeploy_tokenspost,
            'dependencies':
            [
                _groups__id__deploy_tokens_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/deploy_tokens"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/deploy_tokens/{token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__deploy_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/deploy_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/deploy_tokens/{token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deploy_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__deploy_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/deploy_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("environment="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deployments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "environment":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tag":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "status":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsiddeploymentspost,
            'dependencies':
            [
                _projects__id__deployments_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/deployments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments/{deployment_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deployments_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deployments/{deployment_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments/{deployment_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deployments_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "status":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deployments/{deployment_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments/{deployment_id}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deployments_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deployments/{deployment_id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/deployments/{deployment_id}/approval, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deployments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__deployments_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "status":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "comment":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "represented_as":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/deployments/{deployment_id}/approval"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions/{discussion_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions/{discussion_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(""",
    "position[base_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[start_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[head_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[position_type]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[old_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[old_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[width]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[height]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[x]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[y]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("discussion_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "resolved":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "resolved":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(""",
    "position[base_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[start_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[head_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[position_type]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[old_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[old_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[width]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[height]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[x]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[y]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions/{discussion_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions/{discussion_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "note_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discussions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("states="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "external_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tier":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidenvironmentspost,
            'dependencies':
            [
                _projects__id__environments_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/environments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments/{environment_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__environments_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments/{environment_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments/{environment_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__environments_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "external_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tier":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments/{environment_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments/{environment_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__environments_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments/{environment_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments/review_apps, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("review_apps"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("limit="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("dry_run="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments/review_apps"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/environments/{environment_id}/stop, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__environments_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("stop"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/environments/{environment_id}/stop"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/issues"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/issues/{issue_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/issues/{issue_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/issues/{epic_issue_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics__epic_iid__issues__epic_issue_id__put_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/issues/{epic_issue_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/issues/{epic_issue_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("epic_issue_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "move_before_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "move_after_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidepicsepic_iidissuesepic_issue_idput,
            'dependencies':
            [
                _groups__id__epics__epic_iid__issues__epic_issue_id__put_0_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/epics/{epic_iid}/issues/{epic_issue_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/epics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/epics, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidepicsepic_iidepicspost,
            'dependencies':
            [
                _groups__id__epics__epic_iid__epics_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/epics/{epic_iid}/epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/epics/{child_epic_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics__epic_iid__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/epics/{child_epic_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/epics/{child_epic_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics__epic_iid__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "move_before_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "move_after_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/epics/{child_epic_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/epics/{child_epic_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics__epic_iid__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/epics/{child_epic_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_ancestor_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_descendant_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date_is_fixed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "start_date_fixed":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date_is_fixed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "due_date_fixed":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "parent_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidepicspost,
            'dependencies':
            [
                _groups__id__epics_post_id.writer(),
                _groups__id__epics_post_iid.writer()
            ]
        }

    },

],
requestId="/groups/{id}/epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "add_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date_fixed":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date_is_fixed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "parent_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "remove_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date_fixed":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date_is_fixed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "state_event":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "updated_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/todo, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/todo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/error_tracking/settings, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("error_tracking"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/error_tracking/settings"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/error_tracking/settings, method: Patch
request = requests.Request([
    primitives.restler_static_string("PATCH "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("error_tracking"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "integrated":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/error_tracking/settings"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/error_tracking/client_keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("error_tracking"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("client_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/error_tracking/client_keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/error_tracking/client_keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("error_tracking"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("client_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsiderror_trackingclient_keyspost,
            'dependencies':
            [
                _projects__id__error_tracking_client_keys_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/error_tracking/client_keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/error_tracking/client_keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("error_tracking"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("client_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__error_tracking_client_keys_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/error_tracking/client_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("events"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("action="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("target_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/events"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("events"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("action="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("target_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("per_page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/events"
)
req_collection.add_request(request)

# Endpoint: /projects/{project_id}/events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("events"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("action="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("target_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{project_id}/events"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags_user_lists, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags_user_lists"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags_user_lists"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags_user_lists, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags_user_lists"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "user_xids":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidfeature_flags_user_listspost,
            'dependencies':
            [
                _projects__id__feature_flags_user_lists_post_iid.writer()
            ]
        }

    },

],
requestId="/projects/{id}/feature_flags_user_lists"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags_user_lists/{iid}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags_user_lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_user_lists_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags_user_lists/{iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags_user_lists/{iid}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags_user_lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_user_lists_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "user_xids":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags_user_lists/{iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags_user_lists/{iid}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags_user_lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_user_lists_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags_user_lists/{iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "strategies:scopes:environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidfeature_flagspost,
            'dependencies':
            [
                _projects__id__feature_flags_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/feature_flags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags/{feature_flag_name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags/{feature_flag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags/{feature_flag_name}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "strategies:scopes:environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags/{feature_flag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/feature_flags/{feature_flag_name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("feature_flags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__feature_flags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/feature_flags/{feature_flag_name}"
)
req_collection.add_request(request)

# Endpoint: /features, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("features"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/features"
)
req_collection.add_request(request)

# Endpoint: /features/definitions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("features"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("definitions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/features/definitions"
)
req_collection.add_request(request)

# Endpoint: /features/{name}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("features"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "feature_group":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "user":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "group":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "namespace":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "force":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/features/{name}"
)
req_collection.add_request(request)

# Endpoint: /features/{name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("features"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/features/{name}"
)
req_collection.add_request(request)

# Endpoint: /features/my_user_feature, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("features"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("my_user_feature"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/features/my_user_feature"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/freeze_periods, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("freeze_periods"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/freeze_periods"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/freeze_periods, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("freeze_periods"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "freeze_start":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "freeze_end":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron_timezone":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidfreeze_periodspost,
            'dependencies':
            [
                _projects__id__freeze_periods_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/freeze_periods"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/freeze_periods/{freeze_period_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("freeze_periods"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__freeze_periods_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/freeze_periods/{freeze_period_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/freeze_periods/{freeze_period_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("freeze_periods"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__freeze_periods_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "freeze_start":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "freeze_end":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron_timezone":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/freeze_periods/{freeze_period_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/freeze_periods/{freeze_period_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("freeze_periods"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__freeze_periods_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/freeze_periods/{freeze_period_id}"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "primary":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "internal_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "repos_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "verification_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "container_repositories_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "sync_object_storage":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "selective_sync_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "selective_sync_shards":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "selective_sync_namespace_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "minimum_reverification_interval":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_geo_nodespost,
            'dependencies':
            [
                _geo_nodes_post_id.writer()
            ]
        }

    },

],
requestId="/geo_nodes"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_geo_nodes_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/{id}"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_geo_nodes_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "internal_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "repos_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "verification_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "container_repositories_max_capacity":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "sync_object_storage":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "selective_sync_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "selective_sync_shards":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "selective_sync_namespace_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "minimum_reverification_interval":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/{id}"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_geo_nodes_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/{id}"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/{id}/repair, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_geo_nodes_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repair"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/{id}/repair"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/status, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("status"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/status"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/{id}/status, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_geo_nodes_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("status"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/{id}/status"
)
req_collection.add_request(request)

# Endpoint: /geo_nodes/current/failures, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("geo_nodes"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("current"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("failures"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("failure_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/geo_nodes/current/failures"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/access_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/access_tokens"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/access_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_date("2019-06-26", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidaccess_tokenspost,
            'dependencies':
            [
                _groups__id__access_tokens_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/access_tokens"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/access_tokens/{token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__access_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/access_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/access_tokens/{token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__access_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/access_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /analytics/group_activity/issues_count, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("analytics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_activity"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues_count"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("group_path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/analytics/group_activity/issues_count"
)
req_collection.add_request(request)

# Endpoint: /analytics/group_activity/merge_requests_count, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("analytics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_activity"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests_count"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("group_path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/analytics/group_activity/merge_requests_count"
)
req_collection.add_request(request)

# Endpoint: /analytics/group_activity/new_members_count, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("analytics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_activity"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("new_members_count"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("group_path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/analytics/group_activity/new_members_count"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/badges"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "link_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "image_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidbadgespost,
            'dependencies':
            [
                _groups__id__badges_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/badges"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges/{badge_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges/{badge_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "link_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "image_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges/{badge_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/badges/render, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("render"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("link_url="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("image_url="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/badges/render"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidboardspost,
            'dependencies':
            [
                _groups__id__boards_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/boards"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "hide_backlog_list":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "hide_closed_list":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "weight":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}/lists, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}/lists"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}/lists, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "label_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidboardsboard_idlistspost,
            'dependencies':
            [
                _groups__id__boards__board_id__lists_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/boards/{board_id}/lists"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}/lists/{list_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}/lists/{list_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "position":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/boards/{board_id}/lists/{list_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("boards"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lists"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__boards__board_id__lists_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/boards/{board_id}/lists/{list_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/iterations, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("iterations"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_ancestors="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/iterations"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("with_counts="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_ancestor_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_descendant_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("only_group_labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidlabelspost,
            'dependencies':
            [
                _groups__id__labels_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/labels"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels/{label_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("include_ancestor_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_descendant_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("only_group_labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels/{label_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels/{label_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels/{label_id}/subscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("subscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels/{label_id}/subscribe"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/labels/{label_id}/unsubscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unsubscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/labels/{label_id}/unsubscribe"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/variables, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/variables"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/variables, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidvariablespost,
            'dependencies':
            [
                _groups__id__variables_post_key.writer()
            ]
        }

    },

],
requestId="/groups/{id}/variables"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/variables/{key}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/variables/{key}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "filter":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/variables/{key}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("title="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_parent_milestones="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("milestone_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "state_event":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}/issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}/issues"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/milestones/{milestone_id}/burndown_events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("burndown_events"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/milestones/{milestone_id}/burndown_events"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/releases, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/releases"
)
req_collection.add_request(request)

# Endpoint: /group_repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/group_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /group_repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "source_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/group_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /groups/{group_id}/repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{group_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /groups/{group_id}/repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsgroup_idrepository_storage_movespost,
            'dependencies':
            [
                _groups__group_id__repository_storage_moves_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{group_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /group_repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("group_repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/group_repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{group_id}/repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__group_id__repository_storage_moves_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{group_id}/repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/wikis, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("with_content="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/wikis"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/wikis/{slug}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__wikis__slug__put_slug.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("render_html="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("version="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/wikis/{slug}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/wikis/{slug}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("slug", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "format":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidwikisslugput,
            'dependencies':
            [
                _groups__id__wikis__slug__put_slug.writer()
            ]
        }

    },

],
requestId="/groups/{id}/wikis/{slug}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/wikis/{slug}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__wikis__slug__put_slug.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/wikis/{slug}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/wikis, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "format":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/wikis"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/wikis/attachments, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("wikis"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("attachments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "file":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/wikis/attachments"
)
req_collection.add_request(request)

# Endpoint: /groups, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups"
)
req_collection.add_request(request)

# Endpoint: /groups, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "auto_devops_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "default_branch_protection":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "emails_disabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "lfs_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "mentions_disabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "parent_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "project_creation_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "request_access_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "require_two_factor_authentication":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "share_with_group_lock":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "subgroup_creation_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "two_factor_grace_period":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "membership_lock":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "extra_shared_runners_minutes_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "shared_runners_minutes_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/subgroups, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("subgroups"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("skip_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("all_available="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/subgroups"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/descendant_groups, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("descendant_groups"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("skip_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("all_available="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/descendant_groups"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/projects, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("visibility="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("starred="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_issues_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_requests_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_shared="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_subgroups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_security_reports="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/projects"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/projects/shared, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("shared"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("visibility="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("starred="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_issues_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_requests_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/projects/shared"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_projects="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "auto_devops_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "default_branch_protection":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "emails_disabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "lfs_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "mentions_disabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "prevent_sharing_groups_outside_hierarchy":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "project_creation_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "request_access_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "require_two_factor_authentication":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "shared_runners_setting":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "share_with_group_lock":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "subgroup_creation_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "two_factor_grace_period":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "extra_shared_runners_minutes_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "file_template_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "membership_lock":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "prevent_forking_outside_group":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "shared_runners_minutes_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidput,
            'dependencies':
            [
                _groups__id__put_id.writer(),
                _groups__id__put_projects_0_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/avatar, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("avatar"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/avatar"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/projects/{project_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_projects_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/projects/{project_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/transfer, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("transfer"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "group_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/transfer"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/restore, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("restore"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/restore"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/provisioned_users, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("provisioned_users"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("active="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("blocked="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/provisioned_users"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/hooks, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/hooks"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/hooks, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_static_string(_hooks_post_0_url.reader(), quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_static_string(_hooks_post_0_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_static_string(_hooks_post_0_merge_requests_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_static_string(_hooks_post_0_tag_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "job_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "deployment_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "releases_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "subgroup_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_static_string(_hooks_post_0_enable_ssl_verification.reader(), quoted=False),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/hooks"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/hooks/{hook_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/hooks/{hook_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("hook_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_static_string(_hooks_post_0_url.reader(), quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_static_string(_hooks_post_0_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_static_string(_hooks_post_0_merge_requests_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_static_string(_hooks_post_0_tag_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "job_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "deployment_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "releases_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "subgroup_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_static_string(_hooks_post_0_enable_ssl_verification.reader(), quoted=False),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/hooks/{hook_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/ldap_sync, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ldap_sync"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/ldap_sync"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/ldap_group_links, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ldap_group_links"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/ldap_group_links"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/ldap_group_links, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ldap_group_links"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "cn":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "filter":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "group_access":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "provider":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/ldap_group_links"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/ldap_group_links, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ldap_group_links"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("cn="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("filter="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("provider="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/ldap_group_links"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/ldap_group_links/{cn}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ldap_group_links"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/ldap_group_links/{cn}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/share, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("share"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "group_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "group_access":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/share"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/share/{group_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("share"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/share/{group_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/push_rule, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/push_rule, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "deny_delete_tag":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "member_check":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "prevent_secrets":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "commit_message_regex":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_message_negative_regex":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "branch_name_regex":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_email_regex":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_name_regex":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "commit_committer_check":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reject_unsigned_commits":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidpush_rulepost,
            'dependencies':
            [
                _groups__id__push_rule_post_author_email_regex.writer(),
                _groups__id__push_rule_post_branch_name_regex.writer(),
                _groups__id__push_rule_post_commit_message_negative_regex.writer(),
                _groups__id__push_rule_post_commit_message_regex.writer(),
                _groups__id__push_rule_post_deny_delete_tag.writer(),
                _groups__id__push_rule_post_file_name_regex.writer(),
                _groups__id__push_rule_post_max_file_size.writer(),
                _groups__id__push_rule_post_member_check.writer(),
                _groups__id__push_rule_post_prevent_secrets.writer()
            ]
        }

    },

],
requestId="/groups/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/push_rule, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "deny_delete_tag":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_deny_delete_tag.reader(), quoted=False),
    primitives.restler_static_string(""",
    "member_check":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_member_check.reader(), quoted=False),
    primitives.restler_static_string(""",
    "prevent_secrets":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_prevent_secrets.reader(), quoted=False),
    primitives.restler_static_string(""",
    "commit_message_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "commit_message_negative_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_negative_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "branch_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_branch_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "author_email_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_author_email_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "file_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_file_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "max_file_size":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_max_file_size.reader(), quoted=False),
    primitives.restler_static_string(""",
    "commit_committer_check":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reject_unsigned_commits":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/push_rule, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /import/github, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("import"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("github"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "personal_access_token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "repo_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "new_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_namespace":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "github_hostname":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/import/github"
)
req_collection.add_request(request)

# Endpoint: /import/bitbucket_server, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("import"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bitbucket_server"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "bitbucket_server_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "bitbucket_server_username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "personal_access_token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "bitbucket_server_project":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "bitbucket_server_repo":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "new_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_namespace":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/import/bitbucket_server"
)
req_collection.add_request(request)

# Endpoint: /admin/clusters, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/clusters"
)
req_collection.add_request(request)

# Endpoint: /admin/clusters/{cluster_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_admin_clusters__cluster_id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /admin/clusters/{cluster_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("cluster_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "domain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "management_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "managed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[api_url]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[token]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[ca_cert]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[namespace]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_adminclusterscluster_idput,
            'dependencies':
            [
                _admin_clusters__cluster_id__put_id.writer()
            ]
        }

    },

],
requestId="/admin/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /admin/clusters/{cluster_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_admin_clusters__cluster_id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /admin/clusters/add, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("add"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "domain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "management_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "managed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[api_url]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[token]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[ca_cert]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[namespace]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[authorization_type]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/clusters/add"
)
req_collection.add_request(request)

# Endpoint: /admin/ci/variables, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/ci/variables"
)
req_collection.add_request(request)

# Endpoint: /admin/ci/variables, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_admincivariablespost,
            'dependencies':
            [
                _admin_ci_variables_post_key.writer()
            ]
        }

    },

],
requestId="/admin/ci/variables"
)
req_collection.add_request(request)

# Endpoint: /admin/ci/variables/{key}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_admin_ci_variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/ci/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /admin/ci/variables/{key}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_admin_ci_variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/ci/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /admin/ci/variables/{key}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("admin"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_admin_ci_variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/admin/ci/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/asana, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("asana"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "api_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "restrict_to_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/asana"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/asana, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("asana"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/asana"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/asana, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("asana"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/asana"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/assembla, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assembla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "subdomain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/assembla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/assembla, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assembla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/assembla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/assembla, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assembla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/assembla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bamboo, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bamboo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "bamboo_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "build_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "password":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bamboo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bamboo, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bamboo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bamboo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bamboo, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bamboo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bamboo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bugzilla, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bugzilla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_issue_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bugzilla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bugzilla, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bugzilla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bugzilla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/bugzilla, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bugzilla"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/bugzilla"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/buildkite, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("buildkite"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/buildkite"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/buildkite, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("buildkite"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/buildkite"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/buildkite, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("buildkite"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/buildkite"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/campfire, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("campfire"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "subdomain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "room":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/campfire"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/campfire, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("campfire"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/campfire"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/campfire, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("campfire"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/campfire"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/datadog, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("datadog"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "api_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "api_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "datadog_env":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "datadog_service":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "datadog_site":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "datadog_tags":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/datadog"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/datadog, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("datadog"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/datadog"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/datadog, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("datadog"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/datadog"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/unify-circuit, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unify-circuit"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/unify-circuit"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/unify-circuit, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unify-circuit"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/unify-circuit"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/unify-circuit, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unify-circuit"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/unify-circuit"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/webex-teams, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("webex-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/webex-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/webex-teams, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("webex-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/webex-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/webex-teams, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("webex-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/webex-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/custom-issue-tracker, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom-issue-tracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_issue_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/custom-issue-tracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/custom-issue-tracker, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom-issue-tracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/custom-issue-tracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/custom-issue-tracker, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("custom-issue-tracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/custom-issue-tracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/discord, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discord"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/discord"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/discord, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discord"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/discord"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/discord, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("discord"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/discord"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/drone-ci, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("drone-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "drone_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/drone-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/drone-ci, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("drone-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/drone-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/drone-ci, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("drone-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/drone-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/emails-on-push, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails-on-push"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "recipients":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "disable_diffs":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "send_from_committer_email":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/emails-on-push"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/emails-on-push, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails-on-push"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/emails-on-push"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/emails-on-push, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails-on-push"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/emails-on-push"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/ewm, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ewm"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_issue_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/ewm"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/ewm, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ewm"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/ewm"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/ewm, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ewm"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/ewm"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/confluence, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("confluence"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "confluence_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/confluence"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/confluence, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("confluence"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/confluence"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/confluence, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("confluence"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/confluence"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/external-wiki, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("external-wiki"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "external_wiki_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/external-wiki"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/external-wiki, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("external-wiki"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/external-wiki"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/external-wiki, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("external-wiki"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/external-wiki"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/flowdock, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("flowdock"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/flowdock"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/flowdock, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("flowdock"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/flowdock"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/flowdock, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("flowdock"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/flowdock"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/github, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("github"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "repository_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "static_context":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/github"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/github, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("github"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/github"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/github, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("github"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/github"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/hangouts-chat, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hangouts-chat"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "notify_only_default_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/hangouts-chat"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/hangouts-chat, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hangouts-chat"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/hangouts-chat"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/hangouts-chat, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hangouts-chat"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/hangouts-chat"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/irker, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("irker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "recipients":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "default_irc_uri":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "server_host":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "server_port":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "colorize_messages":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/irker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/irker, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("irker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/irker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/irker, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("irker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/irker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jira, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jira"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jira"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jira, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jira"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "api_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "password":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "jira_issue_transition_automatic":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "jira_issue_transition_id":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "comment_on_event_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jira"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jira, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jira"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jira"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack-slash-commands, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack-slash-commands, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack-slash-commands, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost-slash-commands, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost-slash-commands, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost-slash-commands, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost-slash-commands"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost-slash-commands"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/packagist, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packagist"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "server":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/packagist"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/packagist, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packagist"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/packagist"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/packagist, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packagist"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/packagist"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pipelines-email, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines-email"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "recipients":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "add_pusher":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_default_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pipelines-email"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pipelines-email, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines-email"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pipelines-email"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pipelines-email, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines-email"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pipelines-email"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pivotaltracker, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pivotaltracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "restrict_to_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pivotaltracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pivotaltracker, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pivotaltracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pivotaltracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pivotaltracker, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pivotaltracker"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pivotaltracker"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/prometheus, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("prometheus"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "api_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "google_iap_audience_client_id":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "google_iap_service_account_json":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/prometheus"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/prometheus, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("prometheus"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/prometheus"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/prometheus, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("prometheus"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/prometheus"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pushover, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pushover"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "api_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "user_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "priority":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "device":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "sound":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pushover"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pushover, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pushover"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pushover"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/pushover, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pushover"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/pushover"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/redmine, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("redmine"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_issue_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/redmine"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/redmine, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("redmine"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/redmine"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/redmine, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("redmine"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/redmine"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "notify_only_default_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issue_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "deployment_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "deployment_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issue_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "job_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_request_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/slack, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("slack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/slack"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/microsoft-teams, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("microsoft-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "notify_only_default_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/microsoft-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/microsoft-teams, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("microsoft-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/microsoft-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/microsoft-teams, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("microsoft-teams"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/microsoft-teams"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "webhook":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notify_only_broken_pipelines":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "notify_only_default_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "branches_to_be_notified":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issue_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential_issue_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_request_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "note_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential_note_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tag_push_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "pipeline_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_page_channel":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mattermost, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mattermost"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mattermost"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/teamcity, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("teamcity"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "teamcity_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "build_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "password":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/teamcity"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/teamcity, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("teamcity"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/teamcity"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/teamcity, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("teamcity"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/teamcity"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "jenkins_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "project_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "username":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "password":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins-deprecated, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins-deprecated"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins-deprecated"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins-deprecated, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins-deprecated"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins-deprecated"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/jenkins-deprecated, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jenkins-deprecated"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/jenkins-deprecated"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mock-ci, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mock-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "mock_service_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mock-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mock-ci, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mock-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mock-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/mock-ci, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mock-ci"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/mock-ci"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/youtrack, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("youtrack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "issues_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "project_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/youtrack"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/youtrack, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("youtrack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/youtrack"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/integrations/youtrack, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("integrations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("youtrack"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/integrations/youtrack"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/invitations, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("invitations"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "user_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "invite_source":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tasks_to_be_done":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "tasks_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidinvitationspost,
            'dependencies':
            [
                _groups__id__invitations_post_email.writer()
            ]
        }

    },

],
requestId="/groups/{id}/invitations"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/invitations, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("invitations"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("per_page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("query="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/invitations"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/invitations/{email}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("invitations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__invitations_post_email.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/invitations/{email}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/invitations/{email}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("invitations"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__invitations_post_email.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/invitations/{email}"
)
req_collection.add_request(request)

# Endpoint: /issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("due_date="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("epic_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("in="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("issue_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_title="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone_id="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("non_archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("weight="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/issues"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("due_date="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("epic_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("issue_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_title="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("non_archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("weight="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/issues"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("due_date="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("epic_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("issue_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iteration_title="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("weight="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "assignee_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "discussion_to_resolve":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "epic_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "epic_iid":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "iid":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "issue_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_request_to_resolve_discussions_of":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "weight":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidissuespost,
            'dependencies':
            [
                _projects__id__issues_post_epic_iid.writer(),
                _projects__id__issues_post_type.writer()
            ]
        }

    },

],
requestId="/projects/{id}/issues"
)
req_collection.add_request(request)

# Endpoint: /issues/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/issues/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "add_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assignee_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "discussion_locked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "epic_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "epic_iid":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "issue_type":"""),
    primitives.restler_static_string(_projects__id__issues_post_type.reader(), quoted=True),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "remove_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "state_event":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "updated_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "weight":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/reorder, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reorder"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "move_after_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "move_before_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/reorder"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/move, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("move"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "to_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/move"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/clone, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clone"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "to_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "with_notes":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/clone"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/subscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("subscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/subscribe"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/unsubscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unsubscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/unsubscribe"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/todo, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/todo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/time_estimate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("time_estimate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "duration":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/time_estimate"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/reset_time_estimate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_time_estimate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/reset_time_estimate"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/add_spent_time, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("add_spent_time"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "duration":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "summary":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/add_spent_time"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/reset_spent_time, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_spent_time"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/reset_spent_time"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/time_stats, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("time_stats"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/time_stats"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/related_merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("related_merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/related_merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/closed_by, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("closed_by"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/closed_by"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/participants, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("participants"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/participants"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/user_agent_detail, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_agent_detail"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/user_agent_detail"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/metric_images, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metric_images"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "file":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url_text":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidissuesissue_iidmetric_imagespost,
            'dependencies':
            [
                _projects__id__issues__issue_iid__metric_images_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/issues/{issue_iid}/metric_images"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/metric_images, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metric_images"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/metric_images"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/metric_images/{image_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metric_images"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__metric_images_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url_text":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/metric_images/{image_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/metric_images/{image_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metric_images"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues__issue_iid__metric_images_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/metric_images/{image_id}"
)
req_collection.add_request(request)

# Endpoint: /issues_statistics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues_statistics"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("epic_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("in="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/issues_statistics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/issues_statistics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues_statistics"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/issues_statistics"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues_statistics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues_statistics"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues_statistics"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/iterations, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("iterations"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_ancestors="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/iterations"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/jobs, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_retried="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/jobs"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/bridges, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("bridges"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/bridges"
)
req_collection.add_request(request)

# Endpoint: /job, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("job"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/job"
)
req_collection.add_request(request)

# Endpoint: /job/allowed_agents, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("job"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("allowed_agents"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("CI_JOB_TOKEN="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/job/allowed_agents"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}/trace, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("trace"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}/trace"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}/cancel, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cancel"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}/cancel"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}/retry, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("retry"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}/retry"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}/erase, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("erase"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}/erase"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/jobs/{job_id}/play, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("play"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "job_variables_attributes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/jobs/{job_id}/play"
)
req_collection.add_request(request)

# Endpoint: /keys/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/keys/{id}"
)
req_collection.add_request(request)

# Endpoint: /keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("fingerprint="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/keys"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("with_counts="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_ancestor_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "priority":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidlabelspost,
            'dependencies':
            [
                _projects__id__labels_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/labels"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("include_ancestor_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "new_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "color":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "priority":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}/promote, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("promote"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}/promote"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}/subscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("subscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}/subscribe"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/labels/{label_id}/unsubscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("labels"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__labels_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unsubscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/labels/{label_id}/unsubscribe"
)
req_collection.add_request(request)

# Endpoint: /license, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("license"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/license"
)
req_collection.add_request(request)

# Endpoint: /license, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("license"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "license":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_licensepost,
            'dependencies':
            [
                _license_post_id.writer()
            ]
        }

    },

],
requestId="/license"
)
req_collection.add_request(request)

# Endpoint: /licenses, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("licenses"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/licenses"
)
req_collection.add_request(request)

# Endpoint: /license/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("license"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_license_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/license/{id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/related_epics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("related_epics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/related_epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/related_epics, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("related_epics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "target_epic_iid":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "target_group_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "link_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidepicsepic_iidrelated_epicspost,
            'dependencies':
            [
                _groups__id__epics__epic_iid__related_epics_post_source_epic_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/epics/{epic_iid}/related_epics"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_iid}/related_epics/{related_epic_link_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("related_epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics__epic_iid__related_epics_post_source_epic_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_iid}/related_epics/{related_epic_link_id}"
)
req_collection.add_request(request)

# Endpoint: /ci/lint, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lint"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "include_merged_yaml":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "include_jobs":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/ci/lint"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/ci/lint, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lint"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "dry_run":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "include_jobs":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/ci/lint"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/ci/lint, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ci"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("lint"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("dry_run="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_jobs="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/ci/lint"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/managed_licenses, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("managed_licenses"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/managed_licenses"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/managed_licenses, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("managed_licenses"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approval_status":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidmanaged_licensespost,
            'dependencies':
            [
                _projects__id__managed_licenses_post_approval_status.writer(),
                _projects__id__managed_licenses_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/managed_licenses"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/managed_licenses/{managed_license_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("managed_licenses"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__managed_licenses_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/managed_licenses/{managed_license_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/managed_licenses/{managed_license_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("managed_licenses"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__managed_licenses_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/managed_licenses/{managed_license_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/managed_licenses/{managed_license_id}, method: Patch
request = requests.Request([
    primitives.restler_static_string("PATCH "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("managed_licenses"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__managed_licenses_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "approval_status":"""),
    primitives.restler_static_string(_projects__id__managed_licenses_post_approval_status.reader(), quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/managed_licenses/{managed_license_id}"
)
req_collection.add_request(request)

# Endpoint: /markdown, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("markdown"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "text":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "gfm":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "project":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/markdown"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("query="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("user_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "user_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "invite_source":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tasks_to_be_done":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "tasks_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsidmemberspost,
            'dependencies':
            [
                _groups__id__members_post_id.writer()
            ]
        }

    },

],
requestId="/groups/{id}/members"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/all, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("all"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("query="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("user_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/all"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("skip_subresources="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("unassign_issuables="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/all/{user_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("all"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/all/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/billable_members, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("billable_members"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_awaiting_members="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/billable_members"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/billable_members/{user_id}/memberships, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("billable_members"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("memberships"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/billable_members/{user_id}/memberships"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/billable_members/{user_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("billable_members"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/billable_members/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}/state, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("state"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "state":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}/state"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}/override, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("override"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}/override"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{user_id}/override, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("override"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{user_id}/override"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/{member_id}/approve, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__members_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approve"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/{member_id}/approve"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/members/approve_all, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("members"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approve_all"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/members/approve_all"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/pending_members, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pending_members"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/pending_members"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approvals, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approvals"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approvals"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approvals, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approvals"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "approvals_before_merge":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "reset_approvals_on_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "disable_overriding_approvers_per_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_author_approval":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_disable_committers_approval":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "require_password_to_approve":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approvals"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approval_rules, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approval_rules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approval_rules, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approvals_required":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "rule_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "user_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "group_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "protected_branch_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "report_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidapproval_rulespost,
            'dependencies':
            [
                _projects__id__approval_rules_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/approval_rules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approval_rules/{approval_rule_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approval_rules/{approval_rule_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approvals_required":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "user_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "group_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "protected_branch_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/approval_rules/{approval_rule_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approvals, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approvals"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approvals"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approvals, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approvals"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "approvals_required":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approvals"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_state, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_state"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_state"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_rules, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_rules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_rules, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approvals_required":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "approval_project_rule_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "user_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "group_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidmerge_requestsmerge_request_iidapproval_rulespost,
            'dependencies':
            [
                _projects__id__merge_requests__merge_request_iid__approval_rules_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_rules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests__merge_request_iid__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests__merge_request_iid__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approvals_required":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "user_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "group_ids":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approval_rules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests__merge_request_iid__approval_rules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/approve, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approve"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approval_password":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/approve"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/unapprove, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unapprove"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/unapprove"
)
req_collection.add_request(request)

# Endpoint: /merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("view="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_status_recheck="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approver_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approved_by_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("source_branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("target_branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("in="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("wip="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("environment="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("deployed_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("deployed_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("view="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_status_recheck="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approver_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approved_by_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "source_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "assignee_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "reviewer_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "target_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "remove_source_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "allow_collaboration":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "allow_maintainer_to_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "approvals_before_merge":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "squash":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidmerge_requestspost,
            'dependencies':
            [
                _projects__id__merge_requests_post_iid.writer()
            ]
        }

    },

],
requestId="/projects/{id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("milestone="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("view="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("labels="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_labels_details="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_status_recheck="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("created_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assignee_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approver_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("approved_by_ids="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("reviewer_username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("my_reaction_emoji="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("source_branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("target_branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("non_archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("not="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("render_html="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_diverged_commits_count="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_rebase_in_progress="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "target_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assignee_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "assignee_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "reviewer_ids":
    [
        """),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("""
    ],
    "milestone_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "add_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "remove_labels":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "state_event":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "remove_source_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "squash":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "discussion_locked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "allow_collaboration":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "allow_maintainer_to_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/participants, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("participants"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/participants"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/commits, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("commits"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/commits"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/changes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("changes"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("access_raw_diffs="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/changes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/pipelines, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/pipelines"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/pipelines, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/pipelines"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/merge, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "merge_commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "squash_commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "squash":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "should_remove_source_branch":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_when_pipeline_succeeds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/merge"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/merge_ref, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_ref"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/merge_ref"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cancel_merge_when_pipeline_succeeds"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/rebase, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("rebase"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "skip_ci":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/rebase"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/closes_issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("closes_issues"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/closes_issues"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/subscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("subscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/subscribe"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/unsubscribe, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unsubscribe"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/unsubscribe"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/todo, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todo"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/todo"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/versions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("versions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/versions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("versions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/time_estimate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("time_estimate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "duration":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/time_estimate"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_time_estimate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/add_spent_time, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("add_spent_time"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "duration":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "summary":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_spent_time"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/time_stats, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("time_stats"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/time_stats"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_trains, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_trains"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_trains"
)
req_collection.add_request(request)

# Endpoint: /environments/{id}/metrics_dashboard/annotations, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("environments"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metrics_dashboard"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("annotations"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "dashboard_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "starting_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ending_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/environments/{id}/metrics_dashboard/annotations"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/metrics/user_starred_dashboards, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metrics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_starred_dashboards"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "dashboard_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/metrics/user_starred_dashboards"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/metrics/user_starred_dashboards, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metrics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_starred_dashboards"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("dashboard_path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/metrics/user_starred_dashboards"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("iids[]="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("title="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_parent_milestones="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("milestone_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "due_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_date":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "state_event":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}/issues, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}/issues"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}/merge_requests, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}/merge_requests"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}/promote, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("promote"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}/promote"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/milestones/{milestone_id}/burndown_events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("milestones"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("burndown_events"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/milestones/{milestone_id}/burndown_events"
)
req_collection.add_request(request)

# Endpoint: /namespaces, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("namespaces"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned_only="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/namespaces"
)
req_collection.add_request(request)

# Endpoint: /namespaces/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("namespaces"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/namespaces/{id}"
)
req_collection.add_request(request)

# Endpoint: /namespaces/{namespace}/exists, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("namespaces"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("exists"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("parent_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/namespaces/{namespace}/exists"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/notes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/notes/{note_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/notes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "created_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_request_diff_sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/notes"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/notes, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/notes, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/notes"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/notes/{note_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/notes/{note_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("note_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "confidential":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/notes/{note_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notes"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/notes/{note_id}"
)
req_collection.add_request(request)

# Endpoint: /notification_settings, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notification_settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/notification_settings"
)
req_collection.add_request(request)

# Endpoint: /notification_settings, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notification_settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "notification_email":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "new_note":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reopen_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "close_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reassign_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issue_due":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_to_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reopen_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "close_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reassign_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "failed_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "fixed_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "success_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "moved_project":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_when_pipeline_succeeds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_epic":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/notification_settings"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/notification_settings, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notification_settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/notification_settings"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/notification_settings, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("notification_settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "new_note":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reopen_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "close_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reassign_issue":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issue_due":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_to_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reopen_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "close_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "reassign_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_merge_request":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "failed_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "fixed_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "success_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "moved_project":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_when_pipeline_succeeds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "new_epic":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/notification_settings"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/packages, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("package_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("package_name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_versionless="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/packages"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/packages, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("exclude_subgroups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("package_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("package_name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_versionless="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/packages"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/packages/{package_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/packages/{package_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/packages/{package_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/packages/{package_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/packages/{package_id}/package_files, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("package_files"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/packages/{package_id}/package_files"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/packages/{package_id}/package_files/{package_file_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("packages"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("package_files"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/packages/{package_id}/package_files/{package_file_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("codename="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("suite="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/debian_distributions"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "codename":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "suite":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "origin":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "label":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "valid_time_duration_seconds":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_groupsiddebian_distributionspost,
            'dependencies':
            [
                _groups__id__debian_distributions_post_codename.writer()
            ]
        }

    },

],
requestId="/groups/{id}/debian_distributions"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions/{codename}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions/{codename}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "suite":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "origin":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "label":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "valid_time_duration_seconds":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions/{codename}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/debian_distributions/{codename}/key.asc, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("key.asc"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/debian_distributions/{codename}/key.asc"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("codename="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("suite="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/debian_distributions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "codename":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "suite":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "origin":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "label":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "valid_time_duration_seconds":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsiddebian_distributionspost,
            'dependencies':
            [
                _projects__id__debian_distributions_post_codename.writer()
            ]
        }

    },

],
requestId="/projects/{id}/debian_distributions"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions/{codename}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions/{codename}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "suite":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "origin":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "label":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "valid_time_duration_seconds":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions/{codename}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/debian_distributions/{codename}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/debian_distributions/{codename}/key.asc, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("debian_distributions"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__debian_distributions_post_codename.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("key.asc"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/debian_distributions/{codename}/key.asc"
)
req_collection.add_request(request)

# Endpoint: /pages/domains, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/pages/domains"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pages/domains, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pages/domains"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pages/domains, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "domain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "auto_ssl_enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "certificate":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "key":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidpagesdomainspost,
            'dependencies':
            [
                _projects__id__pages_domains_post_auto_ssl_enabled.writer(),
                _projects__id__pages_domains_post_domain.writer()
            ]
        }

    },

],
requestId="/projects/{id}/pages/domains"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pages/domains/{domain}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pages_domains_post_domain.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pages/domains/{domain}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pages/domains/{domain}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pages_domains_post_domain.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "auto_ssl_enabled":"""),
    primitives.restler_static_string(_projects__id__pages_domains_post_auto_ssl_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "certificate":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "key":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pages/domains/{domain}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pages/domains/{domain}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pages"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("domains"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pages_domains_post_domain.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pages/domains/{domain}"
)
req_collection.add_request(request)

# Endpoint: /personal_access_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("personal_access_tokens"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("user_id="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/personal_access_tokens"
)
req_collection.add_request(request)

# Endpoint: /personal_access_tokens/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("personal_access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/personal_access_tokens/{id}"
)
req_collection.add_request(request)

# Endpoint: /personal_access_tokens/self, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("personal_access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("self"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/personal_access_tokens/self"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron_timezone":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidpipeline_schedulespost,
            'dependencies':
            [
                _projects__id__pipeline_schedules_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/pipeline_schedules"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "cron_timezone":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("take_ownership"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("play"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidpipeline_schedulespipeline_schedule_idvariablespost,
            'dependencies':
            [
                _projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key.writer()
            ]
        }

    },

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline_schedules"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__pipeline_schedules__pipeline_schedule_id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/triggers, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("triggers"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/triggers"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/triggers, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("triggers"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidtriggerspost,
            'dependencies':
            [
                _projects__id__triggers_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/triggers"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/triggers/{trigger_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("triggers"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__triggers_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/triggers/{trigger_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/triggers/{trigger_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("triggers"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__triggers_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/triggers/{trigger_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/triggers/{trigger_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("triggers"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__triggers_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/triggers/{trigger_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("source="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sha="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("yaml_errors="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("username="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_after="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("updated_before="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/variables, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/variables"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/test_report, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("test_report"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/test_report"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/test_report_summary, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("test_report_summary"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/test_report_summary"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipeline, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipeline"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variables":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipeline"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/retry, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("retry"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/retry"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/pipelines/{pipeline_id}/cancel, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pipelines"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("cancel"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/pipelines/{pipeline_id}/cancel"
)
req_collection.add_request(request)

# Endpoint: /application/plan_limits, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("application"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("plan_limits"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("plan_name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/application/plan_limits"
)
req_collection.add_request(request)

# Endpoint: /application/plan_limits, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("application"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("plan_limits"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "plan_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ci_pipeline_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_active_jobs":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_active_pipelines":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_project_subscriptions":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_pipeline_schedules":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_needs_size_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_registered_group_runners":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "ci_registered_project_runners":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "conan_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "generic_packages_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "helm_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "maven_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "npm_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "nuget_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "pypi_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "terraform_module_max_file_size":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "storage_size_limit":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/application/plan_limits"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/access_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/access_tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/access_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_date("2019-06-26", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidaccess_tokenspost,
            'dependencies':
            [
                _projects__id__access_tokens_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/access_tokens"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/access_tokens/{token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__access_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/access_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/access_tokens/{token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("access_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__access_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/access_tokens/{token_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/badges"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "link_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "image_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidbadgespost,
            'dependencies':
            [
                _projects__id__badges_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/badges"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges/{badge_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges/{badge_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "link_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "image_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges/{badge_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__badges_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/badges/{badge_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/badges/render, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("badges"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("render"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("link_url="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("image_url="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/badges/render"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/clusters, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/clusters"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/clusters/{cluster_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__clusters__cluster_id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/clusters/{cluster_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("cluster_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "domain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "management_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "managed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[api_url]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[token]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[ca_cert]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[namespace]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidclusterscluster_idput,
            'dependencies':
            [
                _projects__id__clusters__cluster_id__put_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/clusters/{cluster_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__clusters__cluster_id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/clusters/{cluster_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/clusters/user, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("clusters"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "domain":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "management_project_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "managed":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[api_url]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[token]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[ca_cert]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[namespace]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "platform_kubernetes_attributes[authorization_type]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidclustersuserpost,
            'dependencies':
            [
                _projects__id__clusters_user_post_enabled.writer(),
                _projects__id__clusters_user_post_id.writer(),
                _projects__id__clusters_user_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/clusters/user"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/export, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("export"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "upload":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(""",
    "upload[url]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "upload[http_method]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/export"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/export, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("export"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/export"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/export/download, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("export"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("download"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/export/download"
)
req_collection.add_request(request)

# Endpoint: /projects/import, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("import"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "namespace":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "overwrite":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "override_params":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/import"
)
req_collection.add_request(request)

# Endpoint: /projects/remote-import, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote-import"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "namespace":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "overwrite":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "override_params":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/remote-import"
)
req_collection.add_request(request)

# Endpoint: /projects/remote-import-s3, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote-import-s3"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "namespace":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "region":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "bucket_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "access_key_id":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "secret_access_key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/remote-import-s3"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/import, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("import"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/import"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/variables, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/variables"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/variables, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidvariablespost,
            'dependencies':
            [
                _projects__id__variables_post_key.writer()
            ]
        }

    },

],
requestId="/projects/{id}/variables"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/variables/{key}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("filter="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/variables/{key}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "value":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "variable_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "protected":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "masked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "environment_scope":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "filter":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/variables/{key}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("variables"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__variables_post_key.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("filter="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/variables/{key}"
)
req_collection.add_request(request)

# Endpoint: /project_repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("project_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/project_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /project_repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("project_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "source_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/project_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /projects/{project_id}/repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{project_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /projects/{project_id}/repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsproject_idrepository_storage_movespost,
            'dependencies':
            [
                _projects__project_id__repository_storage_moves_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{project_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /project_repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("project_repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/project_repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{project_id}/repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__project_id__repository_storage_moves_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{project_id}/repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "files:file_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidsnippetspost,
            'dependencies':
            [
                _projects__id__snippets_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/snippets"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "files:action":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:file_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:previous_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/raw"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snippets/{snippet_id}/user_agent_detail, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_agent_detail"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snippets/{snippet_id}/user_agent_detail"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/templates/{type}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("templates"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/templates/{type}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/templates/{type}/{name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("templates"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("source_template_project_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("project="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("fullname="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/templates/{type}/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/vulnerabilities, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/vulnerabilities"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/vulnerabilities, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "finding_id":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/vulnerabilities"
)
req_collection.add_request(request)

# Endpoint: /projects, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/projects, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("id_after="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("id_before="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("membership="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("starred="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("visibility="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_issues_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_requests_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_programming_language="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/projects"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/starred_projects, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("starred_projects"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("membership="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("starred="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("visibility="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_issues_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_requests_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/starred_projects"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("license="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "avatar":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidput,
            'dependencies':
            [
                _projects__id__put_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/users, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("skip_users="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/users"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/groups, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("shared_min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("shared_visible_only="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("skip_groups="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_shared="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/groups"
)
req_collection.add_request(request)

# Endpoint: /projects/user/{user_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_name.reader(), quoted=True),
    primitives.restler_static_string(""",
    "allow_merge_on_skipped_pipeline":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "analytics_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "approvals_before_merge":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "auto_cancel_pending_pipelines":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "auto_devops_deploy_strategy":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "auto_devops_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "autoclose_referenced_issues":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "build_git_strategy":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "build_timeout":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "builds_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ci_config_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "container_registry_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "container_registry_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "default_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "emails_disabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "external_authorization_classification_label":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "forking_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "group_with_project_templates_id":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_id.reader(), quoted=False),
    primitives.restler_static_string(""",
    "import_url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "initialize_with_readme":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "issues_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "issues_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "jobs_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "lfs_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "merge_commit_template":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_method":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_requests_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "merge_requests_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "mirror_trigger_builds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "mirror":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "namespace_id":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_id.reader(), quoted=False),
    primitives.restler_static_string(""",
    "only_allow_merge_if_all_discussions_are_resolved":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "only_allow_merge_if_pipeline_succeeds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "operations_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "packages_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "pages_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "printing_merge_request_link_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "public_builds":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "remove_source_branch_after_merge":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "repository_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "repository_storage":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "request_access_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "requirements_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "resolve_outdated_diff_discussions":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "security_and_compliance_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "shared_runners_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "snippets_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "snippets_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string(""",
    "squash_commit_template":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "squash_option":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "suggestion_commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tag_list":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "template_name":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_name.reader(), quoted=True),
    primitives.restler_static_string(""",
    "topics":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "use_custom_template":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_enabled":"""),
    primitives.restler_static_string(_projects__id__clusters_user_post_enabled.reader(), quoted=False),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/user/{user_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/fork, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("fork"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "mr_default_target_self":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "namespace_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "namespace_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "namespace":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    ,
    "path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/fork"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/fork, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("fork"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/fork"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/forks, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("forks"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("archived="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("membership="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("min_access_level="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("owned="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("simple="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("starred="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("statistics="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("visibility="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_custom_attributes="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_issues_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("with_merge_requests_enabled="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/forks"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/star, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("star"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/star"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/unstar, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unstar"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/unstar"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/starrers, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("starrers"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/starrers"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/languages, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("languages"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/languages"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/archive, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("archive"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/archive"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/unarchive, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unarchive"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/unarchive"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/restore, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("restore"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/restore"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/uploads, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("uploads"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "file":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/uploads"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/share, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("share"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "group_access":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "group_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/share"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/share/{group_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("share"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/share/{group_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/import_project_members/{project_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("import_project_members"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/import_project_members/{project_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/hooks, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/hooks"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/hooks, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_static_string(_hooks_post_0_url.reader(), quoted=True),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "deployment_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_static_string(_hooks_post_0_enable_ssl_verification.reader(), quoted=False),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "job_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_static_string(_hooks_post_0_merge_requests_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events_branch_filter":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_static_string(_hooks_post_0_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "releases_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_static_string(_hooks_post_0_tag_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/hooks"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/hooks/{hook_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/hooks/{hook_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("hook_id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_static_string(_hooks_post_0_url.reader(), quoted=True),
    primitives.restler_static_string(""",
    "confidential_issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "confidential_note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "deployment_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_static_string(_hooks_post_0_enable_ssl_verification.reader(), quoted=False),
    primitives.restler_static_string(""",
    "issues_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "job_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_static_string(_hooks_post_0_merge_requests_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "note_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "pipeline_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "push_events_branch_filter":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_static_string(_hooks_post_0_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "releases_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_static_string(_hooks_post_0_tag_push_events.reader(), quoted=False),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "wiki_page_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/hooks/{hook_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/hooks/{hook_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/fork/{forked_from_id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("fork"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/fork/{forked_from_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/housekeeping, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("housekeeping"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/housekeeping"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/push_rule, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/push_rule, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "author_email_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_author_email_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "branch_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_branch_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "commit_committer_check":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "commit_message_negative_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_negative_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "commit_message_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "deny_delete_tag":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_deny_delete_tag.reader(), quoted=False),
    primitives.restler_static_string(""",
    "file_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_file_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "max_file_size":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_max_file_size.reader(), quoted=False),
    primitives.restler_static_string(""",
    "member_check":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_member_check.reader(), quoted=False),
    primitives.restler_static_string(""",
    "prevent_secrets":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_prevent_secrets.reader(), quoted=False),
    primitives.restler_static_string(""",
    "reject_unsigned_commits":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/push_rule, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "author_email_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_author_email_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "branch_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_branch_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "commit_committer_check":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "commit_message_negative_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_negative_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "commit_message_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_commit_message_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "deny_delete_tag":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_deny_delete_tag.reader(), quoted=False),
    primitives.restler_static_string(""",
    "file_name_regex":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_file_name_regex.reader(), quoted=True),
    primitives.restler_static_string(""",
    "max_file_size":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_max_file_size.reader(), quoted=False),
    primitives.restler_static_string(""",
    "member_check":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_member_check.reader(), quoted=False),
    primitives.restler_static_string(""",
    "prevent_secrets":"""),
    primitives.restler_static_string(_groups__id__push_rule_post_prevent_secrets.reader(), quoted=False),
    primitives.restler_static_string(""",
    "reject_unsigned_commits":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/push_rule, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("push_rule"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/push_rule"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/transfer, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("transfer"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "namespace":
        """),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("""
    }"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/transfer"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/mirror/pull, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mirror"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("pull"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/mirror/pull"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/snapshot, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snapshot"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("wiki="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/snapshot"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/storage, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("storage"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/storage"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_branches, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_branches"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_branches"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_branches, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_branches"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "merge_access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "unprotect_access_level":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "allow_force_push":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "allowed_to_push":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "allowed_to_merge":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "allowed_to_unprotect":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "code_owner_approval_required":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidprotected_branchespost,
            'dependencies':
            [
                _projects__id__protected_branches_post_code_owner_approval_required.writer(),
                _projects__id__protected_branches_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/protected_branches"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_branches/{name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_branches"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_branches_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_branches/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_branches/{name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_branches"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_branches_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_branches/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_branches/{name}, method: Patch
request = requests.Request([
    primitives.restler_static_string("PATCH "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_branches"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_branches_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "code_owner_approval_required":"""),
    primitives.restler_static_string(_projects__id__protected_branches_post_code_owner_approval_required.reader(), quoted=False),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_branches/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_environments, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_environments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_environments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_environments, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_environments"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "deploy_access_levels":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "required_approval_count":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "approval_rules":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidprotected_environmentspost,
            'dependencies':
            [
                _projects__id__protected_environments_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/protected_environments"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_environments/{name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_environments_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_environments/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_environments/{name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_environments"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_environments_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_environments/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_tags, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_tags"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_tags, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_tags"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "create_access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidprotected_tagspost,
            'dependencies':
            [
                _projects__id__protected_tags_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/protected_tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_tags/{name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_tags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_tags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_tags/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/protected_tags/{name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("protected_tags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__protected_tags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/protected_tags/{name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("include_html_description="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "tag_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "milestones":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "assets:links":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "assets:links:name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assets:links:url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assets:links:filepath":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "assets:links:link_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "released_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidreleasespost,
            'dependencies':
            [
                _projects__id__releases_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/releases"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("include_html_description="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "milestones":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "released_at":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/evidence, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("evidence"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}/evidence"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/assets/links, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("links"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}/assets/links"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/assets/links, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("links"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "filepath":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "link_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidreleasestag_nameassetslinkspost,
            'dependencies':
            [
                _projects__id__releases__tag_name__assets_links_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/releases/{tag_name}/assets/links"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/assets/links/{link_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("links"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases__tag_name__assets_links_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}/assets/links/{link_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/assets/links/{link_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("links"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases__tag_name__assets_links_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "filepath":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "link_type":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}/assets/links/{link_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/releases/{tag_name}/assets/links/{link_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("releases"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases_post_name.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("assets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("links"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__releases__tag_name__assets_links_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/releases/{tag_name}/assets/links/{link_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/remote_mirrors, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote_mirrors"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/remote_mirrors"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/remote_mirrors, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote_mirrors"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "only_protected_branches":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "keep_divergent_refs":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidremote_mirrorspost,
            'dependencies':
            [
                _projects__id__remote_mirrors_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/remote_mirrors"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/remote_mirrors/{mirror_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote_mirrors"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__remote_mirrors_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/remote_mirrors/{mirror_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/remote_mirrors/{mirror_id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote_mirrors"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__remote_mirrors_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "enabled":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "only_protected_branches":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "keep_divergent_refs":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/remote_mirrors/{mirror_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/remote_mirrors/{mirror_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("remote_mirrors"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__remote_mirrors_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/remote_mirrors/{mirror_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/tree, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tree"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("recursive="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("per_page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("pagination="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("page_token="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/tree"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/blobs/{sha}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("blobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/blobs/{sha}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/blobs/{sha}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("blobs"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/blobs/{sha}/raw"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/archive[.format], method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("archive[.format]"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sha="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("path="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/archive[.format]"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/compare, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("compare"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("from="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("to="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("from_project_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("straight="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/compare"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/contributors, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("contributors"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/contributors"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/merge_base, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_base"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("refs="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/merge_base"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/changelog, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("changelog"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "version":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "from":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "to":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "date":"""),
    primitives.restler_fuzzable_datetime("2019-06-26T20:20:39+00:00", quoted=True),
    primitives.restler_static_string(""",
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "trailer":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/changelog"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/changelog, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("changelog"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("version="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("from="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("to="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("date="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("trailer="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/changelog"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_files__file_path__put_file_path.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/files/{file_path}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_files__file_path__put_file_path.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "start_branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "encoding":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_email":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "execute_filemode":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidrepositoryfilesfile_pathpost,
            'dependencies':
            [
                _projects__id__repository_files__file_path__post_branch.writer()
            ]
        }

    },

],
requestId="/projects/{id}/repository/files/{file_path}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("file_path", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_static_string(_projects__id__repository_files__file_path__post_branch.reader(), quoted=True),
    primitives.restler_static_string(""",
    "start_branch":"""),
    primitives.restler_static_string(_projects__id__repository_files__file_path__post_branch.reader(), quoted=True),
    primitives.restler_static_string(""",
    "encoding":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_email":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "author_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "last_commit_id":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "execute_filemode":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidrepositoryfilesfile_pathput,
            'dependencies':
            [
                _projects__id__repository_files__file_path__put_file_path.writer()
            ]
        }

    },

],
requestId="/projects/{id}/repository/files/{file_path}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_files__file_path__put_file_path.reader(), quoted=False),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("start_branch="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_email="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_name="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("commit_message="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("last_commit_id="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/files/{file_path}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}/blame, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_files__file_path__put_file_path.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("blame"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("range="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("range[start]="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("range[end]="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/files/{file_path}/blame"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/files/{file_path}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_files__file_path__put_file_path.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/files/{file_path}/raw"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/submodules/{submodule}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("submodules"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("submodule", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "branch":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_sha":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/submodules/{submodule}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/resource_label_events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/resource_label_events"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/issues/{issue_iid}/resource_label_events/{resource_label_event_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("issues"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__issues_post_epic_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/issues/{issue_iid}/resource_label_events/{resource_label_event_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/resource_label_events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/resource_label_events"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/epics/{epic_id}/resource_label_events/{resource_label_event_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("epics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__epics_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/epics/{epic_id}/resource_label_events/{resource_label_event_id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/resource_label_events, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/resource_label_events"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/resource_label_events/{resource_label_event_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resource_label_events"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/resource_label_events/{resource_label_event_id}"
)
req_collection.add_request(request)

# Endpoint: /runners, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("paused="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag_list="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners"
)
req_collection.add_request(request)

# Endpoint: /runners, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "info":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "paused":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "locked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "run_untagged":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_list":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "maximum_timeout":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "maintainer_note":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "maintenance_note":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_runnerspost,
            'dependencies':
            [
                _runners_post_id.writer()
            ]
        }

    },

],
requestId="/runners"
)
req_collection.add_request(request)

# Endpoint: /runners, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("token="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners"
)
req_collection.add_request(request)

# Endpoint: /runners/all, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("all"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("paused="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag_list="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/all"
)
req_collection.add_request(request)

# Endpoint: /runners/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_runners_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/{id}"
)
req_collection.add_request(request)

# Endpoint: /runners/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_runners_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "active":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "paused":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_list":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "run_untagged":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "locked":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "access_level":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "maximum_timeout":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/{id}"
)
req_collection.add_request(request)

# Endpoint: /runners/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_runners_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/{id}"
)
req_collection.add_request(request)

# Endpoint: /runners/{id}/jobs, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_runners_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("jobs"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/{id}/jobs"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/runners, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("paused="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag_list="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/runners"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/runners, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "runner_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidrunnerspost,
            'dependencies':
            [
                _projects__id__runners_post_id.writer()
            ]
        }

    },

],
requestId="/projects/{id}/runners"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/runners/{runner_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__runners_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/runners/{runner_id}"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/runners, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("status="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("paused="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("tag_list="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/runners"
)
req_collection.add_request(request)

# Endpoint: /runners/verify, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("verify"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/verify"
)
req_collection.add_request(request)

# Endpoint: /runners/reset_registration_token, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_registration_token"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/reset_registration_token"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/runners/reset_registration_token, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_registration_token"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/runners/reset_registration_token"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/runners/reset_registration_token, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_registration_token"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/runners/reset_registration_token"
)
req_collection.add_request(request)

# Endpoint: /runners/{id}/reset_authentication_token, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_runners_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_authentication_token"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/{id}/reset_authentication_token"
)
req_collection.add_request(request)

# Endpoint: /runners/reset_authentication_token, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("runners"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reset_authentication_token"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/runners/reset_authentication_token"
)
req_collection.add_request(request)

# Endpoint: /search, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("search"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/search"
)
req_collection.add_request(request)

# Endpoint: /groups/{id}/search, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_groups__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("search"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/groups/{id}/search"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/search, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("search"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("ref="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidential="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/search"
)
req_collection.add_request(request)

# Endpoint: /application/settings, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("application"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/application/settings"
)
req_collection.add_request(request)

# Endpoint: /application/settings, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("application"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("settings"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/application/settings"
)
req_collection.add_request(request)

# Endpoint: /sidekiq/queue_metrics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("sidekiq"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("queue_metrics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/sidekiq/queue_metrics"
)
req_collection.add_request(request)

# Endpoint: /sidekiq/process_metrics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("sidekiq"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("process_metrics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/sidekiq/process_metrics"
)
req_collection.add_request(request)

# Endpoint: /sidekiq/job_stats, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("sidekiq"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("job_stats"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/sidekiq/job_stats"
)
req_collection.add_request(request)

# Endpoint: /sidekiq/compound_metrics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("sidekiq"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("compound_metrics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/sidekiq/compound_metrics"
)
req_collection.add_request(request)

# Endpoint: /snippet_repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippet_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippet_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /snippet_repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippet_repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "source_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippet_repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /snippets/{snippet_id}/repository_storage_moves, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{snippet_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /snippets/{snippet_id}/repository_storage_moves, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "destination_storage_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_snippetssnippet_idrepository_storage_movespost,
            'dependencies':
            [
                _snippets__snippet_id__repository_storage_moves_post_id.writer()
            ]
        }

    },

],
requestId="/snippets/{snippet_id}/repository_storage_moves"
)
req_collection.add_request(request)

# Endpoint: /snippet_repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippet_repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippet_repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /snippets/{snippet_id}/repository_storage_moves/{repository_storage_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository_storage_moves"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets__snippet_id__repository_storage_moves_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{snippet_id}/repository_storage_moves/{repository_storage_id}"
)
req_collection.add_request(request)

# Endpoint: /snippets, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets"
)
req_collection.add_request(request)

# Endpoint: /snippets, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "files:file_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_snippetspost,
            'dependencies':
            [
                _snippets_post_id.writer()
            ]
        }

    },

],
requestId="/snippets"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "file_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "visibility":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ],
    "files:action":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:file_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:previous_path":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "files:content":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}/raw"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}/files/{ref}/{file_path}/raw, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("files"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("raw"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}/files/{ref}/{file_path}/raw"
)
req_collection.add_request(request)

# Endpoint: /snippets/public, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("public"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("per_page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/public"
)
req_collection.add_request(request)

# Endpoint: /snippets/{id}/user_agent_detail, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("snippets"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_snippets_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_agent_detail"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/snippets/{id}/user_agent_detail"
)
req_collection.add_request(request)

# Endpoint: /application/statistics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("application"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("statistics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/application/statistics"
)
req_collection.add_request(request)

# Endpoint: /suggestions/{id}/apply, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("suggestions"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("apply"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "commit_message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/suggestions/{id}/apply"
)
req_collection.add_request(request)

# Endpoint: /hooks, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/hooks"
)
req_collection.add_request(request)

# Endpoint: /hooks, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "url":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "token":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "tag_push_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "merge_requests_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "repository_update_events":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string(""",
    "enable_ssl_verification":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_hookspost,
            'dependencies':
            [
                _hooks_post_0_enable_ssl_verification.writer(),
                _hooks_post_0_id.writer(),
                _hooks_post_0_merge_requests_events.writer(),
                _hooks_post_0_push_events.writer(),
                _hooks_post_0_tag_push_events.writer(),
                _hooks_post_0_url.writer()
            ]
        }

    },

],
requestId="/hooks"
)
req_collection.add_request(request)

# Endpoint: /hooks/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_hooks_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/hooks/{id}"
)
req_collection.add_request(request)

# Endpoint: /hooks/{id}, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_hooks_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/hooks/{id}"
)
req_collection.add_request(request)

# Endpoint: /hooks/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("hooks"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_hooks_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/hooks/{id}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/tags, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/tags, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "tag_name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "ref":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_projectsidrepositorytagspost,
            'dependencies':
            [
                _projects__id__repository_tags_post_name.writer()
            ]
        }

    },

],
requestId="/projects/{id}/repository/tags"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/tags/{tag_name}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_tags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/tags/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/repository/tags/{tag_name}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("repository"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("tags"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__repository_tags_post_name.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/repository/tags/{tag_name}"
)
req_collection.add_request(request)

# Endpoint: /todos, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todos"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("action="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("author_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("project_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("group_id="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/todos"
)
req_collection.add_request(request)

# Endpoint: /todos/{id}/mark_as_done, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todos"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mark_as_done"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/todos/{id}/mark_as_done"
)
req_collection.add_request(request)

# Endpoint: /todos/mark_as_done, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("todos"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("mark_as_done"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/todos/mark_as_done"
)
req_collection.add_request(request)

# Endpoint: /topics, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("topics"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("per_page="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("search="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/topics"
)
req_collection.add_request(request)

# Endpoint: /topics, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("topics"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "avatar":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_topicspost,
            'dependencies':
            [
                _topics_post_id.writer()
            ]
        }

    },

],
requestId="/topics"
)
req_collection.add_request(request)

# Endpoint: /topics/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("topics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_topics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/topics/{id}"
)
req_collection.add_request(request)

# Endpoint: /topics/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("topics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_topics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "avatar":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "description":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/topics/{id}"
)
req_collection.add_request(request)

# Endpoint: /topics/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("topics"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_topics_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/topics/{id}"
)
req_collection.add_request(request)

# Endpoint: /usage_data/metric_definitions, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("usage_data"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("metric_definitions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/usage_data/metric_definitions"
)
req_collection.add_request(request)

# Endpoint: /usage_data/queries, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("usage_data"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("queries"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/usage_data/queries"
)
req_collection.add_request(request)

# Endpoint: /users, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("order_by="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("sort="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("two_factor="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("without_projects="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("admins="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("saml_provider_id="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users"
)
req_collection.add_request(request)

# Endpoint: /users, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users"
)
req_collection.add_request(request)

# Endpoint: /users/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_custom_payload_uuid4_suffix("id", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("hard_delete="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/identities/{provider}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("identities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/identities/{provider}"
)
req_collection.add_request(request)

# Endpoint: /user, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("sudo="),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user"
)
req_collection.add_request(request)

# Endpoint: /user/status, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("status"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/status"
)
req_collection.add_request(request)

# Endpoint: /user/status, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("status"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "emoji":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "message":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "clear_status_after":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/status"
)
req_collection.add_request(request)

# Endpoint: /users/{id_or_username}/status, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("status"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id_or_username}/status"
)
req_collection.add_request(request)

# Endpoint: /user/preferences, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("preferences"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/preferences"
)
req_collection.add_request(request)

# Endpoint: /user/preferences, method: Put
request = requests.Request([
    primitives.restler_static_string("PUT "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("preferences"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/preferences"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/follow, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("follow"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/follow"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/followers, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("followers"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/followers"
)
req_collection.add_request(request)

# Endpoint: /user_counts, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user_counts"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("assigned_issues="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("assigned_merge_requests="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("merge_requests="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("review_requested_merge_requests="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("todos="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user_counts"
)
req_collection.add_request(request)

# Endpoint: /user/keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/keys"
)
req_collection.add_request(request)

# Endpoint: /user/keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_userkeyspost,
            'dependencies':
            [
                _user_keys_post_expires_at.writer(),
                _user_keys_post_key.writer(),
                _user_keys_post_title.writer()
            ]
        }

    },

],
requestId="/user/keys"
)
req_collection.add_request(request)

# Endpoint: /users/{id_or_username}/keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id_or_username}/keys"
)
req_collection.add_request(request)

# Endpoint: /user/keys/{key_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /user/keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/keys/{key_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "title":"""),
    primitives.restler_static_string(_user_keys_post_title.reader(), quoted=True),
    primitives.restler_static_string(""",
    "key":"""),
    primitives.restler_static_string(_user_keys_post_key.reader(), quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_static_string(_user_keys_post_expires_at.reader(), quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/keys"
)
req_collection.add_request(request)

# Endpoint: /user/gpg_keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/gpg_keys"
)
req_collection.add_request(request)

# Endpoint: /user/gpg_keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_usergpg_keyspost,
            'dependencies':
            [
                _user_gpg_keys_post_0_id.writer()
            ]
        }

    },

],
requestId="/user/gpg_keys"
)
req_collection.add_request(request)

# Endpoint: /user/gpg_keys/{key_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_user_gpg_keys_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/gpg_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /user/gpg_keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_user_gpg_keys_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/gpg_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/gpg_keys, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/gpg_keys"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/gpg_keys, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "key_id":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_usersidgpg_keyspost,
            'dependencies':
            [
                _users__id__gpg_keys_post_0_id.writer()
            ]
        }

    },

],
requestId="/users/{id}/gpg_keys"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/gpg_keys/{key_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__id__gpg_keys_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/gpg_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/gpg_keys/{key_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("gpg_keys"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__id__gpg_keys_post_0_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/gpg_keys/{key_id}"
)
req_collection.add_request(request)

# Endpoint: /user/emails, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/emails"
)
req_collection.add_request(request)

# Endpoint: /user/emails, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "email":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_useremailspost,
            'dependencies':
            [
                _user_emails_post_email.writer(),
                _user_emails_post_id.writer()
            ]
        }

    },

],
requestId="/user/emails"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/emails, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/emails"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/emails, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "email":"""),
    primitives.restler_static_string(_user_emails_post_email.reader(), quoted=True),
    primitives.restler_static_string(""",
    "skip_confirmation":"""),
    primitives.restler_fuzzable_bool("true"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/emails"
)
req_collection.add_request(request)

# Endpoint: /user/emails/{email_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_user_emails_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/emails/{email_id}"
)
req_collection.add_request(request)

# Endpoint: /user/emails/{email_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_user_emails_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/emails/{email_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/emails/{email_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("emails"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/emails/{email_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/block, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("block"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/block"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/unblock, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unblock"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/unblock"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/deactivate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("deactivate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/deactivate"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/activate, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("activate"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/activate"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/ban, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("ban"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/ban"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/unban, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("unban"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/unban"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/impersonation_tokens, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("impersonation_tokens"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("state="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/impersonation_tokens"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/impersonation_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("impersonation_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_date("2019-06-26", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_usersuser_idimpersonation_tokenspost,
            'dependencies':
            [
                _users__user_id__impersonation_tokens_post_id.writer()
            ]
        }

    },

],
requestId="/users/{user_id}/impersonation_tokens"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/approve, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("approve"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/approve"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/reject, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("reject"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/reject"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/impersonation_tokens/{impersonation_token_id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("impersonation_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__user_id__impersonation_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/impersonation_tokens/{impersonation_token_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/impersonation_tokens/{impersonation_token_id}, method: Delete
request = requests.Request([
    primitives.restler_static_string("DELETE "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("impersonation_tokens"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_users__user_id__impersonation_tokens_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/impersonation_tokens/{impersonation_token_id}"
)
req_collection.add_request(request)

# Endpoint: /users/{user_id}/personal_access_tokens, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("personal_access_tokens"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "name":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "expires_at":"""),
    primitives.restler_fuzzable_date("2019-06-26", quoted=True),
    primitives.restler_static_string(""",
    "scopes":
    [
        """),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string("""
    ]}"""),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{user_id}/personal_access_tokens"
)
req_collection.add_request(request)

# Endpoint: /user/activities, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("user"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("activities"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("from="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/user/activities"
)
req_collection.add_request(request)

# Endpoint: /users/{id}/memberships, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("users"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("memberships"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/users/{id}/memberships"
)
req_collection.add_request(request)

# Endpoint: /version, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("version"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/version"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/merge_requests/{merge_request_iid}/visual_review_discussions, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("merge_requests"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__merge_requests_post_iid.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("visual_review_discussions"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_static_string("Content-Type: "),
    primitives.restler_static_string("application/json"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    primitives.restler_static_string("{"),
    primitives.restler_static_string("""
    "body":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position":"""),
    primitives.restler_fuzzable_object("{ \"fuzz\": false }"),
    primitives.restler_static_string(""",
    "position[base_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[start_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[head_sha]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[position_type]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[new_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[old_path]":"""),
    primitives.restler_fuzzable_string("fuzzstring", quoted=True),
    primitives.restler_static_string(""",
    "position[old_line]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[width]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[height]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[x]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string(""",
    "position[y]":"""),
    primitives.restler_fuzzable_int("1"),
    primitives.restler_static_string("}"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/merge_requests/{merge_request_iid}/visual_review_discussions"
)
req_collection.add_request(request)

# Endpoint: /vulnerabilities/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/vulnerabilities/{id}"
)
req_collection.add_request(request)

# Endpoint: /vulnerabilities/{id}/confirm, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("confirm"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/vulnerabilities/{id}/confirm"
)
req_collection.add_request(request)

# Endpoint: /vulnerabilities/{id}/resolve, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("resolve"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/vulnerabilities/{id}/resolve"
)
req_collection.add_request(request)

# Endpoint: /vulnerabilities/{id}/dismiss, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("dismiss"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/vulnerabilities/{id}/dismiss"
)
req_collection.add_request(request)

# Endpoint: /vulnerabilities/{id}/revert, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerabilities"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("revert"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/vulnerabilities/{id}/revert"
)
req_collection.add_request(request)

# Endpoint: /security/projects/{id}/vulnerability_exports, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("security"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_exports"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/security/projects/{id}/vulnerability_exports"
)
req_collection.add_request(request)

# Endpoint: /security/groups/{id}/vulnerability_exports, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("security"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("groups"),
    primitives.restler_static_string("/"),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_exports"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/security/groups/{id}/vulnerability_exports"
)
req_collection.add_request(request)

# Endpoint: /security/vulnerability_exports, method: Post
request = requests.Request([
    primitives.restler_static_string("POST "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("security"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_exports"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),
    
    {

        'post_send':
        {
            'parser': parse_securityvulnerability_exportspost,
            'dependencies':
            [
                _security_vulnerability_exports_post_id.writer()
            ]
        }

    },

],
requestId="/security/vulnerability_exports"
)
req_collection.add_request(request)

# Endpoint: /security/vulnerability_exports/{id}, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("security"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_exports"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_security_vulnerability_exports_post_id.reader(), quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/security/vulnerability_exports/{id}"
)
req_collection.add_request(request)

# Endpoint: /security/vulnerability_exports/{id}/download, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("security"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_exports"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_security_vulnerability_exports_post_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("download"),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/security/vulnerability_exports/{id}/download"
)
req_collection.add_request(request)

# Endpoint: /projects/{id}/vulnerability_findings, method: Get
request = requests.Request([
    primitives.restler_static_string("GET "),
    primitives.restler_basepath("/api/v4"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("projects"),
    primitives.restler_static_string("/"),
    primitives.restler_static_string(_projects__id__put_id.reader(), quoted=False),
    primitives.restler_static_string("/"),
    primitives.restler_static_string("vulnerability_findings"),
    primitives.restler_static_string("?"),
    primitives.restler_static_string("report_type="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("scope="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("severity="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("confidence="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string("&"),
    primitives.restler_static_string("pipeline_id="),
    primitives.restler_fuzzable_string("fuzzstring", quoted=False),
    primitives.restler_static_string(" HTTP/1.1\r\n"),
    primitives.restler_static_string("Accept: application/json\r\n"),
    primitives.restler_static_string("Host: gitlab.com\r\n"),
    primitives.restler_refreshable_authentication_token("authentication_token_tag"),
    primitives.restler_static_string("\r\n"),

],
requestId="/projects/{id}/vulnerability_findings"
)
req_collection.add_request(request)
